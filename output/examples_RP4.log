09/23/2019 07:49:50 PM DEBUG [hold] Prop: V Duration: 2 Negation: False Props: set(['M', 'V'])
09/23/2019 07:49:50 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 V )
09/23/2019 07:49:50 PM DEBUG [hold] Prop: M Duration: 2 Negation: False Props: set(['M', 'V'])
09/23/2019 07:49:50 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 M )
09/23/2019 07:49:50 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 V ) 0 7 ) DFA2: (Eventually (Hold 2 M ) 0 7 )
09/23/2019 07:49:50 PM DEBUG [spec] spec: [H^2 V]^[0, 7] * [H^2 M]^[0, 7]
09/23/2019 07:49:50 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 V ) 0 7 ) (Eventually (Hold 2 M ) 0 7 ) )
Directed: True
Multi: False
Props: {'M': 1, 'V': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([6])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'V', 'weight': 0, 'label': u'V'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'V', 'weight': 0, 'label': u'V'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'V', 'weight': 0, 'label': u'V'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'M', 'weight': 0, 'label': u'M'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'M', 'weight': 0, 'label': u'M'}), (5, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (5, 6, {'input': set([1, 3]), 'guard': u'M', 'weight': 0, 'label': u'M'})]
		
09/23/2019 07:49:50 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([6])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([6])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([6])

09/23/2019 07:49:50 PM DEBUG [spec] No of nodes: 7
09/23/2019 07:49:50 PM DEBUG [spec] No of edges: 12
09/23/2019 07:49:50 PM DEBUG alphabet: {'M': 1, 'V': 2}
09/23/2019 07:49:50 PM DEBUG (0, 0): {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (0, 1): {'input': set([2, 3]), 'guard': u'V', 'weight': 0, 'label': u'V'}
09/23/2019 07:49:50 PM DEBUG (1, 0): {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (1, 2): {'input': set([2, 3]), 'guard': u'V', 'weight': 0, 'label': u'V'}
09/23/2019 07:49:50 PM DEBUG (2, 0): {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (2, 3): {'input': set([2, 3]), 'guard': u'V', 'weight': 0, 'label': u'V'}
09/23/2019 07:49:50 PM DEBUG (3, 3): {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (3, 4): {'input': set([1, 3]), 'guard': u'M', 'weight': 0, 'label': u'M'}
09/23/2019 07:49:50 PM DEBUG (4, 3): {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (4, 5): {'input': set([1, 3]), 'guard': u'M', 'weight': 0, 'label': u'M'}
09/23/2019 07:49:50 PM DEBUG (5, 3): {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (5, 6): {'input': set([1, 3]), 'guard': u'M', 'weight': 0, 'label': u'M'}
09/23/2019 07:49:50 PM DEBUG 
End of translate


09/23/2019 07:49:50 PM INFO The bound of formula "[H^2 V]^[0, 7] * [H^2 M]^[0, 7]" is (5, 15)!
09/23/2019 07:49:50 PM INFO Translated formula "[H^2 V]^[0, 7] * [H^2 M]^[0, 7]" to infinity DFA of size (7, 12)!
09/23/2019 07:49:50 PM DEBUG [hold] Prop: N Duration: 2 Negation: False Props: set(['X', 'N'])
09/23/2019 07:49:50 PM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 N )
09/23/2019 07:49:50 PM DEBUG [hold] Prop: X Duration: 2 Negation: False Props: set(['X', 'N'])
09/23/2019 07:49:50 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 X )
09/23/2019 07:49:50 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 N ) 0 8 ) DFA2: (Eventually (Hold 2 X ) 0 7 )
09/23/2019 07:49:50 PM DEBUG [spec] spec: [H^2 N]^[0, 8] * [H^2 X]^[0, 7]
09/23/2019 07:49:50 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 N ) 0 8 ) (Eventually (Hold 2 X ) 0 7 ) )
Directed: True
Multi: False
Props: {'X': 1, 'N': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([6])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'N', 'weight': 0, 'label': u'N'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'N', 'weight': 0, 'label': u'N'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'N', 'weight': 0, 'label': u'N'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'X', 'weight': 0, 'label': u'X'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'X', 'weight': 0, 'label': u'X'}), (5, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (5, 6, {'input': set([1, 3]), 'guard': u'X', 'weight': 0, 'label': u'X'})]
		
09/23/2019 07:49:50 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([6])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([6])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([6])

09/23/2019 07:49:50 PM DEBUG [spec] No of nodes: 7
09/23/2019 07:49:50 PM DEBUG [spec] No of edges: 12
09/23/2019 07:49:50 PM DEBUG alphabet: {'X': 1, 'N': 2}
09/23/2019 07:49:50 PM DEBUG (0, 0): {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (0, 1): {'input': set([2, 3]), 'guard': u'N', 'weight': 0, 'label': u'N'}
09/23/2019 07:49:50 PM DEBUG (1, 0): {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (1, 2): {'input': set([2, 3]), 'guard': u'N', 'weight': 0, 'label': u'N'}
09/23/2019 07:49:50 PM DEBUG (2, 0): {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (2, 3): {'input': set([2, 3]), 'guard': u'N', 'weight': 0, 'label': u'N'}
09/23/2019 07:49:50 PM DEBUG (3, 3): {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (3, 4): {'input': set([1, 3]), 'guard': u'X', 'weight': 0, 'label': u'X'}
09/23/2019 07:49:50 PM DEBUG (4, 3): {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (4, 5): {'input': set([1, 3]), 'guard': u'X', 'weight': 0, 'label': u'X'}
09/23/2019 07:49:50 PM DEBUG (5, 3): {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (5, 6): {'input': set([1, 3]), 'guard': u'X', 'weight': 0, 'label': u'X'}
09/23/2019 07:49:50 PM DEBUG 
End of translate


09/23/2019 07:49:50 PM INFO The bound of formula "[H^2 N]^[0, 8] * [H^2 X]^[0, 7]" is (5, 16)!
09/23/2019 07:49:50 PM INFO Translated formula "[H^2 N]^[0, 8] * [H^2 X]^[0, 7]" to infinity DFA of size (7, 12)!
09/23/2019 07:49:50 PM DEBUG [hold] Prop: f Duration: 2 Negation: False Props: set(['K', 'f'])
09/23/2019 07:49:50 PM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 f )
09/23/2019 07:49:50 PM DEBUG [hold] Prop: K Duration: 3 Negation: False Props: set(['K', 'f'])
09/23/2019 07:49:50 PM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 3 K )
09/23/2019 07:49:50 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 f ) 0 8 ) DFA2: (Eventually (Hold 3 K ) 0 10 )
09/23/2019 07:49:50 PM DEBUG [spec] spec: [H^2 f]^[0, 8] * [H^3 K]^[0, 10]
09/23/2019 07:49:50 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 f ) 0 8 ) (Eventually (Hold 3 K ) 0 10 ) )
Directed: True
Multi: False
Props: {'K': 1, 'f': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([7])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'f', 'weight': 0, 'label': u'f'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'f', 'weight': 0, 'label': u'f'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'f', 'weight': 0, 'label': u'f'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'K', 'weight': 0, 'label': u'K'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'K', 'weight': 0, 'label': u'K'}), (5, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (5, 6, {'input': set([1, 3]), 'guard': u'K', 'weight': 0, 'label': u'K'}), (6, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (6, 7, {'input': set([1, 3]), 'guard': u'K', 'weight': 0, 'label': u'K'})]
		
09/23/2019 07:49:50 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([7])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([7])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([7])

09/23/2019 07:49:50 PM DEBUG [spec] No of nodes: 8
09/23/2019 07:49:50 PM DEBUG [spec] No of edges: 14
09/23/2019 07:49:50 PM DEBUG alphabet: {'K': 1, 'f': 2}
09/23/2019 07:49:50 PM DEBUG (0, 0): {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (0, 1): {'input': set([2, 3]), 'guard': u'f', 'weight': 0, 'label': u'f'}
09/23/2019 07:49:50 PM DEBUG (1, 0): {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (1, 2): {'input': set([2, 3]), 'guard': u'f', 'weight': 0, 'label': u'f'}
09/23/2019 07:49:50 PM DEBUG (2, 0): {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (2, 3): {'input': set([2, 3]), 'guard': u'f', 'weight': 0, 'label': u'f'}
09/23/2019 07:49:50 PM DEBUG (3, 3): {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (3, 4): {'input': set([1, 3]), 'guard': u'K', 'weight': 0, 'label': u'K'}
09/23/2019 07:49:50 PM DEBUG (4, 3): {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (4, 5): {'input': set([1, 3]), 'guard': u'K', 'weight': 0, 'label': u'K'}
09/23/2019 07:49:50 PM DEBUG (5, 3): {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (5, 6): {'input': set([1, 3]), 'guard': u'K', 'weight': 0, 'label': u'K'}
09/23/2019 07:49:50 PM DEBUG (6, 3): {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
09/23/2019 07:49:50 PM DEBUG (6, 7): {'input': set([1, 3]), 'guard': u'K', 'weight': 0, 'label': u'K'}
09/23/2019 07:49:50 PM DEBUG 
End of translate


09/23/2019 07:49:50 PM INFO The bound of formula "[H^2 f]^[0, 8] * [H^3 K]^[0, 10]" is (6, 19)!
09/23/2019 07:49:50 PM INFO Translated formula "[H^2 f]^[0, 8] * [H^3 K]^[0, 10]" to infinity DFA of size (8, 14)!
09/23/2019 07:49:50 PM DEBUG 

Start policy computation

09/23/2019 07:49:50 PM DEBUG [extend_ts] TS: (34, 140) ETS:(34, 140)
09/23/2019 07:49:50 PM DEBUG [extend_ts] TS: (34, 140) ETS:(34, 140)
09/23/2019 07:49:50 PM DEBUG [extend_ts] TS: (34, 140) ETS:(34, 140)
09/23/2019 07:49:50 PM INFO Constructing product automaton with infinity DFA!
09/23/2019 07:49:50 PM INFO Product automaton size is: (71, 288)
09/23/2019 07:49:50 PM DEBUG ('W', 3) -> [('W', 3), ('V', 3), ('Q', 3), ('X', 3), ('c', 3)]
09/23/2019 07:49:50 PM DEBUG ('h', 0) -> [('b', 0), ('Base2', 0), ('h', 0), ('g', 0)]
09/23/2019 07:49:50 PM DEBUG ('A', 0) -> [('Base3', 0), ('A', 0), ('G', 0)]
09/23/2019 07:49:50 PM DEBUG ('b', 3) -> [('V', 3), ('a', 3), ('h', 3), ('c', 3), ('b', 3)]
09/23/2019 07:49:50 PM DEBUG ('T', 0) -> [('Z', 0), ('S', 0), ('N', 0), ('T', 0)]
09/23/2019 07:49:50 PM DEBUG ('F', 3) -> [('F', 3), ('E', 3), ('L', 3)]
09/23/2019 07:49:50 PM DEBUG ('N', 3) -> [('O', 3), ('N', 3), ('H', 3), ('M', 4), ('T', 3)]
09/23/2019 07:49:50 PM DEBUG ('H', 3) -> [('G', 3), ('N', 3), ('I', 3), ('H', 3), ('Base3', 3)]
09/23/2019 07:49:50 PM DEBUG ('G', 0) -> [('H', 0), ('A', 0), ('G', 0), ('M', 0)]
09/23/2019 07:49:50 PM DEBUG ('J', 3) -> [('I', 3), ('P', 3), ('K', 3), ('J', 3), ('D', 3)]
09/23/2019 07:49:50 PM DEBUG ('g', 3) -> [('g', 3), ('f', 3), ('a', 3), ('h', 3)]
09/23/2019 07:49:50 PM DEBUG ('Q', 0) -> [('K', 0), ('P', 0), ('Q', 0), ('W', 0)]
09/23/2019 07:49:50 PM DEBUG ('C', 3) -> [('I', 3), ('C', 3), ('Base3', 3), ('D', 3)]
09/23/2019 07:49:50 PM DEBUG ('d', 0) -> [('j', 0), ('c', 0), ('X', 0), ('d', 0)]
09/23/2019 07:49:50 PM DEBUG ('V', 1) -> [('b', 0), ('P', 0), ('W', 0), ('V', 2)]
09/23/2019 07:49:50 PM DEBUG ('X', 3) -> [('W', 3), ('X', 3), ('d', 3)]
09/23/2019 07:49:50 PM DEBUG ('W', 0) -> [('c', 0), ('X', 0), ('Q', 0), ('W', 0), ('V', 1)]
09/23/2019 07:49:50 PM DEBUG ('D', 3) -> [('C', 3), ('J', 3), ('E', 3), ('D', 3)]
09/23/2019 07:49:50 PM DEBUG ('Z', 0) -> [('Z', 0), ('Y', 0), ('f', 0), ('a', 0), ('T', 0)]
09/23/2019 07:49:50 PM DEBUG ('I', 3) -> [('O', 3), ('I', 3), ('H', 3), ('C', 3), ('J', 3)]
09/23/2019 07:49:50 PM DEBUG ('a', 0) -> [('Z', 0), ('b', 0), ('a', 0), ('g', 0)]
09/23/2019 07:49:50 PM DEBUG ('Base2', 3) -> [('c', 3), ('h', 3), ('Base2', 3), ('j', 3)]
09/23/2019 07:49:50 PM DEBUG ('M', 0) -> [('S', 0), ('N', 0), ('G', 0), ('M', 0)]
09/23/2019 07:49:50 PM DEBUG ('P', 0) -> [('J', 0), ('P', 0), ('Q', 0), ('O', 0), ('V', 1)]
09/23/2019 07:49:50 PM DEBUG ('h', 3) -> [('g', 3), ('h', 3), ('Base2', 3), ('b', 3)]
09/23/2019 07:49:50 PM DEBUG ('g', 0) -> [('h', 0), ('a', 0), ('f', 0), ('g', 0)]
09/23/2019 07:49:50 PM DEBUG ('T', 3) -> [('N', 3), ('S', 3), ('Z', 3), ('T', 3)]
09/23/2019 07:49:50 PM DEBUG ('j', 0) -> [('j', 0), ('Base2', 0), ('d', 0)]
09/23/2019 07:49:50 PM DEBUG ('C', 0) -> [('Base3', 0), ('C', 0), ('I', 0), ('D', 0)]
09/23/2019 07:49:50 PM DEBUG ('Y', 3) -> [('Y', 3), ('S', 3), ('Base', 3), ('Z', 3)]
09/23/2019 07:49:50 PM DEBUG ('M', 4) -> [('M', 5), ('G', 3), ('S', 3), ('N', 3)]
09/23/2019 07:49:50 PM DEBUG ('c', 3) -> [('W', 3), ('Base2', 3), ('c', 3), ('b', 3), ('d', 3)]
09/23/2019 07:49:50 PM DEBUG ('E', 3) -> [('F', 3), ('K', 3), ('E', 3), ('D', 3)]
09/23/2019 07:49:50 PM DEBUG ('Base', 0) -> [('Base', 0), ('Y', 0), ('f', 0)]
09/23/2019 07:49:50 PM DEBUG ('Z', 3) -> [('f', 3), ('Y', 3), ('T', 3), ('a', 3), ('Z', 3)]
09/23/2019 07:49:50 PM DEBUG ('L', 0) -> [('K', 0), ('F', 0), ('L', 0)]
09/23/2019 07:49:50 PM DEBUG ('d', 3) -> [('X', 3), ('c', 3), ('j', 3), ('d', 3)]
09/23/2019 07:49:50 PM DEBUG ('Base2', 0) -> [('j', 0), ('Base2', 0), ('h', 0), ('c', 0)]
09/23/2019 07:49:50 PM DEBUG ('f', 0) -> [('Z', 0), ('Base', 0), ('f', 0), ('g', 0)]
09/23/2019 07:49:50 PM DEBUG ('O', 3) -> [('O', 3), ('N', 3), ('I', 3), ('P', 3)]
09/23/2019 07:49:50 PM DEBUG ('I', 0) -> [('J', 0), ('C', 0), ('H', 0), ('I', 0), ('O', 0)]
09/23/2019 07:49:50 PM DEBUG ('j', 3) -> [('Base2', 3), ('j', 3), ('d', 3)]
09/23/2019 07:49:50 PM DEBUG ('F', 0) -> [('F', 0), ('L', 0), ('E', 0)]
09/23/2019 07:49:50 PM DEBUG ('M', 5) -> [('G', 3), ('N', 3), ('S', 3), ('M', 6)]
09/23/2019 07:49:50 PM DEBUG ('V', 3) -> [('W', 3), ('V', 3), ('P', 3), ('b', 3)]
09/23/2019 07:49:50 PM DEBUG ('J', 0) -> [('J', 0), ('K', 0), ('P', 0), ('I', 0), ('D', 0)]
09/23/2019 07:49:50 PM DEBUG ('P', 3) -> [('O', 3), ('V', 3), ('Q', 3), ('P', 3), ('J', 3)]
09/23/2019 07:49:50 PM DEBUG ('Base', 3) -> [('f', 3), ('Y', 3), ('Base', 3)]
09/23/2019 07:49:50 PM DEBUG ('Base3', 0) -> [('Base3', 0), ('C', 0), ('H', 0), ('A', 0)]
09/23/2019 07:49:50 PM DEBUG ('S', 3) -> [('Y', 3), ('M', 4), ('S', 3), ('T', 3)]
09/23/2019 07:49:50 PM DEBUG ('A', 3) -> [('G', 3), ('A', 3), ('Base3', 3)]
09/23/2019 07:49:50 PM DEBUG ('Y', 0) -> [('Base', 0), ('S', 0), ('Y', 0), ('Z', 0)]
09/23/2019 07:49:50 PM DEBUG ('K', 3) -> [('Q', 3), ('K', 3), ('J', 3), ('E', 3), ('L', 3)]
09/23/2019 07:49:50 PM DEBUG ('E', 0) -> [('K', 0), ('F', 0), ('D', 0), ('E', 0)]
09/23/2019 07:49:50 PM DEBUG ('f', 3) -> [('g', 3), ('f', 3), ('Z', 3), ('Base', 3)]
09/23/2019 07:49:50 PM DEBUG ('H', 0) -> [('Base3', 0), ('H', 0), ('I', 0), ('N', 0), ('G', 0)]
09/23/2019 07:49:50 PM DEBUG ('S', 0) -> [('S', 0), ('Y', 0), ('T', 0), ('M', 0)]
09/23/2019 07:49:50 PM DEBUG ('c', 0) -> [('b', 0), ('c', 0), ('W', 0), ('d', 0), ('Base2', 0)]
09/23/2019 07:49:50 PM DEBUG ('b', 0) -> [('b', 0), ('c', 0), ('h', 0), ('a', 0), ('V', 1)]
09/23/2019 07:49:50 PM DEBUG ('Q', 3) -> [('W', 3), ('Q', 3), ('P', 3), ('K', 3)]
09/23/2019 07:49:50 PM DEBUG ('L', 3) -> [('F', 3), ('K', 3), ('L', 3)]
09/23/2019 07:49:50 PM DEBUG ('N', 0) -> [('H', 0), ('N', 0), ('O', 0), ('T', 0), ('M', 0)]
09/23/2019 07:49:50 PM DEBUG ('M', 6) -> []
09/23/2019 07:49:50 PM DEBUG ('V', 2) -> [('b', 0), ('V', 3), ('P', 0), ('W', 0)]
09/23/2019 07:49:50 PM DEBUG ('G', 3) -> [('G', 3), ('A', 3), ('H', 3), ('M', 4)]
09/23/2019 07:49:50 PM DEBUG ('X', 0) -> [('X', 0), ('W', 0), ('d', 0)]
09/23/2019 07:49:50 PM DEBUG ('Base3', 3) -> [('A', 3), ('H', 3), ('C', 3), ('Base3', 3)]
09/23/2019 07:49:50 PM DEBUG ('D', 0) -> [('J', 0), ('C', 0), ('D', 0), ('E', 0)]
09/23/2019 07:49:50 PM DEBUG ('K', 0) -> [('J', 0), ('K', 0), ('Q', 0), ('L', 0), ('E', 0)]
09/23/2019 07:49:50 PM DEBUG ('a', 3) -> [('g', 3), ('a', 3), ('Z', 3), ('b', 3)]
09/23/2019 07:49:50 PM DEBUG ('O', 0) -> [('P', 0), ('I', 0), ('N', 0), ('O', 0)]
09/23/2019 07:49:50 PM INFO Constructing product automaton with infinity DFA!
09/23/2019 07:49:50 PM INFO Product automaton size is: (71, 288)
09/23/2019 07:49:50 PM DEBUG ('W', 3) -> [('W', 3), ('V', 3), ('Q', 3), ('c', 3), ('X', 4)]
09/23/2019 07:49:50 PM DEBUG ('h', 0) -> [('b', 0), ('Base2', 0), ('h', 0), ('g', 0)]
09/23/2019 07:49:50 PM DEBUG ('A', 0) -> [('Base3', 0), ('A', 0), ('G', 0)]
09/23/2019 07:49:50 PM DEBUG ('b', 3) -> [('V', 3), ('a', 3), ('h', 3), ('c', 3), ('b', 3)]
09/23/2019 07:49:50 PM DEBUG ('T', 0) -> [('Z', 0), ('S', 0), ('T', 0), ('N', 1)]
09/23/2019 07:49:50 PM DEBUG ('F', 3) -> [('F', 3), ('E', 3), ('L', 3)]
09/23/2019 07:49:50 PM DEBUG ('N', 3) -> [('O', 3), ('N', 3), ('H', 3), ('M', 3), ('T', 3)]
09/23/2019 07:49:50 PM DEBUG ('S', 0) -> [('S', 0), ('Y', 0), ('T', 0), ('M', 0)]
09/23/2019 07:49:50 PM DEBUG ('H', 3) -> [('G', 3), ('N', 3), ('I', 3), ('H', 3), ('Base3', 3)]
09/23/2019 07:49:50 PM DEBUG ('F', 0) -> [('F', 0), ('L', 0), ('E', 0)]
09/23/2019 07:49:50 PM DEBUG ('G', 0) -> [('H', 0), ('A', 0), ('G', 0), ('M', 0)]
09/23/2019 07:49:50 PM DEBUG ('g', 0) -> [('h', 0), ('a', 0), ('f', 0), ('g', 0)]
09/23/2019 07:49:50 PM DEBUG ('J', 0) -> [('J', 0), ('K', 0), ('P', 0), ('I', 0), ('D', 0)]
09/23/2019 07:49:50 PM DEBUG ('Q', 0) -> [('K', 0), ('P', 0), ('Q', 0), ('W', 0)]
09/23/2019 07:49:50 PM DEBUG ('C', 3) -> [('I', 3), ('C', 3), ('Base3', 3), ('D', 3)]
09/23/2019 07:49:50 PM DEBUG ('d', 0) -> [('j', 0), ('c', 0), ('X', 0), ('d', 0)]
09/23/2019 07:49:50 PM DEBUG ('W', 0) -> [('c', 0), ('X', 0), ('Q', 0), ('V', 0), ('W', 0)]
09/23/2019 07:49:50 PM DEBUG ('D', 3) -> [('C', 3), ('J', 3), ('E', 3), ('D', 3)]
09/23/2019 07:49:50 PM DEBUG ('Z', 0) -> [('Z', 0), ('Y', 0), ('f', 0), ('a', 0), ('T', 0)]
09/23/2019 07:49:50 PM DEBUG ('I', 3) -> [('O', 3), ('I', 3), ('H', 3), ('C', 3), ('J', 3)]
09/23/2019 07:49:50 PM DEBUG ('a', 0) -> [('Z', 0), ('b', 0), ('a', 0), ('g', 0)]
09/23/2019 07:49:50 PM DEBUG ('Base2', 3) -> [('c', 3), ('h', 3), ('Base2', 3), ('j', 3)]
09/23/2019 07:49:50 PM DEBUG ('N', 2) -> [('N', 3), ('H', 0), ('O', 0), ('T', 0), ('M', 0)]
09/23/2019 07:49:50 PM DEBUG ('M', 0) -> [('S', 0), ('N', 1), ('G', 0), ('M', 0)]
09/23/2019 07:49:50 PM DEBUG ('P', 0) -> [('J', 0), ('P', 0), ('Q', 0), ('V', 0), ('O', 0)]
09/23/2019 07:49:50 PM DEBUG ('h', 3) -> [('g', 3), ('h', 3), ('Base2', 3), ('b', 3)]
09/23/2019 07:49:50 PM DEBUG ('X', 6) -> []
09/23/2019 07:49:50 PM DEBUG ('J', 3) -> [('I', 3), ('P', 3), ('K', 3), ('J', 3), ('D', 3)]
09/23/2019 07:49:50 PM DEBUG ('T', 3) -> [('N', 3), ('S', 3), ('Z', 3), ('T', 3)]
09/23/2019 07:49:50 PM DEBUG ('j', 0) -> [('j', 0), ('Base2', 0), ('d', 0)]
09/23/2019 07:49:50 PM DEBUG ('C', 0) -> [('Base3', 0), ('C', 0), ('I', 0), ('D', 0)]
09/23/2019 07:49:50 PM DEBUG ('Y', 3) -> [('Y', 3), ('S', 3), ('Base', 3), ('Z', 3)]
09/23/2019 07:49:50 PM DEBUG ('V', 0) -> [('b', 0), ('P', 0), ('V', 0), ('W', 0)]
09/23/2019 07:49:50 PM DEBUG ('E', 3) -> [('F', 3), ('K', 3), ('E', 3), ('D', 3)]
09/23/2019 07:49:50 PM DEBUG ('O', 3) -> [('O', 3), ('N', 3), ('I', 3), ('P', 3)]
09/23/2019 07:49:50 PM DEBUG ('c', 3) -> [('W', 3), ('Base2', 3), ('c', 3), ('b', 3), ('d', 3)]
09/23/2019 07:49:50 PM DEBUG ('Z', 3) -> [('f', 3), ('Y', 3), ('T', 3), ('a', 3), ('Z', 3)]
09/23/2019 07:49:50 PM DEBUG ('L', 0) -> [('K', 0), ('F', 0), ('L', 0)]
09/23/2019 07:49:50 PM DEBUG ('d', 3) -> [('c', 3), ('j', 3), ('X', 4), ('d', 3)]
09/23/2019 07:49:50 PM DEBUG ('Base2', 0) -> [('j', 0), ('Base2', 0), ('h', 0), ('c', 0)]
09/23/2019 07:49:50 PM DEBUG ('f', 0) -> [('Z', 0), ('Base', 0), ('f', 0), ('g', 0)]
09/23/2019 07:49:50 PM DEBUG ('Base', 0) -> [('Base', 0), ('Y', 0), ('f', 0)]
09/23/2019 07:49:50 PM DEBUG ('f', 3) -> [('g', 3), ('f', 3), ('Z', 3), ('Base', 3)]
09/23/2019 07:49:50 PM DEBUG ('X', 5) -> [('W', 3), ('X', 6), ('d', 3)]
09/23/2019 07:49:50 PM DEBUG ('I', 0) -> [('J', 0), ('C', 0), ('H', 0), ('I', 0), ('O', 0)]
09/23/2019 07:49:50 PM DEBUG ('j', 3) -> [('Base2', 3), ('j', 3), ('d', 3)]
09/23/2019 07:49:50 PM DEBUG ('N', 1) -> [('H', 0), ('N', 2), ('O', 0), ('T', 0), ('M', 0)]
09/23/2019 07:49:50 PM DEBUG ('c', 0) -> [('b', 0), ('c', 0), ('W', 0), ('d', 0), ('Base2', 0)]
09/23/2019 07:49:50 PM DEBUG ('P', 3) -> [('O', 3), ('V', 3), ('Q', 3), ('P', 3), ('J', 3)]
09/23/2019 07:49:50 PM DEBUG ('O', 0) -> [('P', 0), ('I', 0), ('O', 0), ('N', 1)]
09/23/2019 07:49:50 PM DEBUG ('Base3', 0) -> [('Base3', 0), ('C', 0), ('H', 0), ('A', 0)]
09/23/2019 07:49:50 PM DEBUG ('S', 3) -> [('Y', 3), ('S', 3), ('M', 3), ('T', 3)]
09/23/2019 07:49:50 PM DEBUG ('A', 3) -> [('G', 3), ('A', 3), ('Base3', 3)]
09/23/2019 07:49:50 PM DEBUG ('Y', 0) -> [('Base', 0), ('S', 0), ('Y', 0), ('Z', 0)]
09/23/2019 07:49:50 PM DEBUG ('K', 3) -> [('Q', 3), ('K', 3), ('J', 3), ('E', 3), ('L', 3)]
09/23/2019 07:49:50 PM DEBUG ('E', 0) -> [('K', 0), ('F', 0), ('D', 0), ('E', 0)]
09/23/2019 07:49:50 PM DEBUG ('g', 3) -> [('g', 3), ('f', 3), ('a', 3), ('h', 3)]
09/23/2019 07:49:50 PM DEBUG ('H', 0) -> [('Base3', 0), ('H', 0), ('I', 0), ('G', 0), ('N', 1)]
09/23/2019 07:49:50 PM DEBUG ('X', 4) -> [('W', 3), ('X', 5), ('d', 3)]
09/23/2019 07:49:50 PM DEBUG ('V', 3) -> [('W', 3), ('V', 3), ('P', 3), ('b', 3)]
09/23/2019 07:49:50 PM DEBUG ('b', 0) -> [('b', 0), ('c', 0), ('h', 0), ('a', 0), ('V', 0)]
09/23/2019 07:49:50 PM DEBUG ('Q', 3) -> [('W', 3), ('Q', 3), ('P', 3), ('K', 3)]
09/23/2019 07:49:50 PM DEBUG ('L', 3) -> [('F', 3), ('K', 3), ('L', 3)]
09/23/2019 07:49:50 PM DEBUG ('G', 3) -> [('G', 3), ('A', 3), ('H', 3), ('M', 3)]
09/23/2019 07:49:50 PM DEBUG ('X', 0) -> [('X', 0), ('W', 0), ('d', 0)]
09/23/2019 07:49:50 PM DEBUG ('Base3', 3) -> [('A', 3), ('H', 3), ('C', 3), ('Base3', 3)]
09/23/2019 07:49:50 PM DEBUG ('D', 0) -> [('J', 0), ('C', 0), ('D', 0), ('E', 0)]
09/23/2019 07:49:50 PM DEBUG ('K', 0) -> [('J', 0), ('K', 0), ('Q', 0), ('L', 0), ('E', 0)]
09/23/2019 07:49:50 PM DEBUG ('a', 3) -> [('g', 3), ('a', 3), ('Z', 3), ('b', 3)]
09/23/2019 07:49:50 PM DEBUG ('M', 3) -> [('G', 3), ('N', 3), ('S', 3), ('M', 3)]
09/23/2019 07:49:50 PM DEBUG ('Base', 3) -> [('f', 3), ('Y', 3), ('Base', 3)]
09/23/2019 07:49:50 PM INFO Constructing product automaton with infinity DFA!
09/23/2019 07:49:50 PM INFO Product automaton size is: (72, 294)
09/23/2019 07:49:50 PM DEBUG ('W', 3) -> [('W', 3), ('V', 3), ('Q', 3), ('X', 3), ('c', 3)]
09/23/2019 07:49:50 PM DEBUG ('h', 0) -> [('b', 0), ('Base2', 0), ('h', 0), ('g', 0)]
09/23/2019 07:49:50 PM DEBUG ('A', 0) -> [('Base3', 0), ('A', 0), ('G', 0)]
09/23/2019 07:49:50 PM DEBUG ('b', 3) -> [('V', 3), ('a', 3), ('h', 3), ('c', 3), ('b', 3)]
09/23/2019 07:49:50 PM DEBUG ('T', 0) -> [('Z', 0), ('S', 0), ('N', 0), ('T', 0)]
09/23/2019 07:49:50 PM DEBUG ('F', 3) -> [('F', 3), ('E', 3), ('L', 3)]
09/23/2019 07:49:50 PM DEBUG ('N', 3) -> [('O', 3), ('N', 3), ('H', 3), ('M', 3), ('T', 3)]
09/23/2019 07:49:50 PM DEBUG ('H', 3) -> [('G', 3), ('N', 3), ('I', 3), ('H', 3), ('Base3', 3)]
09/23/2019 07:49:50 PM DEBUG ('G', 0) -> [('H', 0), ('A', 0), ('G', 0), ('M', 0)]
09/23/2019 07:49:50 PM DEBUG ('J', 3) -> [('I', 3), ('P', 3), ('D', 3), ('K', 4), ('J', 3)]
09/23/2019 07:49:50 PM DEBUG ('J', 0) -> [('J', 0), ('K', 0), ('P', 0), ('I', 0), ('D', 0)]
09/23/2019 07:49:50 PM DEBUG ('M', 0) -> [('S', 0), ('N', 0), ('G', 0), ('M', 0)]
09/23/2019 07:49:50 PM DEBUG ('Q', 0) -> [('K', 0), ('P', 0), ('Q', 0), ('W', 0)]
09/23/2019 07:49:50 PM DEBUG ('C', 3) -> [('I', 3), ('C', 3), ('Base3', 3), ('D', 3)]
09/23/2019 07:49:50 PM DEBUG ('d', 0) -> [('j', 0), ('c', 0), ('X', 0), ('d', 0)]
09/23/2019 07:49:50 PM DEBUG ('M', 3) -> [('G', 3), ('N', 3), ('S', 3), ('M', 3)]
09/23/2019 07:49:50 PM DEBUG ('X', 3) -> [('W', 3), ('X', 3), ('d', 3)]
09/23/2019 07:49:50 PM DEBUG ('W', 0) -> [('c', 0), ('X', 0), ('Q', 0), ('V', 0), ('W', 0)]
09/23/2019 07:49:50 PM DEBUG ('K', 4) -> [('Q', 3), ('L', 3), ('K', 5), ('E', 3), ('J', 3)]
09/23/2019 07:49:50 PM DEBUG ('Z', 0) -> [('Z', 0), ('Y', 0), ('a', 0), ('T', 0), ('f', 1)]
09/23/2019 07:49:50 PM DEBUG ('K', 5) -> [('Q', 3), ('K', 6), ('J', 3), ('E', 3), ('L', 3)]
09/23/2019 07:49:50 PM DEBUG ('a', 0) -> [('Z', 0), ('b', 0), ('a', 0), ('g', 0)]
09/23/2019 07:49:50 PM DEBUG ('F', 0) -> [('F', 0), ('L', 0), ('E', 0)]
09/23/2019 07:49:50 PM DEBUG ('Y', 0) -> [('Base', 0), ('S', 0), ('Y', 0), ('Z', 0)]
09/23/2019 07:49:50 PM DEBUG ('f', 1) -> [('Z', 0), ('Base', 0), ('g', 0), ('f', 2)]
09/23/2019 07:49:50 PM DEBUG ('P', 0) -> [('J', 0), ('P', 0), ('Q', 0), ('V', 0), ('O', 0)]
09/23/2019 07:49:50 PM DEBUG ('h', 3) -> [('g', 3), ('h', 3), ('Base2', 3), ('b', 3)]
09/23/2019 07:49:50 PM DEBUG ('g', 0) -> [('h', 0), ('a', 0), ('g', 0), ('f', 1)]
09/23/2019 07:49:50 PM DEBUG ('T', 3) -> [('N', 3), ('S', 3), ('Z', 3), ('T', 3)]
09/23/2019 07:49:50 PM DEBUG ('j', 0) -> [('j', 0), ('Base2', 0), ('d', 0)]
09/23/2019 07:49:50 PM DEBUG ('C', 0) -> [('Base3', 0), ('C', 0), ('I', 0), ('D', 0)]
09/23/2019 07:49:50 PM DEBUG ('Y', 3) -> [('Y', 3), ('S', 3), ('Base', 3), ('Z', 3)]
09/23/2019 07:49:50 PM DEBUG ('V', 0) -> [('b', 0), ('P', 0), ('V', 0), ('W', 0)]
09/23/2019 07:49:50 PM DEBUG ('E', 3) -> [('F', 3), ('K', 4), ('E', 3), ('D', 3)]
09/23/2019 07:49:50 PM DEBUG ('Base', 0) -> [('Base', 0), ('Y', 0), ('f', 1)]
09/23/2019 07:49:50 PM DEBUG ('c', 3) -> [('W', 3), ('Base2', 3), ('c', 3), ('b', 3), ('d', 3)]
09/23/2019 07:49:50 PM DEBUG ('D', 3) -> [('C', 3), ('J', 3), ('E', 3), ('D', 3)]
09/23/2019 07:49:50 PM DEBUG ('Z', 3) -> [('f', 3), ('Y', 3), ('T', 3), ('a', 3), ('Z', 3)]
09/23/2019 07:49:50 PM DEBUG ('L', 0) -> [('K', 0), ('F', 0), ('L', 0)]
09/23/2019 07:49:50 PM DEBUG ('d', 3) -> [('X', 3), ('c', 3), ('j', 3), ('d', 3)]
09/23/2019 07:49:50 PM DEBUG ('Base2', 0) -> [('j', 0), ('Base2', 0), ('h', 0), ('c', 0)]
09/23/2019 07:49:50 PM DEBUG ('K', 6) -> [('K', 7), ('Q', 3), ('J', 3), ('E', 3), ('L', 3)]
09/23/2019 07:49:50 PM DEBUG ('O', 3) -> [('O', 3), ('N', 3), ('I', 3), ('P', 3)]
09/23/2019 07:49:50 PM DEBUG ('g', 3) -> [('g', 3), ('f', 3), ('a', 3), ('h', 3)]
09/23/2019 07:49:50 PM DEBUG ('I', 0) -> [('J', 0), ('C', 0), ('H', 0), ('I', 0), ('O', 0)]
09/23/2019 07:49:50 PM DEBUG ('j', 3) -> [('Base2', 3), ('j', 3), ('d', 3)]
09/23/2019 07:49:50 PM DEBUG ('c', 0) -> [('b', 0), ('c', 0), ('W', 0), ('d', 0), ('Base2', 0)]
09/23/2019 07:49:50 PM DEBUG ('I', 3) -> [('O', 3), ('I', 3), ('H', 3), ('C', 3), ('J', 3)]
09/23/2019 07:49:50 PM DEBUG ('P', 3) -> [('O', 3), ('V', 3), ('Q', 3), ('P', 3), ('J', 3)]
09/23/2019 07:49:50 PM DEBUG ('Base', 3) -> [('f', 3), ('Y', 3), ('Base', 3)]
09/23/2019 07:49:50 PM DEBUG ('Base3', 0) -> [('Base3', 0), ('C', 0), ('H', 0), ('A', 0)]
09/23/2019 07:49:50 PM DEBUG ('Base2', 3) -> [('c', 3), ('h', 3), ('Base2', 3), ('j', 3)]
09/23/2019 07:49:50 PM DEBUG ('A', 3) -> [('G', 3), ('A', 3), ('Base3', 3)]
09/23/2019 07:49:50 PM DEBUG ('S', 3) -> [('Y', 3), ('S', 3), ('M', 3), ('T', 3)]
09/23/2019 07:49:50 PM DEBUG ('E', 0) -> [('K', 0), ('F', 0), ('D', 0), ('E', 0)]
09/23/2019 07:49:50 PM DEBUG ('f', 3) -> [('g', 3), ('f', 3), ('Z', 3), ('Base', 3)]
09/23/2019 07:49:50 PM DEBUG ('H', 0) -> [('Base3', 0), ('H', 0), ('I', 0), ('N', 0), ('G', 0)]
09/23/2019 07:49:50 PM DEBUG ('S', 0) -> [('S', 0), ('Y', 0), ('T', 0), ('M', 0)]
09/23/2019 07:49:50 PM DEBUG ('V', 3) -> [('W', 3), ('V', 3), ('P', 3), ('b', 3)]
09/23/2019 07:49:50 PM DEBUG ('b', 0) -> [('b', 0), ('c', 0), ('h', 0), ('a', 0), ('V', 0)]
09/23/2019 07:49:50 PM DEBUG ('Q', 3) -> [('W', 3), ('Q', 3), ('P', 3), ('K', 4)]
09/23/2019 07:49:50 PM DEBUG ('L', 3) -> [('F', 3), ('K', 4), ('L', 3)]
09/23/2019 07:49:50 PM DEBUG ('N', 0) -> [('H', 0), ('N', 0), ('O', 0), ('T', 0), ('M', 0)]
09/23/2019 07:49:50 PM DEBUG ('G', 3) -> [('G', 3), ('A', 3), ('H', 3), ('M', 3)]
09/23/2019 07:49:50 PM DEBUG ('K', 7) -> []
09/23/2019 07:49:50 PM DEBUG ('X', 0) -> [('X', 0), ('W', 0), ('d', 0)]
09/23/2019 07:49:50 PM DEBUG ('Base3', 3) -> [('A', 3), ('H', 3), ('C', 3), ('Base3', 3)]
09/23/2019 07:49:50 PM DEBUG ('D', 0) -> [('J', 0), ('C', 0), ('D', 0), ('E', 0)]
09/23/2019 07:49:50 PM DEBUG ('K', 0) -> [('J', 0), ('K', 0), ('Q', 0), ('L', 0), ('E', 0)]
09/23/2019 07:49:50 PM DEBUG ('a', 3) -> [('g', 3), ('a', 3), ('Z', 3), ('b', 3)]
09/23/2019 07:49:50 PM DEBUG ('f', 2) -> [('Z', 0), ('Base', 0), ('g', 0), ('f', 3)]
09/23/2019 07:49:50 PM DEBUG ('O', 0) -> [('P', 0), ('I', 0), ('N', 0), ('O', 0)]
09/23/2019 07:49:50 PM DEBUG [PartialControl] init: set([0]), final: set([3]), constraint: None
09/23/2019 07:49:50 PM DEBUG [PartialControl] init: set([3]), final: set([6]), constraint: None
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('h', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 1 >> : (('A', 0), ('Base3', 0), ('C', 0), ('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(1, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('T', 0), ('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('Base2', 0), ('h', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 0 >> : (('G', 0), ('H', 0), ('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(0, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('g', 0), ('h', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('Q', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('d', 0), ('c', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -4 >> : (('W', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-4, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('M', 0), ('N', 0), ('O', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -4 >> : (('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-4, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('j', 0), ('Base2', 0), ('h', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('C', 0), ('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 0 >> : (('Base', 0), ('Y', 0), ('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(0, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('L', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('f', 0), ('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 0 >> : (('Base3', 0), ('C', 0), ('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(0, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 0 >> : (('F', 0), ('L', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(0, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('E', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('H', 0), ('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 0 >> : (('S', 0), ('Y', 0), ('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(0, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -4 >> : (('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-4, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('Y', 0), ('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('N', 0), ('O', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('X', 0), ('W', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('D', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('K', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('c', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('O', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 07:49:50 PM DEBUG [PartialControl] init: set([0]), final: set([3]), constraint: None
09/23/2019 07:49:50 PM DEBUG [PartialControl] init: set([3]), final: set([6]), constraint: None
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('h', 0), ('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-1, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('A', 0), ('Base3', 0), ('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -5 >> : (('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-5, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -4 >> : (('S', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -4 >> : (('G', 0), ('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('Q', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 0 >> : (('d', 0), ('c', 0), ('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(0, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('W', 0), ('Q', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -4 >> : (('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 0 >> : (('F', 0), ('L', 0), ('K', 0), ('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(0, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -5 >> : (('M', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-5, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -4 >> : (('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('g', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 1 >> : (('j', 0), ('Base2', 0), ('h', 0), ('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(1, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('C', 0), ('Base3', 0), ('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('V', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('L', 0), ('K', 0), ('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-1, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('f', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -4 >> : (('I', 0), ('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('Base', 0), ('Y', 0), ('S', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -5 >> : (('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-5, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -4 >> : (('Base3', 0), ('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('E', 0), ('K', 0), ('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-1, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -5 >> : (('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-5, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('c', 0), ('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-1, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 0 >> : (('Base2', 0), ('h', 0), ('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(0, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('Y', 0), ('S', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('X', 0), ('W', 0), ('Q', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-1, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('D', 0), ('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('K', 0), ('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 07:49:50 PM DEBUG [PartialControl] init: set([0]), final: set([3]), constraint: None
09/23/2019 07:49:50 PM DEBUG [PartialControl] init: set([3]), final: set([7]), constraint: None
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -4 >> : (('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-4, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 0 >> : (('A', 0), ('Base3', 0), ('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(0, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -4 >> : (('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-4, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('Base2', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-3, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('G', 0), ('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -5 >> : (('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-5, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 0 >> : (('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(0, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 0 >> : (('Q', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(0, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('d', 0), ('j', 0), ('Base2', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('W', 0), ('c', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -5 >> : (('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-5, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -4 >> : (('a', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-4, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 3 >> : (('F', 0), ('L', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(3, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('M', 0), ('S', 0), ('Y', 0), ('Base', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('j', 0), ('Base2', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 0 >> : (('C', 0), ('Base3', 0), ('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(0, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -5 >> : (('Base', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-5, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 2 >> : (('L', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(2, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('I', 0), ('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -1 >> : (('Base3', 0), ('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -4 >> : (('Y', 0), ('Base', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-4, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 2 >> : (('E', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(2, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('S', 0), ('Y', 0), ('Base', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-3, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('c', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-3, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -3 >> : (('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-3, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 0 >> : (('X', 0), ('W', 0), ('c', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(0, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 1 >> : (('D', 0), ('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(1, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || 1 >> : (('K', 0), ('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(1, 0)
09/23/2019 07:49:50 PM DEBUG [Cat] accept || -2 >> : (('O', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 07:49:50 PM INFO Generated control policy is: b -> 1 -> V -> 1 -> P -> 1 -> O -> 1 -> N -> 1 -> N -> 1 -> N -> 1 -> O -> 1 -> P -> 1 -> V -> 1 -> W -> 1 -> X -> 1 -> X -> 1 -> X
09/23/2019 07:49:50 PM INFO Generated control policy is: N -> 1 -> H -> 1 -> I -> 1 -> J -> 1 -> P -> 1 -> V -> 1 -> W -> 1 -> X -> 1 -> X -> 1 -> X
09/23/2019 07:49:50 PM INFO Max deadline: 0
09/23/2019 07:49:50 PM INFO Generated output word is: [(), (), (), (), (), ('V',), ('V',), ('V',), (), (), (), ('M',), ('M',), ('M',)]
09/23/2019 07:49:50 PM INFO Generated control policy is: Base -> 1 -> Y -> 1 -> Z -> 1 -> a -> 1 -> b -> 1 -> V -> 1 -> V -> 1 -> V -> 1 -> P -> 1 -> O -> 1 -> N -> 1 -> M -> 1 -> M -> 1 -> M
09/23/2019 07:49:50 PM INFO Max deadline: 0
09/23/2019 07:49:50 PM INFO Generated output word is: [(), (), (), (), (), (), ('N',), ('N',), ('N',), (), (), (), (), ('X',), ('X',), ('X',)]
09/23/2019 07:49:50 PM INFO Generated control policy is: Base2 -> 1 -> h -> 1 -> b -> 1 -> a -> 1 -> Z -> 1 -> T -> 1 -> N -> 1 -> N -> 1 -> N -> 1 -> O -> 1 -> P -> 1 -> V -> 1 -> W -> 1 -> X -> 1 -> X -> 1 -> X
09/23/2019 07:49:50 PM INFO Max deadline: -1
09/23/2019 07:49:50 PM INFO Generated output word is: [(), (), (), (), (), ('f',), ('f',), ('f',), (), (), (), (), (), (), ('K',), ('K',), ('K',), ('K',)]
09/23/2019 07:49:50 PM INFO Generated control policy is: Base3 -> 1 -> H -> 1 -> N -> 1 -> T -> 1 -> Z -> 1 -> f -> 1 -> f -> 1 -> f -> 1 -> g -> 1 -> a -> 1 -> b -> 1 -> V -> 1 -> W -> 1 -> Q -> 1 -> K -> 1 -> K -> 1 -> K -> 1 -> K
09/23/2019 11:41:04 PM DEBUG [hold] Prop: V Duration: 2 Negation: False Props: set(['M', 'V'])
09/23/2019 11:41:04 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 V )
09/23/2019 11:41:04 PM DEBUG [hold] Prop: M Duration: 2 Negation: False Props: set(['M', 'V'])
09/23/2019 11:41:04 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 M )
09/23/2019 11:41:04 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 V ) 0 7 ) DFA2: (Eventually (Hold 2 M ) 0 7 )
09/23/2019 11:41:04 PM DEBUG [spec] spec: [H^2 V]^[0, 7] * [H^2 M]^[0, 7]
09/23/2019 11:41:04 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 V ) 0 7 ) (Eventually (Hold 2 M ) 0 7 ) )
Directed: True
Multi: False
Props: {'M': 1, 'V': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([6])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'V', 'weight': 0, 'label': u'V'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'V', 'weight': 0, 'label': u'V'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'V', 'weight': 0, 'label': u'V'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'M', 'weight': 0, 'label': u'M'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'M', 'weight': 0, 'label': u'M'}), (5, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (5, 6, {'input': set([1, 3]), 'guard': u'M', 'weight': 0, 'label': u'M'})]
		
09/23/2019 11:41:04 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([6])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([6])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([6])

09/23/2019 11:41:04 PM DEBUG [spec] No of nodes: 7
09/23/2019 11:41:04 PM DEBUG [spec] No of edges: 12
09/23/2019 11:41:04 PM DEBUG 
End of translate


09/23/2019 11:41:04 PM INFO The bound of formula "[H^2 V]^[0, 7] * [H^2 M]^[0, 7]" is (5, 15)!
09/23/2019 11:41:04 PM INFO Translated formula "[H^2 V]^[0, 7] * [H^2 M]^[0, 7]" to infinity DFA of size (7, 12)!
09/23/2019 11:41:04 PM DEBUG [hold] Prop: N Duration: 2 Negation: False Props: set(['X', 'N'])
09/23/2019 11:41:04 PM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 N )
09/23/2019 11:41:04 PM DEBUG [hold] Prop: X Duration: 2 Negation: False Props: set(['X', 'N'])
09/23/2019 11:41:04 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 X )
09/23/2019 11:41:04 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 N ) 0 8 ) DFA2: (Eventually (Hold 2 X ) 0 7 )
09/23/2019 11:41:04 PM DEBUG [spec] spec: [H^2 N]^[0, 8] * [H^2 X]^[0, 7]
09/23/2019 11:41:04 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 N ) 0 8 ) (Eventually (Hold 2 X ) 0 7 ) )
Directed: True
Multi: False
Props: {'X': 1, 'N': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([6])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'N', 'weight': 0, 'label': u'N'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'N', 'weight': 0, 'label': u'N'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'N', 'weight': 0, 'label': u'N'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'X', 'weight': 0, 'label': u'X'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'X', 'weight': 0, 'label': u'X'}), (5, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (5, 6, {'input': set([1, 3]), 'guard': u'X', 'weight': 0, 'label': u'X'})]
		
09/23/2019 11:41:04 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([6])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([6])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([6])

09/23/2019 11:41:04 PM DEBUG [spec] No of nodes: 7
09/23/2019 11:41:04 PM DEBUG [spec] No of edges: 12
09/23/2019 11:41:04 PM DEBUG 
End of translate


09/23/2019 11:41:04 PM INFO The bound of formula "[H^2 N]^[0, 8] * [H^2 X]^[0, 7]" is (5, 16)!
09/23/2019 11:41:04 PM INFO Translated formula "[H^2 N]^[0, 8] * [H^2 X]^[0, 7]" to infinity DFA of size (7, 12)!
09/23/2019 11:41:04 PM DEBUG [hold] Prop: f Duration: 2 Negation: False Props: set(['K', 'f'])
09/23/2019 11:41:04 PM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 f )
09/23/2019 11:41:04 PM DEBUG [hold] Prop: K Duration: 3 Negation: False Props: set(['K', 'f'])
09/23/2019 11:41:04 PM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 3 K )
09/23/2019 11:41:04 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 f ) 0 8 ) DFA2: (Eventually (Hold 3 K ) 0 10 )
09/23/2019 11:41:04 PM DEBUG [spec] spec: [H^2 f]^[0, 8] * [H^3 K]^[0, 10]
09/23/2019 11:41:04 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 f ) 0 8 ) (Eventually (Hold 3 K ) 0 10 ) )
Directed: True
Multi: False
Props: {'K': 1, 'f': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([7])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'f', 'weight': 0, 'label': u'f'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'f', 'weight': 0, 'label': u'f'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'f', 'weight': 0, 'label': u'f'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'K', 'weight': 0, 'label': u'K'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'K', 'weight': 0, 'label': u'K'}), (5, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (5, 6, {'input': set([1, 3]), 'guard': u'K', 'weight': 0, 'label': u'K'}), (6, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (6, 7, {'input': set([1, 3]), 'guard': u'K', 'weight': 0, 'label': u'K'})]
		
09/23/2019 11:41:04 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([7])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([7])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([7])

09/23/2019 11:41:04 PM DEBUG [spec] No of nodes: 8
09/23/2019 11:41:04 PM DEBUG [spec] No of edges: 14
09/23/2019 11:41:04 PM DEBUG 
End of translate


09/23/2019 11:41:04 PM INFO The bound of formula "[H^2 f]^[0, 8] * [H^3 K]^[0, 10]" is (6, 19)!
09/23/2019 11:41:04 PM INFO Translated formula "[H^2 f]^[0, 8] * [H^3 K]^[0, 10]" to infinity DFA of size (8, 14)!
09/23/2019 11:41:04 PM DEBUG 

Start policy computation

09/23/2019 11:41:04 PM DEBUG [extend_ts] TS: (34, 140) ETS:(34, 140)
09/23/2019 11:41:04 PM DEBUG [extend_ts] TS: (34, 140) ETS:(34, 140)
09/23/2019 11:41:04 PM DEBUG [extend_ts] TS: (34, 140) ETS:(34, 140)
09/23/2019 11:41:04 PM INFO Constructing product automaton with infinity DFA!
09/23/2019 11:41:04 PM INFO Product automaton size is: (71, 288)
09/23/2019 11:41:04 PM INFO Constructing product automaton with infinity DFA!
09/23/2019 11:41:04 PM INFO Product automaton size is: (71, 288)
09/23/2019 11:41:04 PM INFO Constructing product automaton with infinity DFA!
09/23/2019 11:41:04 PM INFO Product automaton size is: (72, 294)
09/23/2019 11:41:04 PM DEBUG [PartialControl] init: set([0]), final: set([3]), constraint: None
09/23/2019 11:41:04 PM DEBUG [PartialControl] init: set([3]), final: set([6]), constraint: None
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('h', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 1 >> : (('A', 0), ('Base3', 0), ('C', 0), ('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(1, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('T', 0), ('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('Base2', 0), ('h', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 0 >> : (('G', 0), ('H', 0), ('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(0, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('g', 0), ('h', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('Q', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('d', 0), ('c', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -4 >> : (('W', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-4, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('M', 0), ('N', 0), ('O', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -4 >> : (('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-4, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('j', 0), ('Base2', 0), ('h', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('C', 0), ('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 0 >> : (('Base', 0), ('Y', 0), ('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(0, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('L', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('f', 0), ('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 0 >> : (('Base3', 0), ('C', 0), ('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(0, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 0 >> : (('F', 0), ('L', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(0, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('E', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('H', 0), ('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 0 >> : (('S', 0), ('Y', 0), ('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(0, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -4 >> : (('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-4, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('Y', 0), ('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('N', 0), ('O', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('X', 0), ('W', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('D', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('K', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('c', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('O', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 11:41:04 PM DEBUG [PartialControl] init: set([0]), final: set([3]), constraint: None
09/23/2019 11:41:04 PM DEBUG [PartialControl] init: set([3]), final: set([6]), constraint: None
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('h', 0), ('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-1, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('A', 0), ('Base3', 0), ('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -5 >> : (('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-5, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -4 >> : (('S', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -4 >> : (('G', 0), ('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('Q', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 0 >> : (('d', 0), ('c', 0), ('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(0, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('W', 0), ('Q', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -4 >> : (('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 0 >> : (('F', 0), ('L', 0), ('K', 0), ('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(0, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -5 >> : (('M', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-5, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -4 >> : (('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('g', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 1 >> : (('j', 0), ('Base2', 0), ('h', 0), ('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(1, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('C', 0), ('Base3', 0), ('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('V', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('L', 0), ('K', 0), ('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-1, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('f', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -4 >> : (('I', 0), ('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('Base', 0), ('Y', 0), ('S', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -5 >> : (('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-5, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -4 >> : (('Base3', 0), ('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('E', 0), ('K', 0), ('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-1, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -5 >> : (('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-5, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('c', 0), ('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-1, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 0 >> : (('Base2', 0), ('h', 0), ('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(0, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('Y', 0), ('S', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('X', 0), ('W', 0), ('Q', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-1, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('D', 0), ('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('K', 0), ('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 11:41:04 PM DEBUG [PartialControl] init: set([0]), final: set([3]), constraint: None
09/23/2019 11:41:04 PM DEBUG [PartialControl] init: set([3]), final: set([7]), constraint: None
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -4 >> : (('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-4, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 0 >> : (('A', 0), ('Base3', 0), ('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(0, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -4 >> : (('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-4, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('Base2', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-3, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('G', 0), ('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -5 >> : (('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-5, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 0 >> : (('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(0, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 0 >> : (('Q', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(0, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('d', 0), ('j', 0), ('Base2', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('W', 0), ('c', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -5 >> : (('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-5, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -4 >> : (('a', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-4, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 3 >> : (('F', 0), ('L', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(3, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('M', 0), ('S', 0), ('Y', 0), ('Base', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('j', 0), ('Base2', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 0 >> : (('C', 0), ('Base3', 0), ('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(0, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -5 >> : (('Base', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-5, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 2 >> : (('L', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(2, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('I', 0), ('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -1 >> : (('Base3', 0), ('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -4 >> : (('Y', 0), ('Base', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-4, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 2 >> : (('E', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(2, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('S', 0), ('Y', 0), ('Base', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-3, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('c', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-3, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -3 >> : (('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-3, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 0 >> : (('X', 0), ('W', 0), ('c', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(0, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 1 >> : (('D', 0), ('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(1, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || 1 >> : (('K', 0), ('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(1, 0)
09/23/2019 11:41:04 PM DEBUG [Cat] accept || -2 >> : (('O', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 11:41:04 PM INFO Max deadline: 0
09/23/2019 11:41:04 PM INFO Generated output word is: [(), (), (), (), (), ('V',), ('V',), ('V',), (), (), (), ('M',), ('M',), ('M',)]
09/23/2019 11:41:04 PM INFO Generated control policy is: Base -> 1 -> Y -> 1 -> Z -> 1 -> a -> 1 -> b -> 1 -> V -> 1 -> V -> 1 -> V -> 1 -> P -> 1 -> O -> 1 -> N -> 1 -> M -> 1 -> M -> 1 -> M
09/23/2019 11:41:04 PM INFO Max deadline: 0
09/23/2019 11:41:04 PM INFO Generated output word is: [(), (), (), (), (), (), ('N',), ('N',), ('N',), (), (), (), (), ('X',), ('X',), ('X',)]
09/23/2019 11:41:04 PM INFO Generated control policy is: Base2 -> 1 -> h -> 1 -> b -> 1 -> a -> 1 -> Z -> 1 -> T -> 1 -> N -> 1 -> N -> 1 -> N -> 1 -> O -> 1 -> P -> 1 -> V -> 1 -> W -> 1 -> X -> 1 -> X -> 1 -> X
09/23/2019 11:41:04 PM INFO Max deadline: -1
09/23/2019 11:41:04 PM INFO Generated output word is: [(), (), (), (), (), ('f',), ('f',), ('f',), (), (), (), (), (), (), ('K',), ('K',), ('K',), ('K',)]
09/23/2019 11:41:04 PM INFO Generated control policy is: Base3 -> 1 -> H -> 1 -> N -> 1 -> T -> 1 -> Z -> 1 -> f -> 1 -> f -> 1 -> f -> 1 -> g -> 1 -> a -> 1 -> b -> 1 -> V -> 1 -> W -> 1 -> Q -> 1 -> K -> 1 -> K -> 1 -> K -> 1 -> K
09/23/2019 11:41:37 PM DEBUG [hold] Prop: V Duration: 2 Negation: False Props: set(['M', 'V'])
09/23/2019 11:41:37 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 V )
09/23/2019 11:41:37 PM DEBUG [hold] Prop: M Duration: 2 Negation: False Props: set(['M', 'V'])
09/23/2019 11:41:37 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 M )
09/23/2019 11:41:37 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 V ) 0 7 ) DFA2: (Eventually (Hold 2 M ) 0 7 )
09/23/2019 11:41:37 PM DEBUG [spec] spec: [H^2 V]^[0, 7] * [H^2 M]^[0, 7]
09/23/2019 11:41:37 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 V ) 0 7 ) (Eventually (Hold 2 M ) 0 7 ) )
Directed: True
Multi: False
Props: {'M': 1, 'V': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([6])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'V', 'weight': 0, 'label': u'V'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'V', 'weight': 0, 'label': u'V'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'V', 'weight': 0, 'label': u'V'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'M', 'weight': 0, 'label': u'M'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'M', 'weight': 0, 'label': u'M'}), (5, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (5, 6, {'input': set([1, 3]), 'guard': u'M', 'weight': 0, 'label': u'M'})]
		
09/23/2019 11:41:37 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([6])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([6])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([6])

09/23/2019 11:41:37 PM DEBUG [spec] No of nodes: 7
09/23/2019 11:41:37 PM DEBUG [spec] No of edges: 12
09/23/2019 11:41:37 PM DEBUG 
End of translate


09/23/2019 11:41:37 PM INFO The bound of formula "[H^2 V]^[0, 7] * [H^2 M]^[0, 7]" is (5, 15)!
09/23/2019 11:41:37 PM INFO Translated formula "[H^2 V]^[0, 7] * [H^2 M]^[0, 7]" to infinity DFA of size (7, 12)!
09/23/2019 11:41:37 PM DEBUG [hold] Prop: N Duration: 2 Negation: False Props: set(['X', 'N'])
09/23/2019 11:41:37 PM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 N )
09/23/2019 11:41:37 PM DEBUG [hold] Prop: X Duration: 2 Negation: False Props: set(['X', 'N'])
09/23/2019 11:41:37 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 X )
09/23/2019 11:41:37 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 N ) 0 8 ) DFA2: (Eventually (Hold 2 X ) 0 7 )
09/23/2019 11:41:37 PM DEBUG [spec] spec: [H^2 N]^[0, 8] * [H^2 X]^[0, 7]
09/23/2019 11:41:37 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 N ) 0 8 ) (Eventually (Hold 2 X ) 0 7 ) )
Directed: True
Multi: False
Props: {'X': 1, 'N': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([6])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'N', 'weight': 0, 'label': u'N'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'N', 'weight': 0, 'label': u'N'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'N', 'weight': 0, 'label': u'N'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'X', 'weight': 0, 'label': u'X'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'X', 'weight': 0, 'label': u'X'}), (5, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (5, 6, {'input': set([1, 3]), 'guard': u'X', 'weight': 0, 'label': u'X'})]
		
09/23/2019 11:41:37 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([6])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([6])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([6])

09/23/2019 11:41:37 PM DEBUG [spec] No of nodes: 7
09/23/2019 11:41:37 PM DEBUG [spec] No of edges: 12
09/23/2019 11:41:37 PM DEBUG 
End of translate


09/23/2019 11:41:37 PM INFO The bound of formula "[H^2 N]^[0, 8] * [H^2 X]^[0, 7]" is (5, 16)!
09/23/2019 11:41:37 PM INFO Translated formula "[H^2 N]^[0, 8] * [H^2 X]^[0, 7]" to infinity DFA of size (7, 12)!
09/23/2019 11:41:37 PM DEBUG [hold] Prop: f Duration: 2 Negation: False Props: set(['K', 'f'])
09/23/2019 11:41:37 PM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 f )
09/23/2019 11:41:37 PM DEBUG [hold] Prop: K Duration: 3 Negation: False Props: set(['K', 'f'])
09/23/2019 11:41:37 PM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 3 K )
09/23/2019 11:41:37 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 f ) 0 8 ) DFA2: (Eventually (Hold 3 K ) 0 10 )
09/23/2019 11:41:37 PM DEBUG [spec] spec: [H^2 f]^[0, 8] * [H^3 K]^[0, 10]
09/23/2019 11:41:37 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 f ) 0 8 ) (Eventually (Hold 3 K ) 0 10 ) )
Directed: True
Multi: False
Props: {'K': 1, 'f': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([7])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'f', 'weight': 0, 'label': u'f'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'f', 'weight': 0, 'label': u'f'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'f', 'weight': 0, 'label': u'f'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'K', 'weight': 0, 'label': u'K'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'K', 'weight': 0, 'label': u'K'}), (5, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (5, 6, {'input': set([1, 3]), 'guard': u'K', 'weight': 0, 'label': u'K'}), (6, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (6, 7, {'input': set([1, 3]), 'guard': u'K', 'weight': 0, 'label': u'K'})]
		
09/23/2019 11:41:37 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([7])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([7])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([7])

09/23/2019 11:41:37 PM DEBUG [spec] No of nodes: 8
09/23/2019 11:41:37 PM DEBUG [spec] No of edges: 14
09/23/2019 11:41:37 PM DEBUG 
End of translate


09/23/2019 11:41:37 PM INFO The bound of formula "[H^2 f]^[0, 8] * [H^3 K]^[0, 10]" is (6, 19)!
09/23/2019 11:41:37 PM INFO Translated formula "[H^2 f]^[0, 8] * [H^3 K]^[0, 10]" to infinity DFA of size (8, 14)!
09/23/2019 11:41:37 PM DEBUG 

Start policy computation

09/23/2019 11:41:37 PM DEBUG [extend_ts] TS: (34, 140) ETS:(34, 140)
09/23/2019 11:41:37 PM DEBUG [extend_ts] TS: (34, 140) ETS:(34, 140)
09/23/2019 11:41:37 PM DEBUG [extend_ts] TS: (34, 140) ETS:(34, 140)
09/23/2019 11:41:37 PM INFO Constructing product automaton with infinity DFA!
09/23/2019 11:41:37 PM INFO Product automaton size is: (71, 288)
09/23/2019 11:41:37 PM INFO Constructing product automaton with infinity DFA!
09/23/2019 11:41:37 PM INFO Product automaton size is: (71, 288)
09/23/2019 11:41:37 PM INFO Constructing product automaton with infinity DFA!
09/23/2019 11:41:37 PM INFO Product automaton size is: (72, 294)
09/23/2019 11:41:37 PM DEBUG [PartialControl] init: set([0]), final: set([3]), constraint: None
09/23/2019 11:41:37 PM DEBUG [PartialControl] init: set([3]), final: set([6]), constraint: None
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('h', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 1 >> : (('A', 0), ('Base3', 0), ('C', 0), ('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(1, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('T', 0), ('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('Base2', 0), ('h', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 0 >> : (('G', 0), ('H', 0), ('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(0, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('g', 0), ('h', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('Q', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('d', 0), ('c', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -4 >> : (('W', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-4, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('M', 0), ('N', 0), ('O', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -4 >> : (('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-4, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('j', 0), ('Base2', 0), ('h', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('C', 0), ('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 0 >> : (('Base', 0), ('Y', 0), ('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(0, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('L', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('f', 0), ('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 0 >> : (('Base3', 0), ('C', 0), ('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(0, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 0 >> : (('F', 0), ('L', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(0, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('E', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('H', 0), ('I', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 0 >> : (('S', 0), ('Y', 0), ('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(0, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -4 >> : (('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-4, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('Y', 0), ('Z', 0), ('a', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-1, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('N', 0), ('O', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('X', 0), ('W', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('D', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('K', 0), ('J', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-2, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('c', 0), ('b', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('O', 0), ('P', 0), ('V', 1), ('V', 2), ('V', 3)) + || -1 >> : (('V', 3), ('P', 3), ('O', 3), ('N', 3), ('M', 4), ('M', 5), ('M', 6)) ; max(-3, -1)
09/23/2019 11:41:37 PM DEBUG [PartialControl] init: set([0]), final: set([3]), constraint: None
09/23/2019 11:41:37 PM DEBUG [PartialControl] init: set([3]), final: set([6]), constraint: None
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('h', 0), ('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-1, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('A', 0), ('Base3', 0), ('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -5 >> : (('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-5, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -4 >> : (('S', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -4 >> : (('G', 0), ('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('Q', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 0 >> : (('d', 0), ('c', 0), ('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(0, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('W', 0), ('Q', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -4 >> : (('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 0 >> : (('F', 0), ('L', 0), ('K', 0), ('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(0, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -5 >> : (('M', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-5, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -4 >> : (('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('g', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 1 >> : (('j', 0), ('Base2', 0), ('h', 0), ('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(1, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('C', 0), ('Base3', 0), ('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('V', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('L', 0), ('K', 0), ('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-1, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('f', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -4 >> : (('I', 0), ('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('Base', 0), ('Y', 0), ('S', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -5 >> : (('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-5, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -4 >> : (('Base3', 0), ('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-4, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('E', 0), ('K', 0), ('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-1, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -5 >> : (('H', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-5, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('c', 0), ('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-1, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 0 >> : (('Base2', 0), ('h', 0), ('b', 0), ('a', 0), ('Z', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(0, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('Y', 0), ('S', 0), ('T', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-3, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('X', 0), ('W', 0), ('Q', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-1, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('D', 0), ('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('K', 0), ('J', 0), ('P', 0), ('O', 0), ('N', 1), ('N', 2), ('N', 3)) + || 0 >> : (('N', 3), ('O', 3), ('P', 3), ('V', 3), ('W', 3), ('X', 4), ('X', 5), ('X', 6)) ; max(-2, 0)
09/23/2019 11:41:37 PM DEBUG [PartialControl] init: set([0]), final: set([3]), constraint: None
09/23/2019 11:41:37 PM DEBUG [PartialControl] init: set([3]), final: set([7]), constraint: None
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -4 >> : (('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-4, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 0 >> : (('A', 0), ('Base3', 0), ('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(0, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -4 >> : (('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-4, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('Base2', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-3, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('G', 0), ('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -5 >> : (('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-5, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 0 >> : (('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(0, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 0 >> : (('Q', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(0, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('d', 0), ('j', 0), ('Base2', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('W', 0), ('c', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -5 >> : (('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-5, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -4 >> : (('a', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-4, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 3 >> : (('F', 0), ('L', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(3, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('M', 0), ('S', 0), ('Y', 0), ('Base', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('j', 0), ('Base2', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 0 >> : (('C', 0), ('Base3', 0), ('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(0, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -5 >> : (('Base', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-5, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 2 >> : (('L', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(2, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('I', 0), ('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -1 >> : (('Base3', 0), ('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-1, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -4 >> : (('Y', 0), ('Base', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-4, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 2 >> : (('E', 0), ('K', 0), ('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(2, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('H', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('S', 0), ('Y', 0), ('Base', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-3, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('c', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-3, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -3 >> : (('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-3, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 0 >> : (('X', 0), ('W', 0), ('c', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(0, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 1 >> : (('D', 0), ('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(1, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || 1 >> : (('K', 0), ('J', 0), ('P', 0), ('V', 0), ('b', 0), ('h', 0), ('g', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(1, 0)
09/23/2019 11:41:37 PM DEBUG [Cat] accept || -2 >> : (('O', 0), ('N', 0), ('T', 0), ('Z', 0), ('f', 1), ('f', 2), ('f', 3)) + || 0 >> : (('f', 3), ('g', 3), ('a', 3), ('b', 3), ('V', 3), ('W', 3), ('Q', 3), ('K', 4), ('K', 5), ('K', 6), ('K', 7)) ; max(-2, 0)
09/23/2019 11:41:37 PM INFO Max deadline: 0
09/23/2019 11:41:37 PM INFO Generated output word is: [(), (), (), (), (), ('V',), ('V',), ('V',), (), (), (), ('M',), ('M',), ('M',)]
09/23/2019 11:41:37 PM INFO Generated control policy is: Base -> 1 -> Y -> 1 -> Z -> 1 -> a -> 1 -> b -> 1 -> V -> 1 -> V -> 1 -> V -> 1 -> P -> 1 -> O -> 1 -> N -> 1 -> M -> 1 -> M -> 1 -> M
09/23/2019 11:41:37 PM INFO Max deadline: 0
09/23/2019 11:41:37 PM INFO Generated output word is: [(), (), (), (), (), (), ('N',), ('N',), ('N',), (), (), (), (), ('X',), ('X',), ('X',)]
09/23/2019 11:41:37 PM INFO Generated control policy is: Base2 -> 1 -> h -> 1 -> b -> 1 -> a -> 1 -> Z -> 1 -> T -> 1 -> N -> 1 -> N -> 1 -> N -> 1 -> O -> 1 -> P -> 1 -> V -> 1 -> W -> 1 -> X -> 1 -> X -> 1 -> X
09/23/2019 11:41:37 PM INFO Max deadline: -1
09/23/2019 11:41:37 PM INFO Generated output word is: [(), (), (), (), (), ('f',), ('f',), ('f',), (), (), (), (), (), (), ('K',), ('K',), ('K',), ('K',)]
09/23/2019 11:41:37 PM INFO Generated control policy is: Base3 -> 1 -> H -> 1 -> N -> 1 -> T -> 1 -> Z -> 1 -> f -> 1 -> f -> 1 -> f -> 1 -> g -> 1 -> a -> 1 -> b -> 1 -> V -> 1 -> W -> 1 -> Q -> 1 -> K -> 1 -> K -> 1 -> K -> 1 -> K
