05/28/2020 11:29:10 PM DEBUG [hold] Prop: r16 Duration: 2 Negation: False Props: set(['r16', 'r27', 'Base1'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 3 DFA: (Hold 2 r16 )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r27 Duration: 1 Negation: False Props: set(['r16', 'r27', 'Base1'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r27 )
05/28/2020 11:29:10 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r16 ) 0 3 ) DFA2: (Eventually (Hold 1 r27 ) 0 5 )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: Base1 Duration: 0 Negation: False Props: set(['r16', 'r27', 'Base1'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 0 Base1 )
05/28/2020 11:29:10 PM DEBUG [concatenation] DFA1: (Concat (Eventually (Hold 2 r16 ) 0 3 ) (Eventually (Hold 1 r27 ) 0 5 ) ) DFA2: (Eventually (Hold 0 Base1 ) 0 5 )
05/28/2020 11:29:10 PM DEBUG [spec] spec: [H^2 r16]^[0, 3] * [H^1 r27]^[0, 5] * [H^0 Base1]^[0, 5]
05/28/2020 11:29:10 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Concat (Eventually (Hold 2 r16 ) 0 3 ) (Eventually (Hold 1 r27 ) 0 5 ) ) (Eventually (Hold 0 Base1 ) 0 5 ) )
Directed: True
Multi: False
Props: {'r16': 1, 'r27': 2, 'Base1': 4}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7]) 
Initial: [0]
Final: set([6])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {})]
Edges: [(0, 0, {'input': set([0, 2, 4, 6]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3, 5, 7]), 'guard': u'r16', 'weight': 0, 'label': u'r16'}), (1, 0, {'input': set([0, 2, 4, 6]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3, 5, 7]), 'guard': u'r16', 'weight': 0, 'label': u'r16'}), (2, 0, {'input': set([0, 2, 4, 6]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3, 5, 7]), 'guard': u'r16', 'weight': 0, 'label': u'r16'}), (3, 3, {'input': set([0, 1, 4, 5]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3, 6, 7]), 'guard': u'r27', 'weight': 0, 'label': u'r27'}), (4, 3, {'input': set([0, 1, 4, 5]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3, 6, 7]), 'guard': u'r27', 'weight': 0, 'label': u'r27'}), (5, 5, {'input': set([0, 1, 2, 3]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (5, 6, {'input': set([4, 5, 6, 7]), 'guard': u'Base1', 'weight': 0, 'label': u'Base1'})]
		
05/28/2020 11:29:10 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([6])
 Left:
   Op: Concatenation Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([5])
   Left:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([0])
     Final: set([3])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([0])
       Final: set([3])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([3])
     Final: set([5])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([3])
       Final: set([5])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([5])
   Final: set([6])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([5])
     Final: set([6])

05/28/2020 11:29:10 PM DEBUG [spec] No of nodes: 7
05/28/2020 11:29:10 PM DEBUG [spec] No of edges: 12
05/28/2020 11:29:10 PM DEBUG 
End of translate


05/28/2020 11:29:10 PM INFO The bound of formula "[H^2 r16]^[0, 3] * [H^1 r27]^[0, 5] * [H^0 Base1]^[0, 5]" is (5, 15)!
05/28/2020 11:29:10 PM INFO Translated formula "[H^2 r16]^[0, 3] * [H^1 r27]^[0, 5] * [H^0 Base1]^[0, 5]" to infinity DFA of size (7, 12)!
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r12 Duration: 3 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base2', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 3 r12 )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r13 Duration: 3 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base2', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 3 r13 )
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
05/28/2020 11:29:10 PM DEBUG [union] DFA1: (Eventually (Hold 3 r12 ) 0 6 ) DFA2: (Eventually (Hold 3 r13 ) 0 6 )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r20 Duration: 3 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base2', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 3 r20 )
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
05/28/2020 11:29:10 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r12 ) 0 6 ) (Eventually (Hold 3 r13 ) 0 6 ) ) DFA2: (Eventually (Hold 3 r20 ) 0 6 )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r7 Duration: 2 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base2', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r7 )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r14 Duration: 2 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base2', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r14 )
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(0, 1), (0, 0), (0, 2)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(0, 1), (0, 0), (0, 2)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(0, 0), (2, 0), (1, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(0, 0), (2, 0), (1, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG [union] DFA1: (Eventually (Hold 2 r7 ) 0 7 ) DFA2: (Eventually (Hold 2 r14 ) 0 7 )
05/28/2020 11:29:10 PM DEBUG [concatenation] DFA1: (Union (Union (Eventually (Hold 3 r12 ) 0 6 ) (Eventually (Hold 3 r13 ) 0 6 ) ) (Eventually (Hold 3 r20 ) 0 6 ) ) DFA2: (Union (Eventually (Hold 2 r7 ) 0 7 ) (Eventually (Hold 2 r14 ) 0 7 ) )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: Base2 Duration: 0 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base2', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 3 DFA: (Hold 0 Base2 )
05/28/2020 11:29:10 PM DEBUG [concatenation] DFA1: (Concat (Union (Union (Eventually (Hold 3 r12 ) 0 6 ) (Eventually (Hold 3 r13 ) 0 6 ) ) (Eventually (Hold 3 r20 ) 0 6 ) ) (Union (Eventually (Hold 2 r7 ) 0 7 ) (Eventually (Hold 2 r14 ) 0 7 ) ) ) DFA2: (Eventually (Hold 0 Base2 ) 0 3 )
05/28/2020 11:29:10 PM DEBUG [spec] spec: ([H^3 r12]^[0, 6] | [H^3 r13]^[0, 6] | [H^3 r20]^[0, 6]) * ([H^2 r7]^[0, 7] | [H^2 r14]^[0, 7])  * [H^0 Base2]^[0, 3]
05/28/2020 11:29:10 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Concat (Union (Union (Eventually (Hold 3 r12 ) 0 6 ) (Eventually (Hold 3 r13 ) 0 6 ) ) (Eventually (Hold 3 r20 ) 0 6 ) ) (Union (Eventually (Hold 2 r7 ) 0 7 ) (Eventually (Hold 2 r14 ) 0 7 ) ) ) (Eventually (Hold 0 Base2 ) 0 3 ) )
Directed: True
Multi: False
Props: {'r14': 1, 'r7': 2, 'r12': 4, 'r13': 8, 'Base2': 16, 'r20': 32}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]) 
Initial: [16]
Final: set([74])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {}), (67, {}), (68, {}), (69, {}), (70, {}), (71, {}), (72, {}), (73, {}), (74, {})]
Edges: [(0, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (0, 25, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (0, 21, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (0, 30, {'input': set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | ((((r12) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | ((((r12) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))'}), (0, 39, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (1, 33, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (1, 5, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (1, 39, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (1, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (1, 53, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (1, 63, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (1, 60, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (1, 37, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (2, 33, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (2, 12, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (2, 15, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (2, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 50, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (2, 52, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (2, 53, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (2, 63, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (3, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 1, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (3, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (3, 52, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (3, 30, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))'}), (4, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (4, 3, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (4, 30, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]), 'guard': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))'}), (4, 55, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (5, 36, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (5, 8, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (5, 41, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (5, 43, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (5, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 18, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (5, 62, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (5, 63, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (6, 4, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (6, 43, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (6, 45, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (6, 14, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (6, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 51, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (6, 53, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (6, 21, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (7, 32, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (7, 3, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (7, 15, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (7, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 52, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (7, 53, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (7, 58, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (7, 31, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (8, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (8, 21, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (8, 30, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]), 'guard': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))'}), (8, 7, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (9, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 53, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (9, 30, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((r12) & ((else))) | ((((else)) & (r13)) | ((r12) & (r13)))) & (r20)) | ((((r12) & ((else))) | ((((else)) & (r13)) | ((r12) & (r13)))) & ((else)))', 'weight': 0, 'label': '((((r12) & ((else))) | ((((else)) & (r13)) | ((r12) & (r13)))) & (r20)) | ((((r12) & ((else))) | ((((else)) & (r13)) | ((r12) & (r13)))) & ((else)))'}), (10, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 30, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & ((else))) & (r20)) | (((((r12) & (r13)) | (((else)) & (r13))) & ((else))) | ((((r12) & ((else))) & (r20)) | ((((r12) & (r13)) | (((else)) & (r13))) & (r20))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r20)) | (((((r12) & (r13)) | (((else)) & (r13))) & ((else))) | ((((r12) & ((else))) & (r20)) | ((((r12) & (r13)) | (((else)) & (r13))) & (r20))))'}), (10, 39, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (11, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 24, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (11, 3, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (11, 30, {'input': set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))', 'weight': 0, 'label': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))'}), (11, 43, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (12, 35, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (12, 36, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (12, 39, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (12, 11, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (12, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 20, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (12, 21, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (12, 25, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (13, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (13, 3, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (13, 38, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (13, 39, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (13, 55, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (13, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (13, 23, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (13, 59, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (14, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 18, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (14, 36, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (14, 30, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]), 'guard': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))'}), (14, 63, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (15, 36, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (15, 39, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (15, 40, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (15, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 18, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (15, 20, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (15, 60, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (15, 63, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (16, 1, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (16, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (16, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 34, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (16, 48, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (16, 50, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (16, 52, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (16, 63, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (17, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 52, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (17, 30, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | ((((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | ((((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))))'}), (18, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 52, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (18, 21, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (18, 30, {'input': set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((r12) & (r13)) & (r20))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((r12) & (r13)) & (r20))))'}), (18, 13, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (19, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 3, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (19, 53, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (19, 30, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]), 'guard': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))'}), (19, 31, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (20, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 8, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (20, 43, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (20, 30, {'input': set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((r12) & (r13)) & (r20))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((r12) & (r13)) & (r20))))'}), (20, 63, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (21, 32, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (21, 1, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (21, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (21, 3, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (21, 47, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (21, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 52, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (21, 55, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (22, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 51, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (22, 53, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (22, 30, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]), 'guard': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))'}), (22, 21, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (23, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 43, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (23, 30, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))'}), (23, 14, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (23, 53, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (24, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (24, 30, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((r12) & ((else))) | ((((else)) & (r13)) | ((r12) & (r13)))) & (r20)) | ((((r12) & ((else))) | ((((else)) & (r13)) | ((r12) & (r13)))) & ((else)))', 'weight': 0, 'label': '((((r12) & ((else))) | ((((else)) & (r13)) | ((r12) & (r13)))) & (r20)) | ((((r12) & ((else))) | ((((else)) & (r13)) | ((r12) & (r13)))) & ((else)))'}), (25, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (25, 3, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (25, 9, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (25, 43, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (25, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 55, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (25, 24, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (25, 28, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (26, 3, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (26, 43, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (26, 14, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (26, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 53, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (26, 54, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (26, 24, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (26, 31, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (27, 3, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (27, 5, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (27, 38, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (27, 39, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (27, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 53, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (27, 57, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (27, 31, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (28, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 33, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (28, 53, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (28, 30, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]), 'guard': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))'}), (28, 63, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (29, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 63, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (29, 60, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (29, 30, {'input': set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((r12) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((r12) & ((else))) & (r20))))', 'weight': 0, 'label': '(((r12) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((r12) & ((else))) & (r20))))'}), (29, 39, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (30, 72, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (30, 65, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'}), (30, 30, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (30, 73, {'input': set([35, 3, 51, 7, 47, 11, 63, 15, 43, 19, 59, 23, 39, 27, 55, 31]), 'guard': '(r7) & (r14)', 'weight': 0, 'label': '(r7) & (r14)'}), (31, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 36, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (31, 52, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (31, 29, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (31, 30, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))'}), (32, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (32, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (32, 59, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (32, 30, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((r12) & (r13)) | (((else)) & (r13))) & (r20)) | ((((r12) & (r13)) | (((else)) & (r13))) & ((else)))', 'weight': 0, 'label': '((((r12) & (r13)) | (((else)) & (r13))) & (r20)) | ((((r12) & (r13)) | (((else)) & (r13))) & ((else)))'}), (32, 39, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (33, 35, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (33, 36, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (33, 13, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (33, 29, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (33, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 52, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (33, 21, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (33, 61, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (34, 64, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (34, 5, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (34, 39, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (34, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 51, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (34, 53, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (34, 25, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (34, 21, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (35, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 32, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (35, 3, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (35, 52, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (35, 30, {'input': set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & (r13)) & (r20)) | ((((r12) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((r12) & ((else))) & (r20))))', 'weight': 0, 'label': '((((else)) & (r13)) & (r20)) | ((((r12) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((r12) & ((else))) & (r20))))'}), (36, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 50, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (36, 52, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (36, 30, {'input': set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((r12) & (r13)) & (r20))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((r12) & (r13)) & (r20))))'}), (36, 63, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (37, 35, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (37, 36, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (37, 41, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (37, 43, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (37, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 49, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (37, 21, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (37, 4, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (38, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (38, 43, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (38, 28, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (38, 30, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))'}), (39, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (39, 8, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (39, 43, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (39, 48, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (39, 22, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (39, 28, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (39, 63, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (40, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 43, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (40, 4, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (40, 21, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (40, 30, {'input': set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((r12) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((r12) & ((else))) & (r20))))', 'weight': 0, 'label': '(((r12) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((r12) & ((else))) & (r20))))'}), (41, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 30, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & ((else))) & (r20)) | (((((r12) & ((else))) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & (r20))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r20)) | (((((r12) & ((else))) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & (r20))))'}), (41, 63, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (42, 3, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (42, 36, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (42, 38, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (42, 39, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (42, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 17, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (42, 20, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (42, 56, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (43, 48, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (43, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (43, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (43, 30, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]), 'guard': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))'}), (43, 63, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (44, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 35, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (44, 36, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (44, 21, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (44, 30, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]), 'guard': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))'}), (45, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 17, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (45, 3, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (45, 36, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (45, 30, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]), 'guard': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))'}), (46, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 30, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & ((else))) & (r20)) | (((((r12) & ((else))) | ((((else)) & (r13)) | ((r12) & (r13)))) & ((else))) | ((((r12) & ((else))) | ((((else)) & (r13)) | ((r12) & (r13)))) & (r20)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r20)) | (((((r12) & ((else))) | ((((else)) & (r13)) | ((r12) & (r13)))) & ((else))) | ((((r12) & ((else))) | ((((else)) & (r13)) | ((r12) & (r13)))) & (r20)))'}), (47, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 39, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (47, 53, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (47, 30, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((r12) & (r13)) | (((else)) & (r13))) & (r20)) | ((((r12) & (r13)) | (((else)) & (r13))) & ((else)))', 'weight': 0, 'label': '((((r12) & (r13)) | (((else)) & (r13))) & (r20)) | ((((r12) & (r13)) | (((else)) & (r13))) & ((else)))'}), (47, 5, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (48, 42, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (48, 13, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (48, 15, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (48, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (48, 51, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (48, 52, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (48, 21, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (48, 53, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (49, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 3, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (49, 30, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((((r12) & ((else))) | ((r12) & (r13))) & ((else))) | ((((r12) & ((else))) | ((r12) & (r13))) & (r20))))', 'weight': 0, 'label': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((((r12) & ((else))) | ((r12) & (r13))) & ((else))) | ((((r12) & ((else))) | ((r12) & (r13))) & (r20))))'}), (50, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (50, 39, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (50, 7, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (50, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 21, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (50, 25, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (50, 26, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (50, 59, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (51, 32, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (51, 3, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (51, 36, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (51, 10, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (51, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 17, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (51, 52, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (51, 29, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (52, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (52, 6, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (52, 39, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (52, 48, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (52, 59, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (52, 60, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (52, 63, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (53, 0, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (53, 36, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (53, 18, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (53, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 50, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (53, 52, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (53, 29, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (53, 63, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (54, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 36, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (54, 30, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((r12) & ((else))) | ((((else)) & (r13)) | ((r12) & (r13)))) & (r20)) | ((((r12) & ((else))) | ((((else)) & (r13)) | ((r12) & (r13)))) & ((else)))', 'weight': 0, 'label': '((((r12) & ((else))) | ((((else)) & (r13)) | ((r12) & (r13)))) & (r20)) | ((((r12) & ((else))) | ((((else)) & (r13)) | ((r12) & (r13)))) & ((else)))'}), (55, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 52, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (55, 53, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (55, 30, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))'}), (55, 15, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (56, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 43, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (56, 30, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | ((((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | ((((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))))'}), (57, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 41, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (57, 43, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (57, 36, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (57, 30, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))'}), (58, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 36, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (58, 20, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (58, 30, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((r12) & (r13)) | (((else)) & (r13))) & (r20)) | ((((r12) & (r13)) | (((else)) & (r13))) & ((else)))', 'weight': 0, 'label': '((((r12) & (r13)) | (((else)) & (r13))) & (r20)) | ((((r12) & (r13)) | (((else)) & (r13))) & ((else)))'}), (58, 39, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (59, 33, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (59, 8, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (59, 43, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (59, 44, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (59, 14, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (59, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 53, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (59, 63, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (60, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (60, 4, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (60, 7, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (60, 43, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (60, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 19, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (60, 21, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (60, 28, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (61, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 3, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (61, 38, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (61, 30, {'input': set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))', 'weight': 0, 'label': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))'}), (61, 39, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (62, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 21, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (62, 30, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((((r12) & ((else))) | ((r12) & (r13))) & ((else))) | ((((r12) & ((else))) | ((r12) & (r13))) & (r20))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((((r12) & ((else))) | ((r12) & (r13))) & ((else))) | ((((r12) & ((else))) | ((r12) & (r13))) & (r20))))'}), (63, 1, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (63, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (63, 7, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (63, 13, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (63, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 52, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (63, 21, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (63, 27, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (64, 3, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (64, 36, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (64, 41, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (64, 43, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (64, 46, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (64, 16, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 17, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (64, 24, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (65, 72, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (65, 66, {'input': set([35, 3, 51, 7, 47, 11, 63, 15, 43, 19, 59, 23, 39, 27, 55, 31]), 'guard': '(r7) & (r14)', 'weight': 0, 'label': '(r7) & (r14)'}), (65, 68, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'}), (65, 30, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (66, 67, {'input': set([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63]), 'guard': '(((else)) & (r14)) | ((r7) & (r14))', 'weight': 0, 'label': '(((else)) & (r14)) | ((r7) & (r14))'}), (66, 69, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (66, 30, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (67, 74, {'input': set([16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': u'Base2', 'weight': 0, 'label': u'Base2'}), (67, 67, {'input': set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (68, 72, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (68, 67, {'input': set([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63]), 'guard': '(((else)) & (r14)) | ((r7) & (r14))', 'weight': 0, 'label': '(((else)) & (r14)) | ((r7) & (r14))'}), (68, 30, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (69, 65, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'}), (69, 67, {'input': set([2, 3, 6, 7, 10, 11, 14, 15, 18, 19, 22, 23, 26, 27, 30, 31, 34, 35, 38, 39, 42, 43, 46, 47, 50, 51, 54, 55, 58, 59, 62, 63]), 'guard': '((r7) & (r14)) | ((r7) & ((else)))', 'weight': 0, 'label': '((r7) & (r14)) | ((r7) & ((else)))'}), (69, 30, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (70, 67, {'input': set([2, 3, 6, 7, 10, 11, 14, 15, 18, 19, 22, 23, 26, 27, 30, 31, 34, 35, 38, 39, 42, 43, 46, 47, 50, 51, 54, 55, 58, 59, 62, 63]), 'guard': '((r7) & ((else))) | ((r7) & (r14))', 'weight': 0, 'label': '((r7) & ((else))) | ((r7) & (r14))'}), (70, 68, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'}), (70, 30, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (71, 67, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63]), 'guard': '(((else)) & (r14)) | (((r7) & ((else))) | ((r7) & (r14)))', 'weight': 0, 'label': '(((else)) & (r14)) | (((r7) & ((else))) | ((r7) & (r14)))'}), (71, 30, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (72, 65, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'}), (72, 30, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (72, 69, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (72, 70, {'input': set([35, 3, 51, 7, 47, 11, 63, 15, 43, 19, 59, 23, 39, 27, 55, 31]), 'guard': '(r7) & (r14)', 'weight': 0, 'label': '(r7) & (r14)'}), (73, 68, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'}), (73, 69, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (73, 30, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (73, 71, {'input': set([35, 3, 51, 7, 47, 11, 63, 15, 43, 19, 59, 23, 39, 27, 55, 31]), 'guard': '(r7) & (r14)', 'weight': 0, 'label': '(r7) & (r14)'})]
		
05/28/2020 11:29:10 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([16])
 Final: set([74])
 Left:
   Op: Concatenation Flags[WDF, WWF, UNR]: True True False
   Init: set([16])
   Final: set([67])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([16])
     Final: set([30])
     Choices:
       0 -> both=set([]) left=set([]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
       3 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       4 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       8 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       9 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       10 -> both=set([40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55])
       11 -> both=set([]) left=set([]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
       14 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       17 -> both=set([40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55])
       18 -> both=set([]) left=set([]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
       19 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       20 -> both=set([]) left=set([]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
       22 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       23 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       24 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       28 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       29 -> both=set([]) left=set([]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
       31 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       32 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       35 -> both=set([]) left=set([]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
       36 -> both=set([]) left=set([]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
       38 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       40 -> both=set([]) left=set([]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
       41 -> both=set([36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31]) right=set([32, 33, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 56, 57, 58, 59])
       43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       44 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       46 -> both=set([36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]) right=set([32, 33, 34, 35, 48, 49, 50, 51])
       47 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       49 -> both=set([36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31]) right=set([32, 33, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 56, 57, 58, 59])
       54 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       55 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       56 -> both=set([40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55])
       57 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       58 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       61 -> both=set([]) left=set([]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
       62 -> both=set([36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31]) right=set([32, 33, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 56, 57, 58, 59])
     Left:
       Op: Union Flags[WDF, WWF, UNR]: True True False
       Init: set([16])
       Final: set([30])
       Choices:
         3 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         4 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         8 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         9 -> both=set([12, 13, 14, 15, 28, 29, 30, 31, 44, 45, 46, 47, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 20, 21, 22, 23, 36, 37, 38, 39, 52, 53, 54, 55]) right=set([8, 9, 10, 11, 24, 25, 26, 27, 40, 41, 42, 43, 56, 57, 58, 59])
         10 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         14 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         17 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         19 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         22 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         23 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         24 -> both=set([12, 13, 14, 15, 28, 29, 30, 31, 44, 45, 46, 47, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 20, 21, 22, 23, 36, 37, 38, 39, 52, 53, 54, 55]) right=set([8, 9, 10, 11, 24, 25, 26, 27, 40, 41, 42, 43, 56, 57, 58, 59])
         28 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         31 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         32 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         38 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         41 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         44 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         46 -> both=set([12, 13, 14, 15, 28, 29, 30, 31, 44, 45, 46, 47, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 20, 21, 22, 23, 36, 37, 38, 39, 52, 53, 54, 55]) right=set([8, 9, 10, 11, 24, 25, 26, 27, 40, 41, 42, 43, 56, 57, 58, 59])
         47 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         49 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         54 -> both=set([12, 13, 14, 15, 28, 29, 30, 31, 44, 45, 46, 47, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 20, 21, 22, 23, 36, 37, 38, 39, 52, 53, 54, 55]) right=set([8, 9, 10, 11, 24, 25, 26, 27, 40, 41, 42, 43, 56, 57, 58, 59])
         55 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         56 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         57 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         58 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         62 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       Left:
         Op: Eventually Flags[WDF, WWF, UNR]: True True False
         Init: set([16])
         Final: set([30])
         Left:
           Op: Hold Flags[WDF, WWF, UNR]: True True True
           Init: set([16])
           Final: set([30])
       Right:
         Op: Eventually Flags[WDF, WWF, UNR]: True True False
         Init: set([16])
         Final: set([30])
         Left:
           Op: Hold Flags[WDF, WWF, UNR]: True True True
           Init: set([16])
           Final: set([30])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([16])
       Final: set([30])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([16])
         Final: set([30])
   Right:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([30])
     Final: set([67])
     Choices:
       66 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63])
       68 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63])
       69 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15, 18, 19, 22, 23, 26, 27, 30, 31, 34, 35, 38, 39, 42, 43, 46, 47, 50, 51, 54, 55, 58, 59, 62, 63]) right=set([])
       70 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15, 18, 19, 22, 23, 26, 27, 30, 31, 34, 35, 38, 39, 42, 43, 46, 47, 50, 51, 54, 55, 58, 59, 62, 63]) right=set([])
       71 -> both=set([3, 7, 11, 15, 19, 23, 27, 31, 35, 39, 43, 47, 51, 55, 59, 63]) left=set([2, 6, 10, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54, 58, 62]) right=set([1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([30])
       Final: set([67])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([30])
         Final: set([67])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([30])
       Final: set([67])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([30])
         Final: set([67])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([67])
   Final: set([74])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([67])
     Final: set([74])

05/28/2020 11:29:10 PM DEBUG [spec] No of nodes: 75
05/28/2020 11:29:10 PM DEBUG [spec] No of edges: 412
05/28/2020 11:29:10 PM DEBUG 
End of translate


05/28/2020 11:29:10 PM INFO The bound of formula "([H^3 r12]^[0, 6] | [H^3 r13]^[0, 6] | [H^3 r20]^[0, 6]) * ([H^2 r7]^[0, 7] | [H^2 r14]^[0, 7])  * [H^0 Base2]^[0, 3]" is (7, 18)!
05/28/2020 11:29:10 PM INFO Translated formula "([H^3 r12]^[0, 6] | [H^3 r13]^[0, 6] | [H^3 r20]^[0, 6]) * ([H^2 r7]^[0, 7] | [H^2 r14]^[0, 7])  * [H^0 Base2]^[0, 3]" to infinity DFA of size (75, 412)!
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r12 Duration: 2 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base3', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 2 r12 )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r13 Duration: 2 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base3', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 2 r13 )
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(0, 1), (0, 0), (0, 2)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(0, 1), (0, 0), (0, 2)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(0, 0), (2, 0), (1, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(0, 0), (2, 0), (1, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG [union] DFA1: (Eventually (Hold 2 r12 ) 0 6 ) DFA2: (Eventually (Hold 2 r13 ) 0 6 )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r20 Duration: 2 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base3', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 2 r20 )
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM DEBUG state: Union 
 init: [(2, 1), (2, 2), (2, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(2, 1), (2, 2), (2, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(2, 1), (2, 2), (2, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(2, 1), (2, 2), (2, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(2, 1), (2, 2), (2, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(8, 0), (4, 0), (9, 0), (5, 0), (0, 0), (6, 0), (1, 0), (7, 0), (2, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(8, 0), (4, 0), (9, 0), (5, 0), (0, 0), (6, 0), (1, 0), (7, 0), (2, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG [union] DFA1: (Union (Eventually (Hold 2 r12 ) 0 6 ) (Eventually (Hold 2 r13 ) 0 6 ) ) DFA2: (Eventually (Hold 2 r20 ) 0 6 )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r7 Duration: 2 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base3', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r7 )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r14 Duration: 2 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base3', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r14 )
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(0, 1), (0, 0), (0, 2)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(0, 1), (0, 0), (0, 2)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(0, 0), (2, 0), (1, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(0, 0), (2, 0), (1, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG [union] DFA1: (Eventually (Hold 2 r7 ) 0 7 ) DFA2: (Eventually (Hold 2 r14 ) 0 7 )
05/28/2020 11:29:10 PM DEBUG [concatenation] DFA1: (Union (Union (Eventually (Hold 2 r12 ) 0 6 ) (Eventually (Hold 2 r13 ) 0 6 ) ) (Eventually (Hold 2 r20 ) 0 6 ) ) DFA2: (Union (Eventually (Hold 2 r7 ) 0 7 ) (Eventually (Hold 2 r14 ) 0 7 ) )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: Base3 Duration: 0 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base3', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 3 DFA: (Hold 0 Base3 )
05/28/2020 11:29:10 PM DEBUG [concatenation] DFA1: (Concat (Union (Union (Eventually (Hold 2 r12 ) 0 6 ) (Eventually (Hold 2 r13 ) 0 6 ) ) (Eventually (Hold 2 r20 ) 0 6 ) ) (Union (Eventually (Hold 2 r7 ) 0 7 ) (Eventually (Hold 2 r14 ) 0 7 ) ) ) DFA2: (Eventually (Hold 0 Base3 ) 0 3 )
05/28/2020 11:29:10 PM DEBUG [spec] spec: ([H^2 r12]^[0, 6] | [H^2 r13]^[0, 6] | [H^2 r20]^[0, 6]) * ([H^2 r7]^[0, 7] | [H^2 r14]^[0, 7]) * [H^0 Base3]^[0, 3]
05/28/2020 11:29:10 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Concat (Union (Union (Eventually (Hold 2 r12 ) 0 6 ) (Eventually (Hold 2 r13 ) 0 6 ) ) (Eventually (Hold 2 r20 ) 0 6 ) ) (Union (Eventually (Hold 2 r7 ) 0 7 ) (Eventually (Hold 2 r14 ) 0 7 ) ) ) (Eventually (Hold 0 Base3 ) 0 3 ) )
Directed: True
Multi: False
Props: {'r14': 1, 'r7': 2, 'r12': 4, 'r13': 8, 'Base3': 16, 'r20': 32}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]) 
Initial: [25]
Final: set([37])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {})]
Edges: [(0, 5, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (0, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (0, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (0, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (0, 19, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (0, 22, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (0, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (0, 26, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (1, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (1, 4, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (1, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (1, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (1, 18, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (1, 21, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (1, 24, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (1, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (2, 8, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (2, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (2, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (2, 16, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (2, 23, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (2, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 27, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (3, 9, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((((r12) & ((else))) | ((r12) & (r13))) & ((else))) | ((((r12) & ((else))) | ((r12) & (r13))) & (r20))))', 'weight': 0, 'label': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((((r12) & ((else))) | ((r12) & (r13))) & ((else))) | ((((r12) & ((else))) | ((r12) & (r13))) & (r20))))'}), (3, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (3, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 9, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]), 'guard': '((((r12) & (r13)) | ((r12) & ((else)))) & ((else))) | ((((r12) & (r13)) | ((r12) & ((else)))) & (r20))', 'weight': 0, 'label': '((((r12) & (r13)) | ((r12) & ((else)))) & ((else))) | ((((r12) & (r13)) | ((r12) & ((else)))) & (r20))'}), (4, 27, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (4, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (4, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (5, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 9, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & ((else))) & (r20)) | ((((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & ((else))) | (((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & (r20)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r20)) | ((((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & ((else))) | (((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & (r20)))'}), (6, 9, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))'}), (6, 10, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (6, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (6, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (7, 9, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((r12) & ((else))) & (r20)) | (((((else)) & ((else))) & (r20)) | ((((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))))', 'weight': 0, 'label': '(((r12) & ((else))) & (r20)) | (((((else)) & ((else))) & (r20)) | ((((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))))'}), (7, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (7, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (8, 4, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (8, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (8, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (8, 13, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (8, 17, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (8, 22, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (8, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (9, 35, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (9, 28, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'}), (9, 36, {'input': set([35, 3, 51, 7, 47, 11, 63, 15, 43, 19, 59, 23, 39, 27, 55, 31]), 'guard': '(r7) & (r14)', 'weight': 0, 'label': '(r7) & (r14)'}), (10, 3, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (10, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (10, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (10, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (10, 18, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (10, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 26, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (10, 27, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (11, 9, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]), 'guard': '((((r12) & (r13)) | ((r12) & ((else)))) & (r20)) | ((((r12) & (r13)) | ((r12) & ((else)))) & ((else)))', 'weight': 0, 'label': '((((r12) & (r13)) | ((r12) & ((else)))) & (r20)) | ((((r12) & (r13)) | ((r12) & ((else)))) & ((else)))'}), (11, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (11, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 21, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (11, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (12, 8, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (12, 9, {'input': set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))', 'weight': 0, 'label': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))'}), (12, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (12, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (13, 16, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (13, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (13, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (13, 9, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))', 'weight': 0, 'label': '(((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))'}), (13, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 9, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))', 'weight': 0, 'label': '(((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))'}), (14, 26, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (14, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (14, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (14, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (15, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (15, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (15, 10, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (15, 13, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (15, 14, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (15, 20, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (15, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 9, {'input': set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((r12) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))', 'weight': 0, 'label': '(((r12) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))'}), (16, 18, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (16, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (16, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (17, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (17, 9, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & ((else))) | (((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & (r20))', 'weight': 0, 'label': '(((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & ((else))) | (((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & (r20))'}), (18, 9, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]), 'guard': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))'}), (18, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (18, 13, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (18, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (18, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 9, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | ((((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | ((((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))))'}), (19, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (20, 9, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))'}), (20, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (20, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (20, 4, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (20, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (21, 7, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (21, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (21, 16, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (21, 19, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (21, 20, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (21, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (22, 9, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & (r20)) | (((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & (r20)) | (((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & ((else)))'}), (23, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (23, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (23, 22, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (23, 9, {'input': set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((r12) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))', 'weight': 0, 'label': '(((r12) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))'}), (24, 9, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]), 'guard': '((((r12) & ((else))) | ((r12) & (r13))) & ((else))) | ((((r12) & ((else))) | ((r12) & (r13))) & (r20))', 'weight': 0, 'label': '((((r12) & ((else))) | ((r12) & (r13))) & ((else))) | ((((r12) & ((else))) | ((r12) & (r13))) & (r20))'}), (24, 19, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (24, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (24, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (24, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 0, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (25, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (25, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (25, 8, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (25, 10, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (25, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (25, 21, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (25, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 9, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((((r12) & (r13)) | ((r12) & ((else)))) & ((else))) | ((((r12) & (r13)) | ((r12) & ((else)))) & (r20))))', 'weight': 0, 'label': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((((r12) & (r13)) | ((r12) & ((else)))) & ((else))) | ((((r12) & (r13)) | ((r12) & ((else)))) & (r20))))'}), (26, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (27, 9, {'input': set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))', 'weight': 0, 'label': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))'}), (27, 20, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (27, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (27, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (28, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (28, 35, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (28, 29, {'input': set([35, 3, 51, 7, 47, 11, 63, 15, 43, 19, 59, 23, 39, 27, 55, 31]), 'guard': '(r7) & (r14)', 'weight': 0, 'label': '(r7) & (r14)'}), (28, 31, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'}), (29, 32, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (29, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (29, 30, {'input': set([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63]), 'guard': '(((else)) & (r14)) | ((r7) & (r14))', 'weight': 0, 'label': '(((else)) & (r14)) | ((r7) & (r14))'}), (30, 37, {'input': set([16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': u'Base3', 'weight': 0, 'label': u'Base3'}), (30, 30, {'input': set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (31, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (31, 35, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (31, 30, {'input': set([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63]), 'guard': '(((else)) & (r14)) | ((r7) & (r14))', 'weight': 0, 'label': '(((else)) & (r14)) | ((r7) & (r14))'}), (32, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (32, 28, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'}), (32, 30, {'input': set([2, 3, 6, 7, 10, 11, 14, 15, 18, 19, 22, 23, 26, 27, 30, 31, 34, 35, 38, 39, 42, 43, 46, 47, 50, 51, 54, 55, 58, 59, 62, 63]), 'guard': '((r7) & (r14)) | ((r7) & ((else)))', 'weight': 0, 'label': '((r7) & (r14)) | ((r7) & ((else)))'}), (33, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (33, 30, {'input': set([2, 3, 6, 7, 10, 11, 14, 15, 18, 19, 22, 23, 26, 27, 30, 31, 34, 35, 38, 39, 42, 43, 46, 47, 50, 51, 54, 55, 58, 59, 62, 63]), 'guard': '((r7) & ((else))) | ((r7) & (r14))', 'weight': 0, 'label': '((r7) & ((else))) | ((r7) & (r14))'}), (33, 31, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'}), (34, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (34, 30, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63]), 'guard': '(((else)) & (r14)) | (((r7) & ((else))) | ((r7) & (r14)))', 'weight': 0, 'label': '(((else)) & (r14)) | (((r7) & ((else))) | ((r7) & (r14)))'}), (35, 32, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (35, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (35, 28, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'}), (35, 33, {'input': set([35, 3, 51, 7, 47, 11, 63, 15, 43, 19, 59, 23, 39, 27, 55, 31]), 'guard': '(r7) & (r14)', 'weight': 0, 'label': '(r7) & (r14)'}), (36, 32, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (36, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (36, 34, {'input': set([35, 3, 51, 7, 47, 11, 63, 15, 43, 19, 59, 23, 39, 27, 55, 31]), 'guard': '(r7) & (r14)', 'weight': 0, 'label': '(r7) & (r14)'}), (36, 31, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'})]
		
05/28/2020 11:29:10 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([25])
 Final: set([37])
 Left:
   Op: Concatenation Flags[WDF, WWF, UNR]: True True False
   Init: set([25])
   Final: set([30])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([25])
     Final: set([9])
     Choices:
       3 -> both=set([36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31]) right=set([32, 33, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 56, 57, 58, 59])
       4 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       5 -> both=set([36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]) right=set([32, 33, 34, 35, 48, 49, 50, 51])
       6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       7 -> both=set([40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       12 -> both=set([]) left=set([]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
       13 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       14 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       16 -> both=set([]) left=set([]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
       17 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       18 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       19 -> both=set([40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55])
       20 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       22 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       23 -> both=set([]) left=set([]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       26 -> both=set([36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31]) right=set([32, 33, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 56, 57, 58, 59])
       27 -> both=set([]) left=set([]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
     Left:
       Op: Union Flags[WDF, WWF, UNR]: True True False
       Init: set([25])
       Final: set([9])
       Choices:
         3 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         4 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         5 -> both=set([12, 13, 14, 15, 28, 29, 30, 31, 44, 45, 46, 47, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 20, 21, 22, 23, 36, 37, 38, 39, 52, 53, 54, 55]) right=set([8, 9, 10, 11, 24, 25, 26, 27, 40, 41, 42, 43, 56, 57, 58, 59])
         6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         7 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         14 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         17 -> both=set([12, 13, 14, 15, 28, 29, 30, 31, 44, 45, 46, 47, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 20, 21, 22, 23, 36, 37, 38, 39, 52, 53, 54, 55]) right=set([8, 9, 10, 11, 24, 25, 26, 27, 40, 41, 42, 43, 56, 57, 58, 59])
         18 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         20 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         22 -> both=set([12, 13, 14, 15, 28, 29, 30, 31, 44, 45, 46, 47, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 20, 21, 22, 23, 36, 37, 38, 39, 52, 53, 54, 55]) right=set([8, 9, 10, 11, 24, 25, 26, 27, 40, 41, 42, 43, 56, 57, 58, 59])
         24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         26 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       Left:
         Op: Eventually Flags[WDF, WWF, UNR]: True True False
         Init: set([25])
         Final: set([9])
         Left:
           Op: Hold Flags[WDF, WWF, UNR]: True True True
           Init: set([25])
           Final: set([9])
       Right:
         Op: Eventually Flags[WDF, WWF, UNR]: True True False
         Init: set([25])
         Final: set([9])
         Left:
           Op: Hold Flags[WDF, WWF, UNR]: True True True
           Init: set([25])
           Final: set([9])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([25])
       Final: set([9])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([25])
         Final: set([9])
   Right:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([9])
     Final: set([30])
     Choices:
       32 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15, 18, 19, 22, 23, 26, 27, 30, 31, 34, 35, 38, 39, 42, 43, 46, 47, 50, 51, 54, 55, 58, 59, 62, 63]) right=set([])
       33 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15, 18, 19, 22, 23, 26, 27, 30, 31, 34, 35, 38, 39, 42, 43, 46, 47, 50, 51, 54, 55, 58, 59, 62, 63]) right=set([])
       34 -> both=set([3, 7, 11, 15, 19, 23, 27, 31, 35, 39, 43, 47, 51, 55, 59, 63]) left=set([2, 6, 10, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54, 58, 62]) right=set([1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61])
       29 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63])
       31 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([9])
       Final: set([30])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([9])
         Final: set([30])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([9])
       Final: set([30])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([9])
         Final: set([30])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([30])
   Final: set([37])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([30])
     Final: set([37])

05/28/2020 11:29:10 PM DEBUG [spec] No of nodes: 38
05/28/2020 11:29:10 PM DEBUG [spec] No of edges: 176
05/28/2020 11:29:10 PM DEBUG 
End of translate


05/28/2020 11:29:10 PM INFO The bound of formula "([H^2 r12]^[0, 6] | [H^2 r13]^[0, 6] | [H^2 r20]^[0, 6]) * ([H^2 r7]^[0, 7] | [H^2 r14]^[0, 7]) * [H^0 Base3]^[0, 3]" is (6, 18)!
05/28/2020 11:29:10 PM INFO Translated formula "([H^2 r12]^[0, 6] | [H^2 r13]^[0, 6] | [H^2 r20]^[0, 6]) * ([H^2 r7]^[0, 7] | [H^2 r14]^[0, 7]) * [H^0 Base3]^[0, 3]" to infinity DFA of size (38, 176)!
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r12 Duration: 2 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base4', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 2 r12 )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r13 Duration: 2 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base4', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 2 r13 )
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(0, 1), (0, 0), (0, 2)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(0, 1), (0, 0), (0, 2)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(0, 0), (2, 0), (1, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(0, 0), (2, 0), (1, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG [union] DFA1: (Eventually (Hold 2 r12 ) 0 6 ) DFA2: (Eventually (Hold 2 r13 ) 0 6 )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r20 Duration: 2 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base4', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 2 r20 )
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM DEBUG state: Union 
 init: [(2, 1), (2, 2), (2, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(2, 1), (2, 2), (2, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(2, 1), (2, 2), (2, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(2, 1), (2, 2), (2, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(2, 1), (2, 2), (2, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(8, 0), (4, 0), (9, 0), (5, 0), (0, 0), (6, 0), (1, 0), (7, 0), (2, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(8, 0), (4, 0), (9, 0), (5, 0), (0, 0), (6, 0), (1, 0), (7, 0), (2, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG [union] DFA1: (Union (Eventually (Hold 2 r12 ) 0 6 ) (Eventually (Hold 2 r13 ) 0 6 ) ) DFA2: (Eventually (Hold 2 r20 ) 0 6 )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r7 Duration: 2 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base4', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r7 )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r14 Duration: 2 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base4', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r14 )
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM INFO No trap states were added.
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(0, 1), (0, 0), (0, 2)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(0, 1), (0, 0), (0, 2)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Eventually 
 init: [(0, 0), (2, 0), (1, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG state: Hold 
 init: [(0, 0), (2, 0), (1, 0)]
 final: [(3, 3)]
05/28/2020 11:29:10 PM DEBUG [union] DFA1: (Eventually (Hold 2 r7 ) 0 7 ) DFA2: (Eventually (Hold 2 r14 ) 0 7 )
05/28/2020 11:29:10 PM DEBUG [concatenation] DFA1: (Union (Union (Eventually (Hold 2 r12 ) 0 6 ) (Eventually (Hold 2 r13 ) 0 6 ) ) (Eventually (Hold 2 r20 ) 0 6 ) ) DFA2: (Union (Eventually (Hold 2 r7 ) 0 7 ) (Eventually (Hold 2 r14 ) 0 7 ) )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: Base4 Duration: 0 Negation: False Props: set(['r14', 'r7', 'r12', 'r13', 'Base4', 'r20'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 3 DFA: (Hold 0 Base4 )
05/28/2020 11:29:10 PM DEBUG [concatenation] DFA1: (Concat (Union (Union (Eventually (Hold 2 r12 ) 0 6 ) (Eventually (Hold 2 r13 ) 0 6 ) ) (Eventually (Hold 2 r20 ) 0 6 ) ) (Union (Eventually (Hold 2 r7 ) 0 7 ) (Eventually (Hold 2 r14 ) 0 7 ) ) ) DFA2: (Eventually (Hold 0 Base4 ) 0 3 )
05/28/2020 11:29:10 PM DEBUG [spec] spec: ([H^2 r12]^[0, 6] | [H^2 r13]^[0, 6] | [H^2 r20]^[0, 6]) * ([H^2 r7]^[0, 7] | [H^2 r14]^[0, 7]) * [H^0 Base4]^[0, 3]
05/28/2020 11:29:10 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Concat (Union (Union (Eventually (Hold 2 r12 ) 0 6 ) (Eventually (Hold 2 r13 ) 0 6 ) ) (Eventually (Hold 2 r20 ) 0 6 ) ) (Union (Eventually (Hold 2 r7 ) 0 7 ) (Eventually (Hold 2 r14 ) 0 7 ) ) ) (Eventually (Hold 0 Base4 ) 0 3 ) )
Directed: True
Multi: False
Props: {'r14': 1, 'r7': 2, 'r12': 4, 'r13': 8, 'Base4': 16, 'r20': 32}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]) 
Initial: [25]
Final: set([37])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {})]
Edges: [(0, 5, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (0, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (0, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (0, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (0, 19, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (0, 22, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (0, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (0, 26, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (1, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (1, 4, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (1, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (1, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (1, 18, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (1, 21, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (1, 24, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (1, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (2, 8, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (2, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (2, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (2, 16, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (2, 23, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (2, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 27, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (3, 9, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((((r12) & ((else))) | ((r12) & (r13))) & ((else))) | ((((r12) & ((else))) | ((r12) & (r13))) & (r20))))', 'weight': 0, 'label': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((((r12) & ((else))) | ((r12) & (r13))) & ((else))) | ((((r12) & ((else))) | ((r12) & (r13))) & (r20))))'}), (3, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (3, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 9, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]), 'guard': '((((r12) & (r13)) | ((r12) & ((else)))) & ((else))) | ((((r12) & (r13)) | ((r12) & ((else)))) & (r20))', 'weight': 0, 'label': '((((r12) & (r13)) | ((r12) & ((else)))) & ((else))) | ((((r12) & (r13)) | ((r12) & ((else)))) & (r20))'}), (4, 27, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (4, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (4, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (5, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 9, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & ((else))) & (r20)) | ((((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & ((else))) | (((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & (r20)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r20)) | ((((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & ((else))) | (((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & (r20)))'}), (6, 9, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))'}), (6, 10, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (6, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (6, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (7, 9, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((r12) & ((else))) & (r20)) | (((((else)) & ((else))) & (r20)) | ((((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))))', 'weight': 0, 'label': '(((r12) & ((else))) & (r20)) | (((((else)) & ((else))) & (r20)) | ((((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))))'}), (7, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (7, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (8, 4, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (8, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (8, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (8, 13, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (8, 17, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (8, 22, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (8, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (9, 35, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (9, 28, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'}), (9, 36, {'input': set([35, 3, 51, 7, 47, 11, 63, 15, 43, 19, 59, 23, 39, 27, 55, 31]), 'guard': '(r7) & (r14)', 'weight': 0, 'label': '(r7) & (r14)'}), (10, 3, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (10, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (10, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (10, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (10, 18, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (10, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 26, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (10, 27, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (11, 9, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]), 'guard': '((((r12) & (r13)) | ((r12) & ((else)))) & (r20)) | ((((r12) & (r13)) | ((r12) & ((else)))) & ((else)))', 'weight': 0, 'label': '((((r12) & (r13)) | ((r12) & ((else)))) & (r20)) | ((((r12) & (r13)) | ((r12) & ((else)))) & ((else)))'}), (11, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (11, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 21, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (11, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (12, 8, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (12, 9, {'input': set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))', 'weight': 0, 'label': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))'}), (12, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (12, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (13, 16, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (13, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (13, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (13, 9, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))', 'weight': 0, 'label': '(((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))'}), (13, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 9, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))', 'weight': 0, 'label': '(((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))'}), (14, 26, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (14, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (14, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (14, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (15, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (15, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (15, 10, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (15, 13, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (15, 14, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (15, 20, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (15, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 9, {'input': set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((r12) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))', 'weight': 0, 'label': '(((r12) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))'}), (16, 18, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (16, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (16, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (17, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (17, 9, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & ((else))) | (((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & (r20))', 'weight': 0, 'label': '(((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & ((else))) | (((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & (r20))'}), (18, 9, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]), 'guard': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '((((r12) & ((else))) | ((r12) & (r13))) & (r20)) | ((((r12) & ((else))) | ((r12) & (r13))) & ((else)))'}), (18, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (18, 13, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (18, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (18, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 9, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | ((((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | ((((((else)) & (r13)) | ((r12) & (r13))) & ((else))) | (((((else)) & (r13)) | ((r12) & (r13))) & (r20))))'}), (19, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (20, 9, {'input': set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r13)) | ((r12) & (r13))) & (r20)) | (((((else)) & (r13)) | ((r12) & (r13))) & ((else)))'}), (20, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (20, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (20, 4, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (20, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (21, 7, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (21, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (21, 16, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (21, 19, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (21, 20, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (21, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (22, 9, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & (r20)) | (((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & (r20)) | (((((else)) & (r13)) | (((r12) & ((else))) | ((r12) & (r13)))) & ((else)))'}), (23, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 11, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (23, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (23, 22, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (23, 9, {'input': set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '(((r12) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))', 'weight': 0, 'label': '(((r12) & ((else))) & (r20)) | (((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))'}), (24, 9, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]), 'guard': '((((r12) & ((else))) | ((r12) & (r13))) & ((else))) | ((((r12) & ((else))) | ((r12) & (r13))) & (r20))', 'weight': 0, 'label': '((((r12) & ((else))) | ((r12) & (r13))) & ((else))) | ((((r12) & ((else))) | ((r12) & (r13))) & (r20))'}), (24, 19, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (24, 12, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (24, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (24, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 0, {'input': set([44, 45, 46, 47, 60, 61, 62, 63]), 'guard': '((r12) & (r13)) & (r20)', 'weight': 0, 'label': '((r12) & (r13)) & (r20)'}), (25, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (25, 2, {'input': set([32, 33, 34, 35, 48, 49, 50, 51]), 'guard': '(((else)) & ((else))) & (r20)', 'weight': 0, 'label': '(((else)) & ((else))) & (r20)'}), (25, 8, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (25, 10, {'input': set([36, 37, 38, 39, 52, 53, 54, 55]), 'guard': '((r12) & ((else))) & (r20)', 'weight': 0, 'label': '((r12) & ((else))) & (r20)'}), (25, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (25, 21, {'input': set([40, 41, 42, 43, 56, 57, 58, 59]), 'guard': '(((else)) & (r13)) & (r20)', 'weight': 0, 'label': '(((else)) & (r13)) & (r20)'}), (25, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 9, {'input': set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((((r12) & (r13)) | ((r12) & ((else)))) & ((else))) | ((((r12) & (r13)) | ((r12) & ((else)))) & (r20))))', 'weight': 0, 'label': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | (((((r12) & (r13)) | ((r12) & ((else)))) & ((else))) | ((((r12) & (r13)) | ((r12) & ((else)))) & (r20))))'}), (26, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 15, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (27, 9, {'input': set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))', 'weight': 0, 'label': '((((else)) & (r13)) & (r20)) | (((((else)) & ((else))) & (r20)) | ((((r12) & ((else))) & (r20)) | (((r12) & (r13)) & (r20))))'}), (27, 20, {'input': set([12, 13, 14, 15, 28, 29, 30, 31]), 'guard': '((r12) & (r13)) & ((else))', 'weight': 0, 'label': '((r12) & (r13)) & ((else))'}), (27, 25, {'input': set([0, 1, 2, 3, 16, 17, 18, 19]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 6, {'input': set([8, 9, 10, 11, 24, 25, 26, 27]), 'guard': '(((else)) & (r13)) & ((else))', 'weight': 0, 'label': '(((else)) & (r13)) & ((else))'}), (27, 1, {'input': set([4, 5, 6, 7, 20, 21, 22, 23]), 'guard': '((r12) & ((else))) & ((else))', 'weight': 0, 'label': '((r12) & ((else))) & ((else))'}), (28, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (28, 35, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (28, 29, {'input': set([35, 3, 51, 7, 47, 11, 63, 15, 43, 19, 59, 23, 39, 27, 55, 31]), 'guard': '(r7) & (r14)', 'weight': 0, 'label': '(r7) & (r14)'}), (28, 31, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'}), (29, 32, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (29, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (29, 30, {'input': set([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63]), 'guard': '(((else)) & (r14)) | ((r7) & (r14))', 'weight': 0, 'label': '(((else)) & (r14)) | ((r7) & (r14))'}), (30, 37, {'input': set([16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]), 'guard': u'Base4', 'weight': 0, 'label': u'Base4'}), (30, 30, {'input': set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (31, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (31, 35, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (31, 30, {'input': set([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63]), 'guard': '(((else)) & (r14)) | ((r7) & (r14))', 'weight': 0, 'label': '(((else)) & (r14)) | ((r7) & (r14))'}), (32, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (32, 28, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'}), (32, 30, {'input': set([2, 3, 6, 7, 10, 11, 14, 15, 18, 19, 22, 23, 26, 27, 30, 31, 34, 35, 38, 39, 42, 43, 46, 47, 50, 51, 54, 55, 58, 59, 62, 63]), 'guard': '((r7) & (r14)) | ((r7) & ((else)))', 'weight': 0, 'label': '((r7) & (r14)) | ((r7) & ((else)))'}), (33, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (33, 30, {'input': set([2, 3, 6, 7, 10, 11, 14, 15, 18, 19, 22, 23, 26, 27, 30, 31, 34, 35, 38, 39, 42, 43, 46, 47, 50, 51, 54, 55, 58, 59, 62, 63]), 'guard': '((r7) & ((else))) | ((r7) & (r14))', 'weight': 0, 'label': '((r7) & ((else))) | ((r7) & (r14))'}), (33, 31, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'}), (34, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (34, 30, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63]), 'guard': '(((else)) & (r14)) | (((r7) & ((else))) | ((r7) & (r14)))', 'weight': 0, 'label': '(((else)) & (r14)) | (((r7) & ((else))) | ((r7) & (r14)))'}), (35, 32, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (35, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (35, 28, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'}), (35, 33, {'input': set([35, 3, 51, 7, 47, 11, 63, 15, 43, 19, 59, 23, 39, 27, 55, 31]), 'guard': '(r7) & (r14)', 'weight': 0, 'label': '(r7) & (r14)'}), (36, 32, {'input': set([2, 50, 38, 6, 10, 62, 34, 14, 18, 58, 46, 22, 26, 54, 42, 30]), 'guard': '(r7) & ((else))', 'weight': 0, 'label': '(r7) & ((else))'}), (36, 9, {'input': set([0, 32, 4, 48, 8, 44, 12, 60, 16, 40, 20, 56, 24, 36, 28, 52]), 'guard': '((else)) & ((else))', 'weight': 0, 'label': '((else)) & ((else))'}), (36, 34, {'input': set([35, 3, 51, 7, 47, 11, 63, 15, 43, 19, 59, 23, 39, 27, 55, 31]), 'guard': '(r7) & (r14)', 'weight': 0, 'label': '(r7) & (r14)'}), (36, 31, {'input': set([1, 61, 5, 33, 9, 57, 13, 45, 17, 53, 21, 41, 25, 49, 29, 37]), 'guard': '((else)) & (r14)', 'weight': 0, 'label': '((else)) & (r14)'})]
		
05/28/2020 11:29:10 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([25])
 Final: set([37])
 Left:
   Op: Concatenation Flags[WDF, WWF, UNR]: True True False
   Init: set([25])
   Final: set([30])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([25])
     Final: set([9])
     Choices:
       3 -> both=set([36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31]) right=set([32, 33, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 56, 57, 58, 59])
       4 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       5 -> both=set([36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]) right=set([32, 33, 34, 35, 48, 49, 50, 51])
       6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       7 -> both=set([40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       12 -> both=set([]) left=set([]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
       13 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       14 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       16 -> both=set([]) left=set([]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
       17 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       18 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       19 -> both=set([40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55])
       20 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       22 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]) right=set([])
       23 -> both=set([]) left=set([]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       26 -> both=set([36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31]) right=set([32, 33, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 56, 57, 58, 59])
       27 -> both=set([]) left=set([]) right=set([32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63])
     Left:
       Op: Union Flags[WDF, WWF, UNR]: True True False
       Init: set([25])
       Final: set([9])
       Choices:
         3 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         4 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         5 -> both=set([12, 13, 14, 15, 28, 29, 30, 31, 44, 45, 46, 47, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 20, 21, 22, 23, 36, 37, 38, 39, 52, 53, 54, 55]) right=set([8, 9, 10, 11, 24, 25, 26, 27, 40, 41, 42, 43, 56, 57, 58, 59])
         6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         7 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         14 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         17 -> both=set([12, 13, 14, 15, 28, 29, 30, 31, 44, 45, 46, 47, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 20, 21, 22, 23, 36, 37, 38, 39, 52, 53, 54, 55]) right=set([8, 9, 10, 11, 24, 25, 26, 27, 40, 41, 42, 43, 56, 57, 58, 59])
         18 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         20 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63])
         22 -> both=set([12, 13, 14, 15, 28, 29, 30, 31, 44, 45, 46, 47, 60, 61, 62, 63]) left=set([4, 5, 6, 7, 20, 21, 22, 23, 36, 37, 38, 39, 52, 53, 54, 55]) right=set([8, 9, 10, 11, 24, 25, 26, 27, 40, 41, 42, 43, 56, 57, 58, 59])
         24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
         26 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63]) right=set([])
       Left:
         Op: Eventually Flags[WDF, WWF, UNR]: True True False
         Init: set([25])
         Final: set([9])
         Left:
           Op: Hold Flags[WDF, WWF, UNR]: True True True
           Init: set([25])
           Final: set([9])
       Right:
         Op: Eventually Flags[WDF, WWF, UNR]: True True False
         Init: set([25])
         Final: set([9])
         Left:
           Op: Hold Flags[WDF, WWF, UNR]: True True True
           Init: set([25])
           Final: set([9])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([25])
       Final: set([9])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([25])
         Final: set([9])
   Right:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([9])
     Final: set([30])
     Choices:
       32 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15, 18, 19, 22, 23, 26, 27, 30, 31, 34, 35, 38, 39, 42, 43, 46, 47, 50, 51, 54, 55, 58, 59, 62, 63]) right=set([])
       33 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15, 18, 19, 22, 23, 26, 27, 30, 31, 34, 35, 38, 39, 42, 43, 46, 47, 50, 51, 54, 55, 58, 59, 62, 63]) right=set([])
       34 -> both=set([3, 7, 11, 15, 19, 23, 27, 31, 35, 39, 43, 47, 51, 55, 59, 63]) left=set([2, 6, 10, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54, 58, 62]) right=set([1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61])
       29 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63])
       31 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([9])
       Final: set([30])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([9])
         Final: set([30])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([9])
       Final: set([30])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([9])
         Final: set([30])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([30])
   Final: set([37])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([30])
     Final: set([37])

05/28/2020 11:29:10 PM DEBUG [spec] No of nodes: 38
05/28/2020 11:29:10 PM DEBUG [spec] No of edges: 176
05/28/2020 11:29:10 PM DEBUG 
End of translate


05/28/2020 11:29:10 PM INFO The bound of formula "([H^2 r12]^[0, 6] | [H^2 r13]^[0, 6] | [H^2 r20]^[0, 6]) * ([H^2 r7]^[0, 7] | [H^2 r14]^[0, 7]) * [H^0 Base4]^[0, 3]" is (6, 18)!
05/28/2020 11:29:10 PM INFO Translated formula "([H^2 r12]^[0, 6] | [H^2 r13]^[0, 6] | [H^2 r20]^[0, 6]) * ([H^2 r7]^[0, 7] | [H^2 r14]^[0, 7]) * [H^0 Base4]^[0, 3]" to infinity DFA of size (38, 176)!
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r16 Duration: 2 Negation: False Props: set(['r16', 'r0', 'Base5'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 2 r16 )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: r0 Duration: 2 Negation: False Props: set(['r16', 'r0', 'Base5'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 2 r0 )
05/28/2020 11:29:10 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r16 ) 0 5 ) DFA2: (Eventually (Hold 2 r0 ) 0 5 )
05/28/2020 11:29:10 PM DEBUG [hold] Prop: Base5 Duration: 0 Negation: False Props: set(['r16', 'r0', 'Base5'])
05/28/2020 11:29:10 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 0 Base5 )
05/28/2020 11:29:10 PM DEBUG [concatenation] DFA1: (Concat (Eventually (Hold 2 r16 ) 0 5 ) (Eventually (Hold 2 r0 ) 0 5 ) ) DFA2: (Eventually (Hold 0 Base5 ) 0 5 )
05/28/2020 11:29:10 PM DEBUG [spec] spec: [H^2 r16]^[0, 5] * [H^2 r0]^[0, 5] * [H^0 Base5]^[0, 5]
05/28/2020 11:29:10 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Concat (Eventually (Hold 2 r16 ) 0 5 ) (Eventually (Hold 2 r0 ) 0 5 ) ) (Eventually (Hold 0 Base5 ) 0 5 ) )
Directed: True
Multi: False
Props: {'r16': 1, 'r0': 2, 'Base5': 4}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7]) 
Initial: [0]
Final: set([7])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {})]
Edges: [(0, 0, {'input': set([0, 2, 4, 6]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3, 5, 7]), 'guard': u'r16', 'weight': 0, 'label': u'r16'}), (1, 0, {'input': set([0, 2, 4, 6]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3, 5, 7]), 'guard': u'r16', 'weight': 0, 'label': u'r16'}), (2, 0, {'input': set([0, 2, 4, 6]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3, 5, 7]), 'guard': u'r16', 'weight': 0, 'label': u'r16'}), (3, 3, {'input': set([0, 1, 4, 5]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3, 6, 7]), 'guard': u'r0', 'weight': 0, 'label': u'r0'}), (4, 3, {'input': set([0, 1, 4, 5]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3, 6, 7]), 'guard': u'r0', 'weight': 0, 'label': u'r0'}), (5, 3, {'input': set([0, 1, 4, 5]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (5, 6, {'input': set([2, 3, 6, 7]), 'guard': u'r0', 'weight': 0, 'label': u'r0'}), (6, 6, {'input': set([0, 1, 2, 3]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (6, 7, {'input': set([4, 5, 6, 7]), 'guard': u'Base5', 'weight': 0, 'label': u'Base5'})]
		
05/28/2020 11:29:10 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([7])
 Left:
   Op: Concatenation Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([6])
   Left:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([0])
     Final: set([3])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([0])
       Final: set([3])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([3])
     Final: set([6])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([3])
       Final: set([6])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([6])
   Final: set([7])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([6])
     Final: set([7])

05/28/2020 11:29:10 PM DEBUG [spec] No of nodes: 8
05/28/2020 11:29:10 PM DEBUG [spec] No of edges: 14
05/28/2020 11:29:10 PM DEBUG 
End of translate


05/28/2020 11:29:10 PM INFO The bound of formula "[H^2 r16]^[0, 5] * [H^2 r0]^[0, 5] * [H^0 Base5]^[0, 5]" is (6, 17)!
05/28/2020 11:29:10 PM INFO Translated formula "[H^2 r16]^[0, 5] * [H^2 r0]^[0, 5] * [H^0 Base5]^[0, 5]" to infinity DFA of size (8, 14)!
05/28/2020 11:29:10 PM DEBUG 

Start policy computation

05/28/2020 11:29:10 PM DEBUG [extend_ts] TS: (19, 105) ETS:(19, 105)
05/28/2020 11:29:10 PM DEBUG [extend_ts] TS: (19, 105) ETS:(19, 105)
05/28/2020 11:29:10 PM DEBUG [extend_ts] TS: (19, 105) ETS:(19, 105)
05/28/2020 11:29:10 PM DEBUG [extend_ts] TS: (19, 105) ETS:(19, 105)
05/28/2020 11:29:10 PM DEBUG [extend_ts] TS: (19, 105) ETS:(19, 105)
05/28/2020 11:29:10 PM INFO Constructing product automaton with infinity DFA!
05/28/2020 11:29:10 PM INFO Product automaton size is: (58, 313)
05/28/2020 11:29:10 PM INFO Constructing product automaton with infinity DFA!
05/28/2020 11:29:10 PM INFO Product automaton size is: (65, 348)
05/28/2020 11:29:10 PM INFO Constructing product automaton with infinity DFA!
05/28/2020 11:29:10 PM INFO Product automaton size is: (62, 335)
05/28/2020 11:29:10 PM INFO Constructing product automaton with infinity DFA!
05/28/2020 11:29:10 PM INFO Product automaton size is: (62, 336)
05/28/2020 11:29:11 PM INFO Constructing product automaton with infinity DFA!
05/28/2020 11:29:11 PM INFO Product automaton size is: (59, 320)
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:11 PM DEBUG []
05/28/2020 11:29:15 PM INFO Max deadline: 9
05/28/2020 11:29:15 PM INFO Generated control policy is: Base1 -> 1 -> r16 -> 1 -> r16 -> 1 -> r16 -> 1 -> r17 -> 1 -> r18 -> 1 -> Base5 -> 1 -> r27 -> 1 -> r27 -> 1 -> Base5 -> 1 -> r18 -> 1 -> r17 -> 1 -> Base2 -> 1 -> Base1
05/28/2020 11:29:15 PM INFO Max deadline: 7
05/28/2020 11:29:15 PM INFO Generated control policy is: Base2 -> 1 -> r17 -> 1 -> r18 -> 1 -> r12 -> 1 -> r12 -> 1 -> r12 -> 1 -> r12 -> 1 -> r18 -> 1 -> r17 -> 1 -> r16 -> 1 -> Base1 -> 1 -> r7 -> 1 -> r7 -> 1 -> r7 -> 1 -> Base1 -> 1 -> Base2
05/28/2020 11:29:15 PM INFO Max deadline: 6
05/28/2020 11:29:15 PM INFO Generated control policy is: Base3 -> 1 -> Base4 -> 1 -> r17 -> 1 -> r18 -> 1 -> r12 -> 1 -> r12 -> 1 -> r12 -> 1 -> r18 -> 1 -> r17 -> 1 -> r16 -> 1 -> Base1 -> 1 -> r7 -> 1 -> r7 -> 1 -> r7 -> 1 -> r14 -> 1 -> Base3
05/28/2020 11:29:15 PM INFO Max deadline: 7
05/28/2020 11:29:15 PM INFO Generated control policy is: Base4 -> 1 -> r17 -> 1 -> r18 -> 1 -> r12 -> 1 -> r12 -> 1 -> r12 -> 1 -> r18 -> 1 -> r17 -> 1 -> r16 -> 1 -> Base1 -> 1 -> r7 -> 1 -> r7 -> 1 -> r7 -> 1 -> r15 -> 1 -> Base4
05/28/2020 11:29:15 PM INFO Max deadline: 8
05/28/2020 11:29:15 PM INFO Generated control policy is: Base5 -> 1 -> r18 -> 1 -> r17 -> 1 -> r16 -> 1 -> r16 -> 1 -> r16 -> 1 -> Base1 -> 1 -> r0 -> 1 -> r0 -> 1 -> r0 -> 1 -> r1 -> 1 -> Base2 -> 1 -> r17 -> 1 -> r18 -> 1 -> Base5
