10/21/2019 03:39:44 PM DEBUG [hold] Prop: A Duration: 1 Negation: False Props: set(['A', 'Base2'])
10/21/2019 03:39:44 PM DEBUG [eventually] Low: 0 High: 3 DFA: (Hold 1 A )
10/21/2019 03:39:44 PM DEBUG [hold] Prop: Base2 Duration: 1 Negation: False Props: set(['A', 'Base2'])
10/21/2019 03:39:44 PM DEBUG [eventually] Low: 0 High: 9 DFA: (Hold 1 Base2 )
10/21/2019 03:39:44 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 A ) 0 3 ) DFA2: (Eventually (Hold 1 Base2 ) 0 9 )
10/21/2019 03:39:44 PM DEBUG [spec] spec: [H^1 A]^[0, 3] * [H^1 Base2]^[0, 9]
10/21/2019 03:39:44 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 A ) 0 3 ) (Eventually (Hold 1 Base2 ) 0 9 ) )
Directed: True
Multi: False
Props: {'A': 1, 'Base2': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([4])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'A', 'weight': 0, 'label': u'A'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'A', 'weight': 0, 'label': u'A'}), (2, 2, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'Base2', 'weight': 0, 'label': u'Base2'}), (3, 2, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'Base2', 'weight': 0, 'label': u'Base2'})]
		
10/21/2019 03:39:44 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([4])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([4])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([2])
     Final: set([4])

10/21/2019 03:39:44 PM DEBUG [spec] No of nodes: 5
10/21/2019 03:39:44 PM DEBUG [spec] No of edges: 8
10/21/2019 03:39:44 PM DEBUG alphabet: {'A': 1, 'Base2': 2}
10/21/2019 03:39:44 PM DEBUG (0, 0): {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
10/21/2019 03:39:44 PM DEBUG (0, 1): {'input': set([1, 3]), 'guard': u'A', 'weight': 0, 'label': u'A'}
10/21/2019 03:39:44 PM DEBUG (1, 0): {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
10/21/2019 03:39:44 PM DEBUG (1, 2): {'input': set([1, 3]), 'guard': u'A', 'weight': 0, 'label': u'A'}
10/21/2019 03:39:44 PM DEBUG (2, 2): {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
10/21/2019 03:39:44 PM DEBUG (2, 3): {'input': set([2, 3]), 'guard': u'Base2', 'weight': 0, 'label': u'Base2'}
10/21/2019 03:39:44 PM DEBUG (3, 2): {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}
10/21/2019 03:39:44 PM DEBUG (3, 4): {'input': set([2, 3]), 'guard': u'Base2', 'weight': 0, 'label': u'Base2'}
10/21/2019 03:39:44 PM DEBUG 
End of translate


10/21/2019 03:39:44 PM INFO The bound of formula "[H^1 A]^[0, 3] * [H^1 Base2]^[0, 9]" is (3, 13)!
10/21/2019 03:39:44 PM INFO Translated formula "[H^1 A]^[0, 3] * [H^1 Base2]^[0, 9]" to infinity DFA of size (5, 8)!
10/21/2019 03:39:44 PM DEBUG 

Start policy computation

