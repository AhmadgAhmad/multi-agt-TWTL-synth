11/17/2020 12:09:17 PM DEBUG [hold] Prop: r2 Duration: 1 Negation: False Props: set(['r5', 'r10', 'r2', 'r11'])
11/17/2020 12:09:17 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r2 )
11/17/2020 12:09:17 PM DEBUG [hold] Prop: r10 Duration: 3 Negation: False Props: set(['r5', 'r10', 'r2', 'r11'])
11/17/2020 12:09:17 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 3 r10 )
11/17/2020 12:09:17 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r5', 'r10', 'r2', 'r11'])
11/17/2020 12:09:17 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 3 r11 )
11/17/2020 12:09:17 PM INFO No trap states were added.
11/17/2020 12:09:17 PM INFO No trap states were added.
11/17/2020 12:09:17 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 12:09:17 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 12:09:17 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 12:09:17 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 12:09:17 PM DEBUG [union] DFA1: (Eventually (Hold 3 r10 ) 0 6 ) DFA2: (Eventually (Hold 3 r11 ) 0 6 )
11/17/2020 12:09:17 PM DEBUG [hold] Prop: r5 Duration: 3 Negation: False Props: set(['r5', 'r10', 'r2', 'r11'])
11/17/2020 12:09:17 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 3 r5 )
11/17/2020 12:09:17 PM INFO No trap states were added.
11/17/2020 12:09:17 PM INFO No trap states were added.
11/17/2020 12:09:17 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r10 ) 0 6 ) (Eventually (Hold 3 r11 ) 0 6 ) ) DFA2: (Eventually (Hold 3 r5 ) 0 6 )
11/17/2020 12:09:17 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r2 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r10 ) 0 6 ) (Eventually (Hold 3 r11 ) 0 6 ) ) (Eventually (Hold 3 r5 ) 0 6 ) )
11/17/2020 12:09:17 PM DEBUG [spec] spec: [H^1 r2]^[0, 5] * ([H^3 r10]^[0, 6] | [H^3 r11]^[0, 6] | [H^3 r5]^[0, 6])
11/17/2020 12:09:17 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r2 ) 0 5 ) (Union (Union (Eventually (Hold 3 r10 ) 0 6 ) (Eventually (Hold 3 r11 ) 0 6 ) ) (Eventually (Hold 3 r5 ) 0 6 ) ) )
Directed: True
Multi: False
Props: {'r5': 1, 'r2': 4, 'r10': 2, 'r11': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 8, 9, 10, 11]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': u'r2', 'weight': 0, 'label': u'r2'}), (1, 0, {'input': set([0, 1, 2, 3, 8, 9, 10, 11]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': u'r2', 'weight': 0, 'label': u'r2'}), (2, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (2, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (2, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (2, 50, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (2, 52, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (2, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (2, 4, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (3, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (3, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (3, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (4, 39, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (4, 8, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (4, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (4, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (4, 62, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (5, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (5, 15, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (5, 18, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (5, 52, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (5, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (6, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (6, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (6, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (6, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (7, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (7, 57, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (7, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (7, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 64, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (8, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (8, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (8, 11, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (8, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (8, 20, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (9, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (9, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (9, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (9, 47, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (9, 17, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (9, 53, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (9, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 33, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (10, 34, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (10, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (10, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (10, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (10, 60, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (11, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (11, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (11, 10, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (11, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (12, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (12, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (13, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r5))))'}), (13, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (14, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (14, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (14, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (15, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (15, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 14, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (15, 22, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (15, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (15, 27, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (16, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (16, 40, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (16, 57, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (16, 25, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (16, 61, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (17, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (17, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (17, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (17, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (18, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (18, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (18, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (18, 42, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (18, 20, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (18, 22, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (18, 62, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (19, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))'}), (19, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (20, 16, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (20, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (21, 33, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (21, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (22, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (22, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (22, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (22, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 34, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (23, 4, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (23, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (23, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (23, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (23, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 57, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (24, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (24, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (24, 53, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (24, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (25, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (25, 17, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (25, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (25, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (26, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (26, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (27, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (27, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (27, 12, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (27, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (27, 57, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (27, 26, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (27, 30, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (28, 33, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (28, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (28, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (28, 17, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (28, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (28, 56, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (28, 26, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 33, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (29, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (29, 8, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (29, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (29, 40, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (29, 59, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (30, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (30, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (30, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (30, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (31, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))'}), (31, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (31, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (31, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (33, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (33, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 31, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (34, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (34, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (34, 61, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (35, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (35, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (35, 16, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (35, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (35, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (35, 31, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (35, 63, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (36, 66, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (36, 8, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (36, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (36, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (36, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (36, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (36, 27, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | ((((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | ((((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((r10) & ((else))) & (r5))))'}), (37, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (37, 34, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (38, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (38, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (38, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (38, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (39, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (39, 7, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (39, 43, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (39, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 51, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (39, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (40, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (40, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (40, 30, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (40, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (41, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (41, 11, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (41, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 50, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (41, 24, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (41, 30, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (42, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))'}), (42, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (42, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (42, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (43, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (44, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (44, 40, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (44, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (44, 19, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (44, 22, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (44, 58, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (45, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (45, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (45, 50, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (45, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (46, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (46, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (46, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (46, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (47, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (47, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (48, 32, {'input': set([1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)))'}), (48, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (49, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (49, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (50, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (50, 44, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (50, 16, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (50, 18, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (50, 53, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (50, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (50, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (51, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (51, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (52, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (52, 10, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (52, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 27, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (52, 28, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (52, 61, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (53, 34, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (53, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (53, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (53, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (53, 19, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (53, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (53, 31, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (54, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (54, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (54, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (54, 50, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (54, 9, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (54, 61, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (54, 62, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (55, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (55, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (55, 52, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (55, 20, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (55, 31, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (56, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (56, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (57, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (57, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (57, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (57, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (58, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))'}), (58, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (59, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (59, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (60, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (60, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (60, 22, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (61, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (61, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (61, 11, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (61, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (61, 46, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (61, 17, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (61, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (62, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (62, 7, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (62, 10, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (62, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (62, 21, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (62, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (62, 30, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (63, 40, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (63, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (63, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (63, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (64, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (65, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (65, 10, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (65, 16, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (65, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (65, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 29, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (66, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (66, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (66, 43, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (66, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (66, 48, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (66, 19, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (66, 26, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'})]
		
11/17/2020 12:09:17 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     11 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     12 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     14 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     17 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     19 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     20 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     21 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     24 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     25 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     33 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     38 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     40 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     43 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([9, 5, 13, 1])
     45 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     46 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     47 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     48 -> both=set([3, 7, 9, 11, 13, 15]) left=set([2, 6, 8, 10, 12, 14]) right=set([1, 5])
     49 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     51 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([1, 13, 5, 9])
     56 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     58 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     59 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     64 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([9, 5, 13, 1])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       7 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       11 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       12 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
       13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       17 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       21 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       24 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       26 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
       30 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       43 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       45 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       46 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       47 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       48 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
       49 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       51 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       56 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
       57 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       64 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 12:09:17 PM DEBUG [spec] No of nodes: 67
11/17/2020 12:09:17 PM DEBUG [spec] No of edges: 384
11/17/2020 12:09:17 PM DEBUG 
End of translate


11/17/2020 12:09:17 PM INFO The bound of formula "[H^1 r2]^[0, 5] * ([H^3 r10]^[0, 6] | [H^3 r11]^[0, 6] | [H^3 r5]^[0, 6])" is (5, 12)!
11/17/2020 12:09:17 PM INFO Translated formula "[H^1 r2]^[0, 5] * ([H^3 r10]^[0, 6] | [H^3 r11]^[0, 6] | [H^3 r5]^[0, 6])" to infinity DFA of size (67, 384)!
11/17/2020 12:09:17 PM DEBUG [hold] Prop: r14 Duration: 1 Negation: False Props: set(['r5', 'r14', 'r10', 'r11'])
11/17/2020 12:09:17 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r14 )
11/17/2020 12:09:17 PM DEBUG [hold] Prop: r10 Duration: 3 Negation: False Props: set(['r5', 'r14', 'r10', 'r11'])
11/17/2020 12:09:17 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 3 r10 )
11/17/2020 12:09:17 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r5', 'r14', 'r10', 'r11'])
11/17/2020 12:09:17 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 3 r11 )
11/17/2020 12:09:17 PM INFO No trap states were added.
11/17/2020 12:09:17 PM INFO No trap states were added.
11/17/2020 12:09:17 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 12:09:17 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 12:09:17 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 12:09:17 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 12:09:17 PM DEBUG [union] DFA1: (Eventually (Hold 3 r10 ) 0 6 ) DFA2: (Eventually (Hold 3 r11 ) 0 6 )
11/17/2020 12:09:17 PM DEBUG [hold] Prop: r5 Duration: 3 Negation: False Props: set(['r5', 'r14', 'r10', 'r11'])
11/17/2020 12:09:17 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 3 r5 )
11/17/2020 12:09:17 PM INFO No trap states were added.
11/17/2020 12:09:17 PM INFO No trap states were added.
11/17/2020 12:09:17 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r10 ) 0 6 ) (Eventually (Hold 3 r11 ) 0 6 ) ) DFA2: (Eventually (Hold 3 r5 ) 0 6 )
11/17/2020 12:09:17 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r14 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r10 ) 0 6 ) (Eventually (Hold 3 r11 ) 0 6 ) ) (Eventually (Hold 3 r5 ) 0 6 ) )
11/17/2020 12:09:17 PM DEBUG [spec] spec: [H^1 r14]^[0, 5] * ([H^3 r10]^[0, 6] | [H^3 r11]^[0, 6] | [H^3 r5]^[0, 6])
11/17/2020 12:09:17 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r14 ) 0 5 ) (Union (Union (Eventually (Hold 3 r10 ) 0 6 ) (Eventually (Hold 3 r11 ) 0 6 ) ) (Eventually (Hold 3 r5 ) 0 6 ) ) )
Directed: True
Multi: False
Props: {'r5': 1, 'r14': 2, 'r10': 4, 'r11': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r14', 'weight': 0, 'label': u'r14'}), (1, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r14', 'weight': 0, 'label': u'r14'}), (2, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (2, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (2, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (2, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (2, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (2, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (2, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (3, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (3, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (3, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (4, 39, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (4, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (4, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (4, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (4, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (5, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (5, 15, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (5, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (5, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (5, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (6, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (6, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (6, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (6, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (7, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (7, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (7, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (7, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 64, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (8, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (8, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (8, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (8, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (8, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (9, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (9, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (9, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (9, 47, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (9, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (9, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (9, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (10, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (10, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (10, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (10, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (10, 60, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (11, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (11, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (11, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (11, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (12, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (12, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (13, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r5))))'}), (13, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (14, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (14, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (14, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (15, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (15, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 14, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (15, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (15, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (15, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (16, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (16, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (16, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (16, 25, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (16, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (17, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (17, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (17, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (17, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (18, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (18, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (18, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (18, 42, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (18, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (18, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (18, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (19, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))'}), (19, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (20, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (20, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (21, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (21, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (22, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (22, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (22, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (22, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (23, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (23, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (23, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (23, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (23, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (24, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (24, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (24, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (24, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (25, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (25, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (25, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (25, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (26, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (26, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (27, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (27, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (27, 12, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (27, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (27, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (27, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (27, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (28, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (28, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (28, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (28, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (28, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (28, 56, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (28, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (29, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (29, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (29, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (29, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (29, 59, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (30, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (30, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (30, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (30, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (31, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))'}), (31, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (31, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (31, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (33, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (33, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (34, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (34, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (34, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (35, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (35, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (35, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (35, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (35, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (35, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (35, 63, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (36, 66, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (36, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (36, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (36, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (36, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (36, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (36, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | ((((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | ((((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((r10) & ((else))) & (r5))))'}), (37, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (37, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (38, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (38, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (38, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (38, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (39, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (39, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (39, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (39, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 51, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (39, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (40, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (40, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (40, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (40, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (41, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (41, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (41, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (41, 24, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (41, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (42, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))'}), (42, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (42, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (42, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (43, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (44, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (44, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (44, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (44, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (44, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (44, 58, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (45, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (45, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (45, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (45, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (46, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (46, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (46, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (46, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (47, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (47, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (48, 32, {'input': set([1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)))'}), (48, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (49, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (49, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (50, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (50, 44, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (50, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (50, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (50, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (50, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (50, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (51, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (51, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (52, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (52, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (52, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (52, 28, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (52, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (53, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (53, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (53, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (53, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (53, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (53, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (53, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (54, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (54, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (54, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (54, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (54, 9, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (54, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (54, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (55, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (55, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (55, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (55, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (55, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (56, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (56, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (57, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (57, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (57, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (57, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (58, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))'}), (58, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (59, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (59, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (60, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (60, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (60, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (61, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (61, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (61, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (61, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (61, 46, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (61, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (61, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (62, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (62, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (62, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (62, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (62, 21, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (62, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (62, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (63, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (63, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (63, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (63, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (64, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (65, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (65, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (65, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (65, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (65, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 29, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (66, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (66, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (66, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (66, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (66, 48, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (66, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (66, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'})]
		
11/17/2020 12:09:17 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     14 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     19 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     20 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     33 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     38 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     40 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     43 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 9, 11, 1])
     45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     48 -> both=set([5, 7, 9, 11, 13, 15]) left=set([4, 6, 8, 10, 12, 14]) right=set([1, 3])
     49 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     51 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([11, 1, 3, 9])
     56 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     58 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     59 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     64 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 9, 11, 1])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       12 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       26 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       48 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       49 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       51 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       56 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       57 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       64 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 12:09:17 PM DEBUG [spec] No of nodes: 67
11/17/2020 12:09:17 PM DEBUG [spec] No of edges: 384
11/17/2020 12:09:17 PM DEBUG 
End of translate


11/17/2020 12:09:17 PM INFO The bound of formula "[H^1 r14]^[0, 5] * ([H^3 r10]^[0, 6] | [H^3 r11]^[0, 6] | [H^3 r5]^[0, 6])" is (5, 12)!
11/17/2020 12:09:17 PM INFO Translated formula "[H^1 r14]^[0, 5] * ([H^3 r10]^[0, 6] | [H^3 r11]^[0, 6] | [H^3 r5]^[0, 6])" to infinity DFA of size (67, 384)!
11/17/2020 12:09:17 PM DEBUG [hold] Prop: r7 Duration: 1 Negation: False Props: set(['r5', 'r7', 'r10', 'r11'])
11/17/2020 12:09:17 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r7 )
11/17/2020 12:09:17 PM DEBUG [hold] Prop: r10 Duration: 3 Negation: False Props: set(['r5', 'r7', 'r10', 'r11'])
11/17/2020 12:09:17 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 3 r10 )
11/17/2020 12:09:17 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r5', 'r7', 'r10', 'r11'])
11/17/2020 12:09:17 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 3 r11 )
11/17/2020 12:09:17 PM INFO No trap states were added.
11/17/2020 12:09:17 PM INFO No trap states were added.
11/17/2020 12:09:17 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 12:09:17 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 12:09:17 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 12:09:17 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 12:09:17 PM DEBUG [union] DFA1: (Eventually (Hold 3 r10 ) 0 6 ) DFA2: (Eventually (Hold 3 r11 ) 0 6 )
11/17/2020 12:09:17 PM DEBUG [hold] Prop: r5 Duration: 3 Negation: False Props: set(['r5', 'r7', 'r10', 'r11'])
11/17/2020 12:09:17 PM DEBUG [eventually] Low: 0 High: 6 DFA: (Hold 3 r5 )
11/17/2020 12:09:17 PM INFO No trap states were added.
11/17/2020 12:09:17 PM INFO No trap states were added.
11/17/2020 12:09:17 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 12:09:17 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r10 ) 0 6 ) (Eventually (Hold 3 r11 ) 0 6 ) ) DFA2: (Eventually (Hold 3 r5 ) 0 6 )
11/17/2020 12:09:17 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r7 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r10 ) 0 6 ) (Eventually (Hold 3 r11 ) 0 6 ) ) (Eventually (Hold 3 r5 ) 0 6 ) )
11/17/2020 12:09:17 PM DEBUG [spec] spec: [H^1 r7]^[0, 5] * ([H^3 r10]^[0, 6] | [H^3 r11]^[0, 6] | [H^3 r5]^[0, 6])
11/17/2020 12:09:17 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r7 ) 0 5 ) (Union (Union (Eventually (Hold 3 r10 ) 0 6 ) (Eventually (Hold 3 r11 ) 0 6 ) ) (Eventually (Hold 3 r5 ) 0 6 ) ) )
Directed: True
Multi: False
Props: {'r5': 1, 'r7': 2, 'r10': 4, 'r11': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r7', 'weight': 0, 'label': u'r7'}), (1, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r7', 'weight': 0, 'label': u'r7'}), (2, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (2, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (2, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (2, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (2, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (2, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (2, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (3, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (3, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (3, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (4, 39, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (4, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (4, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (4, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (4, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (5, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (5, 15, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (5, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (5, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (5, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (6, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (6, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (6, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (6, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (7, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (7, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (7, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (7, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 64, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (8, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (8, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (8, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (8, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (8, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (9, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (9, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (9, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (9, 47, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (9, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (9, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (9, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (10, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (10, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (10, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (10, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (10, 60, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (11, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (11, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (11, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (11, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (12, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (12, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (13, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r5))))'}), (13, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (14, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (14, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (14, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (15, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (15, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 14, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (15, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (15, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (15, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (16, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (16, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (16, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (16, 25, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (16, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (17, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (17, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (17, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (17, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (18, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (18, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (18, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (18, 42, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (18, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (18, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (18, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (19, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))'}), (19, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (20, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (20, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (21, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (21, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (22, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (22, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (22, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (22, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (23, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (23, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (23, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (23, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (23, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (24, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (24, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (24, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (24, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (25, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (25, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (25, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (25, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (26, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (26, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (27, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (27, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (27, 12, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (27, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (27, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (27, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (27, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (28, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (28, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (28, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (28, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (28, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (28, 56, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (28, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (29, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (29, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (29, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (29, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (29, 59, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (30, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (30, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (30, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (30, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (31, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))'}), (31, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (31, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (31, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (33, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (33, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (34, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (34, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (34, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (35, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (35, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (35, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (35, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (35, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (35, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (35, 63, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (36, 66, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (36, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (36, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (36, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (36, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (36, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (36, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | ((((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | ((((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((r10) & ((else))) & (r5))))'}), (37, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (37, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (38, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (38, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (38, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (38, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (39, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (39, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (39, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (39, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 51, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (39, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (40, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (40, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (40, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (40, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (41, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (41, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (41, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (41, 24, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (41, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (42, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))'}), (42, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (42, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (42, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (43, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (44, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (44, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (44, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (44, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (44, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (44, 58, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (45, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (45, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (45, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (45, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (46, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (46, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (46, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (46, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (47, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (47, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (48, 32, {'input': set([1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)))'}), (48, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (49, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (49, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (50, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (50, 44, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (50, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (50, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (50, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (50, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (50, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (51, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (51, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (52, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (52, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (52, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (52, 28, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (52, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (53, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (53, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (53, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (53, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (53, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (53, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (53, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (54, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (54, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (54, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (54, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (54, 9, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (54, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (54, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (55, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (55, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (55, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (55, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (55, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (56, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (56, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (57, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (57, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (57, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (57, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (58, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))'}), (58, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (59, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (59, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (60, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (60, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (60, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (61, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (61, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (61, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (61, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (61, 46, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (61, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (61, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (62, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (62, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (62, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (62, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (62, 21, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (62, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (62, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (63, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (63, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (63, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (63, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (64, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (65, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (65, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (65, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (65, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (65, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 29, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (66, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (66, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (66, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (66, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (66, 48, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (66, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (66, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'})]
		
11/17/2020 12:09:17 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     14 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     19 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     20 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     33 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     38 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     40 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     43 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 9, 11, 1])
     45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     48 -> both=set([5, 7, 9, 11, 13, 15]) left=set([4, 6, 8, 10, 12, 14]) right=set([1, 3])
     49 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     51 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([11, 1, 3, 9])
     56 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     58 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     59 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     64 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 9, 11, 1])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       12 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       26 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       48 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       49 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       51 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       56 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       57 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       64 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 12:09:17 PM DEBUG [spec] No of nodes: 67
11/17/2020 12:09:17 PM DEBUG [spec] No of edges: 384
11/17/2020 12:09:17 PM DEBUG 
End of translate


11/17/2020 12:09:17 PM INFO The bound of formula "[H^1 r7]^[0, 5] * ([H^3 r10]^[0, 6] | [H^3 r11]^[0, 6] | [H^3 r5]^[0, 6])" is (5, 12)!
11/17/2020 12:09:17 PM INFO Translated formula "[H^1 r7]^[0, 5] * ([H^3 r10]^[0, 6] | [H^3 r11]^[0, 6] | [H^3 r5]^[0, 6])" to infinity DFA of size (67, 384)!
11/17/2020 12:09:17 PM DEBUG 

Start policy computation

11/17/2020 12:09:17 PM DEBUG [extend_ts] TS: (16, 80) ETS:(16, 80)
11/17/2020 12:09:17 PM DEBUG [extend_ts] TS: (16, 80) ETS:(16, 80)
11/17/2020 12:09:17 PM DEBUG [extend_ts] TS: (16, 80) ETS:(16, 80)
11/17/2020 12:09:17 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 12:09:17 PM INFO Product automaton size is: (54, 262)
11/17/2020 12:09:17 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 12:09:17 PM INFO Product automaton size is: (54, 262)
11/17/2020 12:09:17 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 12:09:17 PM INFO Product automaton size is: (54, 262)
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:17 PM DEBUG []
11/17/2020 12:09:23 PM INFO Max deadline: 1
11/17/2020 12:09:23 PM INFO Generated control policy is: Base3 -> 1 -> r7 -> 1 -> r2 -> 1 -> r2 -> 1 -> r3 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10
11/17/2020 12:09:23 PM INFO Max deadline: 1
11/17/2020 12:09:23 PM INFO Generated control policy is: Base2 -> 1 -> r7 -> 1 -> r14 -> 1 -> r14 -> 1 -> r15 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10
11/17/2020 12:09:23 PM INFO Max deadline: 2
11/17/2020 12:09:23 PM INFO Generated control policy is: Base3 -> 1 -> r7 -> 1 -> r7 -> 1 -> r2 -> 1 -> r3 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10
