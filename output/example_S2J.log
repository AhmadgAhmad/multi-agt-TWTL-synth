11/17/2020 09:23:44 PM DEBUG [hold] Prop: r2 Duration: 1 Negation: False Props: set(['r5', 'r10', 'r2', 'r11'])
11/17/2020 09:23:44 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r2 )
11/17/2020 09:23:44 PM DEBUG [hold] Prop: r10 Duration: 3 Negation: False Props: set(['r5', 'r10', 'r2', 'r11'])
11/17/2020 09:23:44 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r10 )
11/17/2020 09:23:44 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r5', 'r10', 'r2', 'r11'])
11/17/2020 09:23:44 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r11 )
11/17/2020 09:23:44 PM INFO No trap states were added.
11/17/2020 09:23:44 PM INFO No trap states were added.
11/17/2020 09:23:44 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 09:23:44 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 09:23:44 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 09:23:44 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 09:23:44 PM DEBUG [union] DFA1: (Eventually (Hold 3 r10 ) 0 7 ) DFA2: (Eventually (Hold 3 r11 ) 0 7 )
11/17/2020 09:23:44 PM DEBUG [hold] Prop: r5 Duration: 3 Negation: False Props: set(['r5', 'r10', 'r2', 'r11'])
11/17/2020 09:23:44 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r5 )
11/17/2020 09:23:44 PM INFO No trap states were added.
11/17/2020 09:23:44 PM INFO No trap states were added.
11/17/2020 09:23:44 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r5 ) 0 7 )
11/17/2020 09:23:44 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r2 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r5 ) 0 7 ) )
11/17/2020 09:23:44 PM DEBUG [spec] spec: [H^1 r2]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r5]^[0, 7])
11/17/2020 09:23:44 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r2 ) 0 5 ) (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r5 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r5': 1, 'r2': 4, 'r10': 2, 'r11': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 8, 9, 10, 11]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': u'r2', 'weight': 0, 'label': u'r2'}), (1, 0, {'input': set([0, 1, 2, 3, 8, 9, 10, 11]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': u'r2', 'weight': 0, 'label': u'r2'}), (2, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (2, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (2, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (2, 50, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (2, 52, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (2, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (2, 4, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (3, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (3, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (3, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (4, 39, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (4, 8, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (4, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (4, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (4, 62, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (5, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (5, 15, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (5, 18, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (5, 52, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (5, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (6, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (6, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (6, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (6, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (7, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (7, 57, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (7, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (7, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 64, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (8, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (8, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (8, 11, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (8, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (8, 20, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (9, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (9, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (9, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (9, 47, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (9, 17, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (9, 53, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (9, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 33, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (10, 34, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (10, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (10, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (10, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (10, 60, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (11, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (11, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (11, 10, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (11, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (12, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (12, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (13, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r5))))'}), (13, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (14, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (14, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (14, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (15, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (15, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 14, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (15, 22, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (15, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (15, 27, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (16, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (16, 40, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (16, 57, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (16, 25, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (16, 61, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (17, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (17, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (17, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (17, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (18, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (18, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (18, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (18, 42, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (18, 20, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (18, 22, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (18, 62, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (19, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))'}), (19, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (20, 16, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (20, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (21, 33, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (21, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (22, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (22, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (22, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (22, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 34, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (23, 4, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (23, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (23, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (23, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (23, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 57, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (24, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (24, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (24, 53, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (24, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (25, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (25, 17, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (25, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (25, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (26, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (26, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (27, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (27, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (27, 12, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (27, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (27, 57, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (27, 26, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (27, 30, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (28, 33, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (28, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (28, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (28, 17, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (28, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (28, 56, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (28, 26, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 33, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (29, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (29, 8, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (29, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (29, 40, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (29, 59, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (30, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (30, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (30, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (30, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (31, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))'}), (31, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (31, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (31, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (33, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (33, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 31, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (34, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (34, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (34, 61, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (35, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (35, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (35, 16, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (35, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (35, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (35, 31, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (35, 63, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (36, 66, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (36, 8, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (36, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (36, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (36, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (36, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (36, 27, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | ((((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | ((((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((r10) & ((else))) & (r5))))'}), (37, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (37, 34, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (38, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (38, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (38, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (38, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (39, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (39, 7, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (39, 43, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (39, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 51, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (39, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (40, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (40, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (40, 30, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (40, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (41, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (41, 11, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (41, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 50, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (41, 24, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (41, 30, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (42, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))'}), (42, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (42, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (42, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (43, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (44, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (44, 40, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (44, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (44, 19, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (44, 22, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (44, 58, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (45, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (45, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (45, 50, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (45, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (46, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (46, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (46, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (46, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (47, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (47, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (48, 32, {'input': set([1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)))'}), (48, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (49, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (49, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (50, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (50, 44, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (50, 16, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (50, 18, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (50, 53, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (50, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (50, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (51, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (51, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (52, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (52, 10, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (52, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 27, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (52, 28, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (52, 61, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (53, 34, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (53, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (53, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (53, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (53, 19, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (53, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (53, 31, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (54, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (54, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (54, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (54, 50, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (54, 9, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (54, 61, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (54, 62, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (55, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (55, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (55, 52, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (55, 20, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (55, 31, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (56, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (56, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (57, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (57, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (57, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (57, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (58, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))'}), (58, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (59, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (59, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (60, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (60, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (60, 22, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (61, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (61, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (61, 11, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (61, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (61, 46, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (61, 17, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (61, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (62, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (62, 7, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (62, 10, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (62, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (62, 21, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (62, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (62, 30, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (63, 40, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (63, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (63, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (63, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (64, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (65, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (65, 10, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (65, 16, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (65, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (65, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 29, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (66, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (66, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (66, 43, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (66, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (66, 48, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (66, 19, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (66, 26, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'})]
		
11/17/2020 09:23:44 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     11 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     12 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     14 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     17 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     19 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     20 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     21 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     24 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     25 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     33 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     38 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     40 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     43 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([9, 5, 13, 1])
     45 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     46 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     47 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     48 -> both=set([3, 7, 9, 11, 13, 15]) left=set([2, 6, 8, 10, 12, 14]) right=set([1, 5])
     49 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     51 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([1, 13, 5, 9])
     56 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     58 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     59 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     64 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([9, 5, 13, 1])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       7 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       11 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       12 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
       13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       17 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       21 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       24 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       26 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
       30 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       43 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       45 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       46 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       47 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       48 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
       49 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       51 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       56 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
       57 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       64 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 09:23:44 PM DEBUG [spec] No of nodes: 67
11/17/2020 09:23:44 PM DEBUG [spec] No of edges: 384
11/17/2020 09:23:44 PM DEBUG 
End of translate


11/17/2020 09:23:44 PM INFO The bound of formula "[H^1 r2]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r5]^[0, 7])" is (5, 13)!
11/17/2020 09:23:44 PM INFO Translated formula "[H^1 r2]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r5]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 09:23:44 PM DEBUG [hold] Prop: r14 Duration: 1 Negation: False Props: set(['r5', 'r14', 'r10', 'r11'])
11/17/2020 09:23:44 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r14 )
11/17/2020 09:23:44 PM DEBUG [hold] Prop: r10 Duration: 3 Negation: False Props: set(['r5', 'r14', 'r10', 'r11'])
11/17/2020 09:23:44 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r10 )
11/17/2020 09:23:44 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r5', 'r14', 'r10', 'r11'])
11/17/2020 09:23:44 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r11 )
11/17/2020 09:23:44 PM INFO No trap states were added.
11/17/2020 09:23:44 PM INFO No trap states were added.
11/17/2020 09:23:44 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 09:23:44 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 09:23:44 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 09:23:44 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 09:23:44 PM DEBUG [union] DFA1: (Eventually (Hold 3 r10 ) 0 7 ) DFA2: (Eventually (Hold 3 r11 ) 0 7 )
11/17/2020 09:23:44 PM DEBUG [hold] Prop: r5 Duration: 3 Negation: False Props: set(['r5', 'r14', 'r10', 'r11'])
11/17/2020 09:23:44 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r5 )
11/17/2020 09:23:44 PM INFO No trap states were added.
11/17/2020 09:23:44 PM INFO No trap states were added.
11/17/2020 09:23:44 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r5 ) 0 7 )
11/17/2020 09:23:44 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r14 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r5 ) 0 7 ) )
11/17/2020 09:23:44 PM DEBUG [spec] spec: [H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r5]^[0, 7])
11/17/2020 09:23:44 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r14 ) 0 5 ) (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r5 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r5': 1, 'r14': 2, 'r10': 4, 'r11': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r14', 'weight': 0, 'label': u'r14'}), (1, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r14', 'weight': 0, 'label': u'r14'}), (2, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (2, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (2, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (2, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (2, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (2, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (2, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (3, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (3, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (3, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (4, 39, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (4, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (4, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (4, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (4, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (5, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (5, 15, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (5, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (5, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (5, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (6, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (6, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (6, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (6, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (7, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (7, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (7, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (7, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 64, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (8, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (8, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (8, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (8, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (8, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (9, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (9, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (9, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (9, 47, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (9, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (9, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (9, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (10, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (10, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (10, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (10, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (10, 60, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (11, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (11, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (11, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (11, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (12, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (12, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (13, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r5))))'}), (13, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (14, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (14, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (14, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (15, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (15, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 14, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (15, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (15, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (15, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (16, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (16, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (16, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (16, 25, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (16, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (17, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (17, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (17, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (17, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (18, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (18, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (18, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (18, 42, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (18, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (18, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (18, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (19, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))'}), (19, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (20, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (20, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (21, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (21, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (22, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (22, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (22, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (22, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (23, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (23, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (23, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (23, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (23, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (24, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (24, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (24, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (24, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (25, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (25, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (25, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (25, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (26, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (26, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (27, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (27, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (27, 12, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (27, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (27, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (27, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (27, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (28, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (28, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (28, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (28, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (28, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (28, 56, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (28, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (29, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (29, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (29, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (29, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (29, 59, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (30, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (30, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (30, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (30, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (31, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))'}), (31, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (31, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (31, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (33, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (33, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (34, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (34, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (34, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (35, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (35, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (35, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (35, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (35, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (35, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (35, 63, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (36, 66, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (36, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (36, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (36, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (36, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (36, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (36, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | ((((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | ((((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((r10) & ((else))) & (r5))))'}), (37, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (37, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (38, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (38, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (38, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (38, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (39, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (39, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (39, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (39, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 51, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (39, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (40, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (40, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (40, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (40, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (41, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (41, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (41, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (41, 24, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (41, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (42, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))'}), (42, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (42, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (42, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (43, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (44, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (44, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (44, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (44, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (44, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (44, 58, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (45, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (45, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (45, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (45, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (46, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (46, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (46, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (46, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (47, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (47, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (48, 32, {'input': set([1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)))'}), (48, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (49, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (49, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (50, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (50, 44, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (50, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (50, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (50, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (50, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (50, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (51, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (51, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (52, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (52, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (52, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (52, 28, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (52, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (53, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (53, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (53, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (53, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (53, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (53, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (53, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (54, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (54, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (54, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (54, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (54, 9, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (54, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (54, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (55, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (55, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (55, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (55, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (55, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (56, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (56, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (57, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (57, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (57, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (57, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (58, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))'}), (58, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (59, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (59, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (60, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (60, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (60, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (61, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (61, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (61, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (61, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (61, 46, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (61, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (61, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (62, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (62, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (62, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (62, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (62, 21, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (62, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (62, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (63, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (63, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (63, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (63, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (64, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (65, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (65, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (65, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (65, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (65, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 29, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (66, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (66, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (66, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (66, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (66, 48, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (66, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (66, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'})]
		
11/17/2020 09:23:44 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     14 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     19 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     20 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     33 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     38 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     40 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     43 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 9, 11, 1])
     45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     48 -> both=set([5, 7, 9, 11, 13, 15]) left=set([4, 6, 8, 10, 12, 14]) right=set([1, 3])
     49 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     51 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([11, 1, 3, 9])
     56 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     58 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     59 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     64 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 9, 11, 1])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       12 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       26 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       48 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       49 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       51 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       56 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       57 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       64 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 09:23:44 PM DEBUG [spec] No of nodes: 67
11/17/2020 09:23:44 PM DEBUG [spec] No of edges: 384
11/17/2020 09:23:44 PM DEBUG 
End of translate


11/17/2020 09:23:44 PM INFO The bound of formula "[H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r5]^[0, 7])" is (5, 13)!
11/17/2020 09:23:44 PM INFO Translated formula "[H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r5]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 09:23:44 PM DEBUG [hold] Prop: r14 Duration: 1 Negation: False Props: set(['r5', 'r14', 'r10', 'r11'])
11/17/2020 09:23:44 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r14 )
11/17/2020 09:23:44 PM DEBUG [hold] Prop: r10 Duration: 3 Negation: False Props: set(['r5', 'r14', 'r10', 'r11'])
11/17/2020 09:23:44 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r10 )
11/17/2020 09:23:44 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r5', 'r14', 'r10', 'r11'])
11/17/2020 09:23:44 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r11 )
11/17/2020 09:23:44 PM INFO No trap states were added.
11/17/2020 09:23:44 PM INFO No trap states were added.
11/17/2020 09:23:44 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 09:23:44 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 09:23:44 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 09:23:44 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 09:23:44 PM DEBUG [union] DFA1: (Eventually (Hold 3 r10 ) 0 7 ) DFA2: (Eventually (Hold 3 r11 ) 0 7 )
11/17/2020 09:23:44 PM DEBUG [hold] Prop: r5 Duration: 3 Negation: False Props: set(['r5', 'r14', 'r10', 'r11'])
11/17/2020 09:23:44 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r5 )
11/17/2020 09:23:44 PM INFO No trap states were added.
11/17/2020 09:23:44 PM INFO No trap states were added.
11/17/2020 09:23:44 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 09:23:44 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r5 ) 0 7 )
11/17/2020 09:23:44 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r14 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r5 ) 0 7 ) )
11/17/2020 09:23:44 PM DEBUG [spec] spec: [H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r5]^[0, 7])
11/17/2020 09:23:44 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r14 ) 0 5 ) (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r5 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r5': 1, 'r14': 2, 'r10': 4, 'r11': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r14', 'weight': 0, 'label': u'r14'}), (1, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r14', 'weight': 0, 'label': u'r14'}), (2, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (2, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (2, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (2, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (2, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (2, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (2, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (3, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (3, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (3, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (4, 39, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (4, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (4, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (4, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (4, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (5, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (5, 15, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (5, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (5, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (5, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (6, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (6, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (6, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (6, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (7, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (7, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (7, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (7, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 64, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (8, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (8, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (8, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (8, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (8, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (9, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (9, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (9, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (9, 47, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (9, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (9, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (9, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (10, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (10, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (10, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (10, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (10, 60, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (11, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (11, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (11, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (11, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (12, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (12, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (13, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r5))))'}), (13, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (14, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (14, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (14, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (15, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (15, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 14, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (15, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (15, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (15, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (16, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (16, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (16, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (16, 25, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (16, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (17, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (17, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (17, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (17, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (18, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (18, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (18, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (18, 42, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (18, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (18, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (18, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (19, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))'}), (19, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (20, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (20, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (21, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (21, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (22, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (22, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (22, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (22, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (23, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (23, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (23, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (23, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (23, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (24, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (24, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (24, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (24, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (25, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (25, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (25, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (25, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (26, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (26, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (27, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (27, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (27, 12, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (27, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (27, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (27, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (27, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (28, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (28, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (28, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (28, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (28, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (28, 56, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (28, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (29, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (29, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (29, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (29, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (29, 59, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (30, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (30, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (30, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (30, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (31, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))'}), (31, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (31, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (31, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (33, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (33, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (34, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (34, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (34, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (35, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (35, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (35, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (35, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (35, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (35, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (35, 63, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (36, 66, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (36, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (36, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (36, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (36, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (36, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (36, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | ((((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | ((((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((r10) & ((else))) & (r5))))'}), (37, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (37, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (38, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & (r11)) & (r5))))'}), (38, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (38, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (38, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (39, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (39, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (39, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (39, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 51, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (39, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (40, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (40, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (40, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (40, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (41, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (41, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (41, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (41, 24, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (41, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (42, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((r10) & ((else))) & (r5))))'}), (42, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (42, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (42, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (43, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (44, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (44, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (44, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (44, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (44, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (44, 58, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (45, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (45, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (45, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (45, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (46, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (46, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (46, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (46, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r5)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (47, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (47, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (48, 32, {'input': set([1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)))'}), (48, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (49, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (49, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (50, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (50, 44, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (50, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (50, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (50, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (50, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (50, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (51, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (51, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (52, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (52, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (52, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (52, 28, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (52, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (53, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (53, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (53, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (53, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (53, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (53, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (53, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (54, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (54, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (54, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (54, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (54, 9, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (54, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (54, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (55, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (55, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (55, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (55, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (55, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (56, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r5)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (56, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (57, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (57, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (57, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (57, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (58, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r5))))'}), (58, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r5)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (59, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (59, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (60, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r5)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (60, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (60, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (61, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (61, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (61, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (61, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (61, 46, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (61, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (61, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (62, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (62, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (62, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (62, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (62, 21, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (62, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (62, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (63, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (63, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r5)) | (((((else)) & ((else))) & (r5)) | ((((r10) & ((else))) & (r5)) | (((r10) & (r11)) & (r5))))'}), (63, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (63, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r5)) | (((((else)) & (r11)) & (r5)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r5))))'}), (64, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (65, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (65, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (65, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (65, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (65, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 29, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (66, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (66, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r5)', 'weight': 0, 'label': '(((else)) & ((else))) & (r5)'}), (66, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r5)', 'weight': 0, 'label': '((r10) & ((else))) & (r5)'}), (66, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (66, 48, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r5)', 'weight': 0, 'label': '((r10) & (r11)) & (r5)'}), (66, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r5)', 'weight': 0, 'label': '(((else)) & (r11)) & (r5)'}), (66, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'})]
		
11/17/2020 09:23:44 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     14 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     19 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     20 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     33 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     38 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     40 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     43 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 9, 11, 1])
     45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     48 -> both=set([5, 7, 9, 11, 13, 15]) left=set([4, 6, 8, 10, 12, 14]) right=set([1, 3])
     49 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     51 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([11, 1, 3, 9])
     56 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     58 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     59 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     64 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 9, 11, 1])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       12 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       26 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       48 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       49 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       51 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       56 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       57 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       64 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 09:23:44 PM DEBUG [spec] No of nodes: 67
11/17/2020 09:23:44 PM DEBUG [spec] No of edges: 384
11/17/2020 09:23:44 PM DEBUG 
End of translate


11/17/2020 09:23:44 PM INFO The bound of formula "[H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r5]^[0, 7])" is (5, 13)!
11/17/2020 09:23:44 PM INFO Translated formula "[H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r5]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 09:23:44 PM DEBUG 

Start policy computation

11/17/2020 09:23:44 PM DEBUG [extend_ts] TS: (15, 71) ETS:(15, 71)
11/17/2020 09:23:44 PM DEBUG [extend_ts] TS: (15, 71) ETS:(15, 71)
11/17/2020 09:23:44 PM DEBUG [extend_ts] TS: (15, 71) ETS:(15, 71)
11/17/2020 09:23:44 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 09:23:44 PM INFO Product automaton size is: (39, 175)
11/17/2020 09:23:44 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 09:23:44 PM INFO Product automaton size is: (39, 175)
11/17/2020 09:23:44 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 09:23:44 PM INFO Product automaton size is: (39, 175)
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:23:44 PM DEBUG []
11/17/2020 09:24:04 PM INFO Max deadline: 2
11/17/2020 09:24:04 PM INFO Generated control policy is: Base1 -> 1 -> r7 -> 1 -> r2 -> 1 -> r2 -> 1 -> r3 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10
11/17/2020 09:24:04 PM INFO Max deadline: 2
11/17/2020 09:24:04 PM INFO Generated control policy is: Base2 -> 1 -> r7 -> 1 -> r14 -> 1 -> r14 -> 1 -> r15 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10
11/17/2020 09:24:04 PM INFO Max deadline: 2
11/17/2020 09:24:04 PM INFO Generated control policy is: Base3 -> 1 -> r7 -> 1 -> r14 -> 1 -> r14 -> 1 -> r15 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10
11/17/2020 10:10:54 PM DEBUG [hold] Prop: r2 Duration: 1 Negation: False Props: set(['r17', 'r10', 'r2', 'r11'])
11/17/2020 10:10:54 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r2 )
11/17/2020 10:10:54 PM DEBUG [hold] Prop: r10 Duration: 3 Negation: False Props: set(['r17', 'r10', 'r2', 'r11'])
11/17/2020 10:10:54 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r10 )
11/17/2020 10:10:54 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r17', 'r10', 'r2', 'r11'])
11/17/2020 10:10:54 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r11 )
11/17/2020 10:10:54 PM INFO No trap states were added.
11/17/2020 10:10:54 PM INFO No trap states were added.
11/17/2020 10:10:54 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:10:54 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:10:54 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:10:54 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:10:54 PM DEBUG [union] DFA1: (Eventually (Hold 3 r10 ) 0 7 ) DFA2: (Eventually (Hold 3 r11 ) 0 7 )
11/17/2020 10:10:54 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r17', 'r10', 'r2', 'r11'])
11/17/2020 10:10:54 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 10:10:54 PM INFO No trap states were added.
11/17/2020 10:10:54 PM INFO No trap states were added.
11/17/2020 10:10:54 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:10:54 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:10:54 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:10:54 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:10:54 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:10:54 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:10:54 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:10:54 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 10:10:54 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r2 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) )
11/17/2020 10:10:54 PM DEBUG [spec] spec: [H^1 r2]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])
11/17/2020 10:10:54 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r2 ) 0 5 ) (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r17': 1, 'r2': 4, 'r10': 2, 'r11': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 8, 9, 10, 11]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': u'r2', 'weight': 0, 'label': u'r2'}), (1, 0, {'input': set([0, 1, 2, 3, 8, 9, 10, 11]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': u'r2', 'weight': 0, 'label': u'r2'}), (2, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (2, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (2, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (2, 50, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (2, 52, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (2, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (2, 4, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (3, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (3, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (3, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (4, 39, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (4, 8, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (4, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (4, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (4, 62, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (5, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (5, 15, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (5, 18, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (5, 52, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (5, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (6, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (6, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (7, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (7, 57, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (7, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (7, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 64, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (8, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (8, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (8, 11, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (8, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (8, 20, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (9, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (9, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (9, 47, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (9, 17, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (9, 53, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 33, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (10, 34, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (10, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (10, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (10, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (10, 60, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (11, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (11, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (11, 10, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (11, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (12, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (12, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (13, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r17))))'}), (13, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (14, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (14, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (14, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (15, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (15, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 14, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (15, 22, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (15, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (15, 27, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (16, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (16, 40, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (16, 57, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (16, 25, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (16, 61, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (17, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (17, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (17, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (17, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (18, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (18, 42, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (18, 20, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (18, 22, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (18, 62, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (19, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))'}), (19, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (20, 16, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (20, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (21, 33, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (21, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (22, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (22, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (22, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (22, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 34, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (23, 4, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (23, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (23, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (23, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (23, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 57, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (24, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (24, 53, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (25, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (25, 17, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (25, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (25, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (26, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (26, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (27, 12, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (27, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (27, 57, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (27, 26, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (27, 30, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (28, 33, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (28, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (28, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (28, 17, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (28, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (28, 56, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (28, 26, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 33, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (29, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (29, 8, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (29, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (29, 40, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (29, 59, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (30, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (30, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (30, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (30, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (31, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))'}), (31, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (31, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (31, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (33, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (33, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 31, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (34, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (34, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (34, 61, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (35, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (35, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (35, 16, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (35, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (35, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (35, 31, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (35, 63, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (36, 66, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (36, 8, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (36, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (36, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (36, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (36, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (36, 27, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | ((((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | ((((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r10) & ((else))) & (r17))))'}), (37, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (37, 34, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (38, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (38, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (38, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (38, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (39, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (39, 7, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (39, 43, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (39, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 51, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (39, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (40, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (40, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (40, 30, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (40, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (41, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (41, 11, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (41, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 50, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (41, 24, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (41, 30, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (42, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))'}), (42, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (42, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (42, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (43, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (44, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (44, 40, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (44, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (44, 19, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (44, 22, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (44, 58, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (45, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (45, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (45, 50, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (45, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (46, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (46, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (47, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (47, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (48, 32, {'input': set([1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)))'}), (48, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (49, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (49, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (50, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (50, 44, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (50, 16, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (50, 18, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (50, 53, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (50, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (50, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (51, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (51, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (52, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (52, 10, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (52, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 27, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (52, 28, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (52, 61, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (53, 34, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (53, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (53, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (53, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (53, 19, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (53, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (53, 31, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (54, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (54, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (54, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (54, 50, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (54, 9, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (54, 61, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (54, 62, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (55, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (55, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (55, 52, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (55, 20, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (55, 31, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (56, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (56, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (57, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (57, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (57, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (57, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (58, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))'}), (58, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (59, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (59, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (60, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 22, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (61, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (61, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (61, 11, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (61, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (61, 46, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (61, 17, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (61, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 7, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (62, 10, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (62, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (62, 21, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (62, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (62, 30, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (63, 40, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (63, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (63, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (63, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (64, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (65, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (65, 10, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (65, 16, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (65, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (65, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 29, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (66, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (66, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (66, 43, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (66, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (66, 48, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (66, 19, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (66, 26, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'})]
		
11/17/2020 10:10:54 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     11 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     12 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     14 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     17 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     19 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     20 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     21 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     24 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     25 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     33 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     38 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     40 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     43 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([9, 5, 13, 1])
     45 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     46 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     47 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     48 -> both=set([3, 7, 9, 11, 13, 15]) left=set([2, 6, 8, 10, 12, 14]) right=set([1, 5])
     49 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     51 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([1, 13, 5, 9])
     56 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     58 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     59 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     64 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([9, 5, 13, 1])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       7 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       11 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       12 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
       13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       17 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       21 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       24 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       26 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
       30 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       43 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       45 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       46 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       47 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       48 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
       49 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       51 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       56 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
       57 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       64 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:10:54 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:10:54 PM DEBUG [spec] No of edges: 384
11/17/2020 10:10:54 PM DEBUG 
End of translate


11/17/2020 10:10:54 PM INFO The bound of formula "[H^1 r2]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" is (5, 13)!
11/17/2020 10:10:54 PM INFO Translated formula "[H^1 r2]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:10:54 PM DEBUG [hold] Prop: r14 Duration: 1 Negation: False Props: set(['r17', 'r14', 'r10', 'r11'])
11/17/2020 10:10:54 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r14 )
11/17/2020 10:10:54 PM DEBUG [hold] Prop: r10 Duration: 3 Negation: False Props: set(['r17', 'r14', 'r10', 'r11'])
11/17/2020 10:10:54 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r10 )
11/17/2020 10:10:54 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r17', 'r14', 'r10', 'r11'])
11/17/2020 10:10:54 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r11 )
11/17/2020 10:10:54 PM INFO No trap states were added.
11/17/2020 10:10:54 PM INFO No trap states were added.
11/17/2020 10:10:54 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:10:54 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:10:54 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:10:54 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:10:54 PM DEBUG [union] DFA1: (Eventually (Hold 3 r10 ) 0 7 ) DFA2: (Eventually (Hold 3 r11 ) 0 7 )
11/17/2020 10:10:54 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r17', 'r14', 'r10', 'r11'])
11/17/2020 10:10:54 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 10:10:54 PM INFO No trap states were added.
11/17/2020 10:10:54 PM INFO No trap states were added.
11/17/2020 10:10:54 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:10:54 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:10:54 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:10:54 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:10:54 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:10:54 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:10:54 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:10:55 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 10:10:55 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r14 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) )
11/17/2020 10:10:55 PM DEBUG [spec] spec: [H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])
11/17/2020 10:10:55 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r14 ) 0 5 ) (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r17': 1, 'r14': 2, 'r10': 4, 'r11': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r14', 'weight': 0, 'label': u'r14'}), (1, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r14', 'weight': 0, 'label': u'r14'}), (2, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (2, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (2, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (2, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (2, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (2, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (2, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (3, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (3, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (3, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (4, 39, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (4, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (4, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (4, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (4, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (5, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (5, 15, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (5, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (5, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (5, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (6, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (6, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (7, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (7, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (7, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (7, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 64, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (8, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (8, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (8, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (8, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (8, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (9, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (9, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (9, 47, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (9, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (9, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (10, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (10, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (10, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (10, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (10, 60, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (11, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (11, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (11, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (11, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (12, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (12, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (13, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r17))))'}), (13, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (14, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (14, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (14, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (15, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (15, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 14, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (15, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (15, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (15, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (16, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (16, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (16, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (16, 25, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (16, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (17, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (17, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (17, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (17, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (18, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (18, 42, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (18, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (18, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (18, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (19, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))'}), (19, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (20, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (20, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (21, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (21, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (22, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (22, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (22, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (22, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (23, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (23, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (23, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (23, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (23, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (24, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (24, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (25, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (25, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (25, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (25, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (26, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (26, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (27, 12, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (27, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (27, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (27, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (27, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (28, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (28, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (28, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (28, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (28, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (28, 56, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (28, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (29, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (29, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (29, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (29, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (29, 59, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (30, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (30, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (30, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (30, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (31, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))'}), (31, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (31, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (31, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (33, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (33, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (34, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (34, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (34, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (35, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (35, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (35, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (35, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (35, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (35, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (35, 63, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (36, 66, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (36, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (36, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (36, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (36, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (36, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (36, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | ((((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | ((((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r10) & ((else))) & (r17))))'}), (37, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (37, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (38, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (38, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (38, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (38, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (39, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (39, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (39, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (39, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 51, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (39, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (40, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (40, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (40, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (40, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (41, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (41, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (41, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (41, 24, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (41, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (42, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))'}), (42, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (42, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (42, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (43, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (44, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (44, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (44, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (44, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (44, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (44, 58, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (45, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (45, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (45, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (45, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (46, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (46, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (47, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (47, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (48, 32, {'input': set([1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)))'}), (48, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (49, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (49, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (50, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (50, 44, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (50, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (50, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (50, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (50, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (50, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (51, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (51, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (52, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (52, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (52, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (52, 28, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (52, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (53, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (53, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (53, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (53, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (53, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (53, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (53, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (54, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (54, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (54, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (54, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (54, 9, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (54, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (54, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (55, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (55, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (55, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (55, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (55, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (56, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (56, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (57, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (57, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (57, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (57, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (58, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))'}), (58, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (59, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (59, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (60, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (61, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (61, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (61, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (61, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (61, 46, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (61, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (61, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (62, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (62, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (62, 21, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (62, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (62, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (63, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (63, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (63, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (63, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (64, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (65, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (65, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (65, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (65, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (65, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 29, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (66, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (66, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (66, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (66, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (66, 48, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (66, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (66, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'})]
		
11/17/2020 10:10:55 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     14 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     19 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     20 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     33 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     38 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     40 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     43 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 9, 11, 1])
     45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     48 -> both=set([5, 7, 9, 11, 13, 15]) left=set([4, 6, 8, 10, 12, 14]) right=set([1, 3])
     49 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     51 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([11, 1, 3, 9])
     56 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     58 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     59 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     64 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 9, 11, 1])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       12 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       26 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       48 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       49 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       51 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       56 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       57 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       64 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:10:55 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:10:55 PM DEBUG [spec] No of edges: 384
11/17/2020 10:10:55 PM DEBUG 
End of translate


11/17/2020 10:10:55 PM INFO The bound of formula "[H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" is (5, 13)!
11/17/2020 10:10:55 PM INFO Translated formula "[H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:10:55 PM DEBUG [hold] Prop: r14 Duration: 1 Negation: False Props: set(['r17', 'r14', 'r10', 'r11'])
11/17/2020 10:10:55 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r14 )
11/17/2020 10:10:55 PM DEBUG [hold] Prop: r10 Duration: 3 Negation: False Props: set(['r17', 'r14', 'r10', 'r11'])
11/17/2020 10:10:55 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r10 )
11/17/2020 10:10:55 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r17', 'r14', 'r10', 'r11'])
11/17/2020 10:10:55 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r11 )
11/17/2020 10:10:55 PM INFO No trap states were added.
11/17/2020 10:10:55 PM INFO No trap states were added.
11/17/2020 10:10:55 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:10:55 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:10:55 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:10:55 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:10:55 PM DEBUG [union] DFA1: (Eventually (Hold 3 r10 ) 0 7 ) DFA2: (Eventually (Hold 3 r11 ) 0 7 )
11/17/2020 10:10:55 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r17', 'r14', 'r10', 'r11'])
11/17/2020 10:10:55 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 10:10:55 PM INFO No trap states were added.
11/17/2020 10:10:55 PM INFO No trap states were added.
11/17/2020 10:10:55 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:10:55 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:10:55 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:10:55 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:10:55 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:10:55 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:10:55 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:10:55 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 10:10:55 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r14 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) )
11/17/2020 10:10:55 PM DEBUG [spec] spec: [H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])
11/17/2020 10:10:55 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r14 ) 0 5 ) (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r17': 1, 'r14': 2, 'r10': 4, 'r11': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r14', 'weight': 0, 'label': u'r14'}), (1, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r14', 'weight': 0, 'label': u'r14'}), (2, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (2, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (2, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (2, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (2, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (2, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (2, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (3, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (3, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (3, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (4, 39, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (4, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (4, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (4, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (4, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (5, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (5, 15, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (5, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (5, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (5, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (6, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (6, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (7, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (7, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (7, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (7, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 64, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (8, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (8, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (8, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (8, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (8, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (9, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (9, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (9, 47, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (9, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (9, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (10, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (10, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (10, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (10, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (10, 60, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (11, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (11, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (11, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (11, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (12, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (12, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (13, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r17))))'}), (13, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (14, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (14, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (14, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (15, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (15, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 14, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (15, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (15, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (15, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (16, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (16, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (16, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (16, 25, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (16, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (17, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (17, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (17, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (17, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (18, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (18, 42, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (18, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (18, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (18, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (19, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))'}), (19, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (20, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (20, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (21, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (21, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (22, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (22, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (22, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (22, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (23, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (23, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (23, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (23, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (23, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (24, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (24, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (25, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (25, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (25, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (25, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (26, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (26, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (27, 12, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (27, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (27, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (27, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (27, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (28, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (28, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (28, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (28, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (28, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (28, 56, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (28, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (29, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (29, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (29, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (29, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (29, 59, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (30, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (30, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (30, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (30, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (31, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))'}), (31, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (31, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (31, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (33, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (33, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (34, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (34, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (34, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (35, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (35, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (35, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (35, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (35, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (35, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (35, 63, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (36, 66, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (36, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (36, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (36, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (36, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (36, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (36, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | ((((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | ((((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r10) & ((else))) & (r17))))'}), (37, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (37, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (38, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (38, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (38, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (38, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (39, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (39, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (39, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (39, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 51, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (39, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (40, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (40, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (40, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (40, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (41, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (41, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (41, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (41, 24, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (41, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (42, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))'}), (42, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (42, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (42, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (43, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (44, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (44, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (44, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (44, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (44, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (44, 58, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (45, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (45, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (45, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (45, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (46, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (46, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (47, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (47, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (48, 32, {'input': set([1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)))'}), (48, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (49, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (49, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (50, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (50, 44, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (50, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (50, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (50, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (50, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (50, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (51, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (51, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (52, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (52, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (52, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (52, 28, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (52, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (53, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (53, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (53, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (53, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (53, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (53, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (53, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (54, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (54, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (54, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (54, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (54, 9, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (54, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (54, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (55, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (55, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (55, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (55, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (55, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (56, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (56, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (57, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (57, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (57, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (57, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (58, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))'}), (58, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (59, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (59, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (60, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (61, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (61, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (61, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (61, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (61, 46, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (61, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (61, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (62, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (62, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (62, 21, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (62, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (62, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (63, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (63, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (63, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (63, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (64, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (65, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (65, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (65, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (65, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (65, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 29, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (66, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (66, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (66, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (66, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (66, 48, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (66, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (66, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'})]
		
11/17/2020 10:10:55 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     14 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     19 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     20 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     33 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     38 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     40 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     43 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 9, 11, 1])
     45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     48 -> both=set([5, 7, 9, 11, 13, 15]) left=set([4, 6, 8, 10, 12, 14]) right=set([1, 3])
     49 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     51 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([11, 1, 3, 9])
     56 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     58 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     59 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     64 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 9, 11, 1])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       12 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       26 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       48 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       49 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       51 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       56 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       57 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       64 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:10:55 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:10:55 PM DEBUG [spec] No of edges: 384
11/17/2020 10:10:55 PM DEBUG 
End of translate


11/17/2020 10:10:55 PM INFO The bound of formula "[H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" is (5, 13)!
11/17/2020 10:10:55 PM INFO Translated formula "[H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:10:55 PM DEBUG 

Start policy computation

11/17/2020 10:10:55 PM DEBUG [extend_ts] TS: (15, 75) ETS:(15, 75)
11/17/2020 10:10:55 PM DEBUG [extend_ts] TS: (15, 75) ETS:(15, 75)
11/17/2020 10:10:55 PM DEBUG [extend_ts] TS: (15, 75) ETS:(15, 75)
11/17/2020 10:10:55 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:10:55 PM INFO Product automaton size is: (51, 247)
11/17/2020 10:10:55 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:10:55 PM INFO Product automaton size is: (51, 247)
11/17/2020 10:10:55 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:10:55 PM INFO Product automaton size is: (51, 247)
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:10:55 PM DEBUG []
11/17/2020 10:11:14 PM INFO Max deadline: 2
11/17/2020 10:11:14 PM INFO Generated control policy is: Base1 -> 1 -> r7 -> 1 -> r2 -> 1 -> r2 -> 1 -> r9 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10
11/17/2020 10:11:14 PM INFO Max deadline: 2
11/17/2020 10:11:14 PM INFO Generated control policy is: Base2 -> 1 -> r7 -> 1 -> r14 -> 1 -> r14 -> 1 -> r9 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10
11/17/2020 10:11:14 PM INFO Max deadline: 2
11/17/2020 10:11:14 PM INFO Generated control policy is: Base3 -> 1 -> r7 -> 1 -> r14 -> 1 -> r14 -> 1 -> r9 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10
11/17/2020 10:13:41 PM DEBUG [hold] Prop: r2 Duration: 1 Negation: False Props: set(['r17', 'r10', 'r2', 'r11'])
11/17/2020 10:13:41 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r2 )
11/17/2020 10:13:41 PM DEBUG [hold] Prop: r10 Duration: 3 Negation: False Props: set(['r17', 'r10', 'r2', 'r11'])
11/17/2020 10:13:41 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r10 )
11/17/2020 10:13:41 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r17', 'r10', 'r2', 'r11'])
11/17/2020 10:13:41 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r11 )
11/17/2020 10:13:41 PM INFO No trap states were added.
11/17/2020 10:13:41 PM INFO No trap states were added.
11/17/2020 10:13:41 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:13:41 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:13:41 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:13:41 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:13:41 PM DEBUG [union] DFA1: (Eventually (Hold 3 r10 ) 0 7 ) DFA2: (Eventually (Hold 3 r11 ) 0 7 )
11/17/2020 10:13:41 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r17', 'r10', 'r2', 'r11'])
11/17/2020 10:13:41 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 10:13:41 PM INFO No trap states were added.
11/17/2020 10:13:41 PM INFO No trap states were added.
11/17/2020 10:13:41 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 10:13:41 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r2 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) )
11/17/2020 10:13:41 PM DEBUG [spec] spec: [H^1 r2]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])
11/17/2020 10:13:41 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r2 ) 0 5 ) (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r17': 1, 'r2': 4, 'r10': 2, 'r11': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 8, 9, 10, 11]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': u'r2', 'weight': 0, 'label': u'r2'}), (1, 0, {'input': set([0, 1, 2, 3, 8, 9, 10, 11]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': u'r2', 'weight': 0, 'label': u'r2'}), (2, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (2, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (2, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (2, 50, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (2, 52, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (2, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (2, 4, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (3, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (3, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (3, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (4, 39, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (4, 8, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (4, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (4, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (4, 62, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (5, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (5, 15, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (5, 18, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (5, 52, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (5, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (6, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (6, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (7, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (7, 57, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (7, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (7, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 64, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (8, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (8, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (8, 11, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (8, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (8, 20, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (9, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (9, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (9, 47, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (9, 17, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (9, 53, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 33, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (10, 34, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (10, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (10, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (10, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (10, 60, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (11, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (11, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (11, 10, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (11, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (12, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (12, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (13, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r17))))'}), (13, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (14, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (14, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (14, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (15, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (15, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 14, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (15, 22, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (15, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (15, 27, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (16, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (16, 40, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (16, 57, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (16, 25, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (16, 61, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (17, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (17, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (17, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (17, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (18, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (18, 42, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (18, 20, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (18, 22, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (18, 62, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (19, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))'}), (19, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (20, 16, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (20, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (21, 33, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (21, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (22, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (22, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (22, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (22, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 34, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (23, 4, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (23, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (23, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (23, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (23, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 57, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (24, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (24, 53, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (25, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (25, 17, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (25, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (25, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (26, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (26, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (27, 12, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (27, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (27, 57, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (27, 26, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (27, 30, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (28, 33, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (28, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (28, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (28, 17, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (28, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (28, 56, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (28, 26, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 33, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (29, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (29, 8, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (29, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (29, 40, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (29, 59, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (30, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (30, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (30, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (30, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (31, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))'}), (31, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (31, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (31, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (33, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (33, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 31, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (34, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (34, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (34, 61, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (35, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (35, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (35, 16, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (35, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (35, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (35, 31, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (35, 63, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (36, 66, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (36, 8, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (36, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (36, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (36, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (36, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (36, 27, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | ((((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | ((((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r10) & ((else))) & (r17))))'}), (37, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (37, 34, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (38, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (38, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (38, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (38, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (39, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (39, 7, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (39, 43, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (39, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 51, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (39, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (40, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (40, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (40, 30, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (40, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (41, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (41, 11, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (41, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 50, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (41, 24, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (41, 30, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (42, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))'}), (42, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (42, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (42, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (43, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (44, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (44, 40, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (44, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (44, 19, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (44, 22, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (44, 58, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (45, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (45, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (45, 50, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (45, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (46, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (46, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (47, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (47, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (48, 32, {'input': set([1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)))'}), (48, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (49, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (49, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (50, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (50, 44, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (50, 16, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (50, 18, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (50, 53, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (50, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (50, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (51, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (51, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (52, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (52, 10, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (52, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 27, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (52, 28, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (52, 61, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (53, 34, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (53, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (53, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (53, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (53, 19, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (53, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (53, 31, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (54, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (54, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (54, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (54, 50, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (54, 9, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (54, 61, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (54, 62, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (55, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (55, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (55, 52, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (55, 20, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (55, 31, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (56, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (56, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (57, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (57, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (57, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (57, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (58, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))'}), (58, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (59, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (59, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (60, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 22, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (61, 65, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (61, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (61, 11, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (61, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (61, 46, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (61, 17, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (61, 55, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 7, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (62, 10, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (62, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (62, 21, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (62, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (62, 30, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (63, 40, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (63, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (63, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (63, 41, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (64, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (65, 5, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (65, 10, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (65, 16, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (65, 54, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (65, 23, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 29, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (66, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([8, 12]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (66, 38, {'input': set([1, 5]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (66, 43, {'input': set([3, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (66, 45, {'input': set([2, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (66, 48, {'input': set([11, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (66, 19, {'input': set([9, 13]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (66, 26, {'input': set([10, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'})]
		
11/17/2020 10:13:41 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     11 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     12 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     14 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     17 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     19 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     20 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     21 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     24 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     25 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     33 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     38 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     40 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     43 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([9, 5, 13, 1])
     45 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     46 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     47 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     48 -> both=set([3, 7, 9, 11, 13, 15]) left=set([2, 6, 8, 10, 12, 14]) right=set([1, 5])
     49 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     51 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([1, 13, 5, 9])
     56 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     58 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     59 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     64 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([9, 5, 13, 1])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       7 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       11 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       12 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
       13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       17 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       21 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       24 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       26 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
       30 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       43 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       45 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       46 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       47 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       48 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
       49 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       51 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       56 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
       57 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       64 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:13:41 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:13:41 PM DEBUG [spec] No of edges: 384
11/17/2020 10:13:41 PM DEBUG 
End of translate


11/17/2020 10:13:41 PM INFO The bound of formula "[H^1 r2]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" is (5, 13)!
11/17/2020 10:13:41 PM INFO Translated formula "[H^1 r2]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:13:41 PM DEBUG [hold] Prop: r14 Duration: 1 Negation: False Props: set(['r17', 'r14', 'r10', 'r11'])
11/17/2020 10:13:41 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r14 )
11/17/2020 10:13:41 PM DEBUG [hold] Prop: r10 Duration: 3 Negation: False Props: set(['r17', 'r14', 'r10', 'r11'])
11/17/2020 10:13:41 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r10 )
11/17/2020 10:13:41 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r17', 'r14', 'r10', 'r11'])
11/17/2020 10:13:41 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r11 )
11/17/2020 10:13:41 PM INFO No trap states were added.
11/17/2020 10:13:41 PM INFO No trap states were added.
11/17/2020 10:13:41 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:13:41 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:13:41 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:13:41 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:13:41 PM DEBUG [union] DFA1: (Eventually (Hold 3 r10 ) 0 7 ) DFA2: (Eventually (Hold 3 r11 ) 0 7 )
11/17/2020 10:13:41 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r17', 'r14', 'r10', 'r11'])
11/17/2020 10:13:41 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 10:13:41 PM INFO No trap states were added.
11/17/2020 10:13:41 PM INFO No trap states were added.
11/17/2020 10:13:41 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 10:13:41 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r14 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) )
11/17/2020 10:13:41 PM DEBUG [spec] spec: [H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])
11/17/2020 10:13:41 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r14 ) 0 5 ) (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r17': 1, 'r14': 2, 'r10': 4, 'r11': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r14', 'weight': 0, 'label': u'r14'}), (1, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r14', 'weight': 0, 'label': u'r14'}), (2, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (2, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (2, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (2, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (2, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (2, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (2, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (3, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (3, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (3, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (4, 39, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (4, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (4, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (4, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (4, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (5, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (5, 15, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (5, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (5, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (5, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (6, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (6, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (7, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (7, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (7, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (7, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 64, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (8, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (8, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (8, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (8, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (8, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (9, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (9, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (9, 47, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (9, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (9, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (10, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (10, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (10, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (10, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (10, 60, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (11, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (11, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (11, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (11, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (12, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (12, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (13, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r17))))'}), (13, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (14, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (14, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (14, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (15, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (15, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 14, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (15, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (15, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (15, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (16, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (16, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (16, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (16, 25, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (16, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (17, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (17, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (17, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (17, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (18, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (18, 42, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (18, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (18, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (18, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (19, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))'}), (19, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (20, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (20, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (21, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (21, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (22, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (22, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (22, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (22, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (23, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (23, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (23, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (23, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (23, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (24, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (24, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (25, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (25, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (25, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (25, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (26, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (26, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (27, 12, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (27, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (27, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (27, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (27, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (28, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (28, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (28, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (28, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (28, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (28, 56, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (28, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (29, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (29, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (29, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (29, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (29, 59, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (30, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (30, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (30, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (30, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (31, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))'}), (31, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (31, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (31, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (33, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (33, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (34, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (34, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (34, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (35, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (35, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (35, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (35, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (35, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (35, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (35, 63, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (36, 66, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (36, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (36, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (36, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (36, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (36, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (36, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | ((((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | ((((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r10) & ((else))) & (r17))))'}), (37, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (37, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (38, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (38, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (38, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (38, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (39, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (39, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (39, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (39, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 51, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (39, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (40, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (40, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (40, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (40, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (41, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (41, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (41, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (41, 24, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (41, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (42, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))'}), (42, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (42, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (42, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (43, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (44, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (44, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (44, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (44, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (44, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (44, 58, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (45, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (45, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (45, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (45, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (46, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (46, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (47, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (47, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (48, 32, {'input': set([1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)))'}), (48, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (49, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (49, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (50, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (50, 44, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (50, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (50, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (50, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (50, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (50, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (51, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (51, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (52, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (52, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (52, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (52, 28, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (52, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (53, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (53, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (53, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (53, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (53, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (53, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (53, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (54, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (54, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (54, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (54, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (54, 9, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (54, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (54, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (55, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (55, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (55, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (55, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (55, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (56, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (56, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (57, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (57, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (57, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (57, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (58, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))'}), (58, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (59, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (59, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (60, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (61, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (61, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (61, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (61, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (61, 46, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (61, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (61, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (62, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (62, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (62, 21, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (62, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (62, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (63, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (63, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (63, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (63, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (64, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (65, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (65, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (65, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (65, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (65, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 29, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (66, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (66, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (66, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (66, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (66, 48, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (66, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (66, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'})]
		
11/17/2020 10:13:41 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     14 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     19 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     20 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     33 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     38 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     40 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     43 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 9, 11, 1])
     45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     48 -> both=set([5, 7, 9, 11, 13, 15]) left=set([4, 6, 8, 10, 12, 14]) right=set([1, 3])
     49 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     51 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([11, 1, 3, 9])
     56 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     58 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     59 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     64 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 9, 11, 1])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       12 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       26 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       48 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       49 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       51 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       56 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       57 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       64 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:13:41 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:13:41 PM DEBUG [spec] No of edges: 384
11/17/2020 10:13:41 PM DEBUG 
End of translate


11/17/2020 10:13:41 PM INFO The bound of formula "[H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" is (5, 13)!
11/17/2020 10:13:41 PM INFO Translated formula "[H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:13:41 PM DEBUG [hold] Prop: r14 Duration: 1 Negation: False Props: set(['r17', 'r14', 'r10', 'r11'])
11/17/2020 10:13:41 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r14 )
11/17/2020 10:13:41 PM DEBUG [hold] Prop: r10 Duration: 3 Negation: False Props: set(['r17', 'r14', 'r10', 'r11'])
11/17/2020 10:13:41 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r10 )
11/17/2020 10:13:41 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r17', 'r14', 'r10', 'r11'])
11/17/2020 10:13:41 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r11 )
11/17/2020 10:13:41 PM INFO No trap states were added.
11/17/2020 10:13:41 PM INFO No trap states were added.
11/17/2020 10:13:41 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:13:41 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:13:41 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:13:41 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:13:41 PM DEBUG [union] DFA1: (Eventually (Hold 3 r10 ) 0 7 ) DFA2: (Eventually (Hold 3 r11 ) 0 7 )
11/17/2020 10:13:41 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r17', 'r14', 'r10', 'r11'])
11/17/2020 10:13:41 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 10:13:41 PM INFO No trap states were added.
11/17/2020 10:13:41 PM INFO No trap states were added.
11/17/2020 10:13:41 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:13:41 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 10:13:41 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r14 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) )
11/17/2020 10:13:41 PM DEBUG [spec] spec: [H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])
11/17/2020 10:13:41 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r14 ) 0 5 ) (Union (Union (Eventually (Hold 3 r10 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r17': 1, 'r14': 2, 'r10': 4, 'r11': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r14', 'weight': 0, 'label': u'r14'}), (1, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r14', 'weight': 0, 'label': u'r14'}), (2, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (2, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (2, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (2, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (2, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (2, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (2, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (3, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (3, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (3, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (4, 39, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (4, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (4, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (4, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (4, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (5, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (5, 15, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (5, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (5, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (5, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (5, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (6, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (6, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (7, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (7, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (7, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (7, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 64, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (8, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (8, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (8, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (8, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (8, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (9, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (9, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (9, 47, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (9, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (9, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (10, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (10, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (10, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (10, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (10, 60, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (11, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (11, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (11, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (11, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (12, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (12, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (13, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r10) & ((else))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & (r17))))'}), (13, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (14, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (14, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (14, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (15, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (15, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (15, 14, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (15, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (15, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (15, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (16, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (16, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (16, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (16, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (16, 25, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (16, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (17, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (17, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (17, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (17, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (18, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (18, 42, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (18, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (18, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (18, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (19, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))'}), (19, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (20, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (20, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (20, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (21, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (21, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (22, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (22, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (22, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (22, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (23, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (23, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (23, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (23, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (23, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (23, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (24, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (24, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (25, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (25, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (25, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (25, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (26, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (26, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (27, 12, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (27, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (27, 57, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (27, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (27, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (28, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (28, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (28, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (28, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (28, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (28, 56, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (28, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 33, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (29, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (29, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (29, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (29, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (29, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (29, 59, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (30, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (30, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (30, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (30, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (31, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))'}), (31, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (31, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (31, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (33, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (33, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (33, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (34, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (34, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (34, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (35, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (35, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (35, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (35, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (35, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (35, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (35, 63, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (36, 66, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (36, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (36, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (36, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (36, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (36, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (36, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | ((((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | ((((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r10) & ((else))) & (r17))))'}), (37, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (37, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (37, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (38, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & (r11)) & (r17))))'}), (38, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (38, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (38, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (39, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (39, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (39, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (39, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (39, 51, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (39, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (40, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (40, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (40, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (40, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (41, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (41, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (41, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (41, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (41, 24, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (41, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (42, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r10) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r10) & ((else))) & (r17))))'}), (42, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (42, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (42, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (43, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (44, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (44, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (44, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (44, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (44, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (44, 58, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (45, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (45, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (45, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (45, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (46, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (46, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((r10) & (r11))) & (r17)) | ((((r10) & ((else))) | ((r10) & (r11))) & ((else)))'}), (47, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (47, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (48, 32, {'input': set([1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else))) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)))'}), (48, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (49, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (49, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (50, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (50, 44, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (50, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (50, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (50, 53, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (50, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (50, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (51, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (51, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (52, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (52, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (52, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 27, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (52, 28, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (52, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (53, 34, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (53, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (53, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (53, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (53, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (53, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (53, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (54, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (54, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (54, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (54, 50, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (54, 9, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (54, 61, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (54, 62, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (55, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (55, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (55, 52, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (55, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (55, 20, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (55, 31, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (56, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & (r17)) | ((((r10) & ((else))) | ((((else)) & (r11)) | ((r10) & (r11)))) & ((else)))'}), (56, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (57, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (57, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (57, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (57, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (58, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r10) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r10) & (r11))) & (r17))))'}), (58, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r10) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r10) & (r11))) & ((else)))'}), (59, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (59, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (59, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r10) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r10) & (r11)) | (((else)) & (r11))) & ((else)))'}), (60, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 22, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (61, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (61, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (61, 11, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (61, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (61, 46, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (61, 17, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (61, 55, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 7, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (62, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (62, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (62, 21, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (62, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (62, 30, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (63, 40, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (63, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r10) & ((else))) & (r17)) | (((r10) & (r11)) & (r17))))'}), (63, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (63, 41, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r10) & ((else))) | ((r10) & (r11))) & ((else))) | ((((r10) & ((else))) | ((r10) & (r11))) & (r17))))'}), (64, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (65, 5, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (65, 10, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (65, 16, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'}), (65, 54, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (65, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 29, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (66, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (66, 38, {'input': set([1, 3]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (66, 43, {'input': set([5, 7]), 'guard': '((r10) & ((else))) & (r17)', 'weight': 0, 'label': '((r10) & ((else))) & (r17)'}), (66, 45, {'input': set([4, 6]), 'guard': '((r10) & ((else))) & ((else))', 'weight': 0, 'label': '((r10) & ((else))) & ((else))'}), (66, 48, {'input': set([13, 15]), 'guard': '((r10) & (r11)) & (r17)', 'weight': 0, 'label': '((r10) & (r11)) & (r17)'}), (66, 19, {'input': set([9, 11]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (66, 26, {'input': set([12, 14]), 'guard': '((r10) & (r11)) & ((else))', 'weight': 0, 'label': '((r10) & (r11)) & ((else))'})]
		
11/17/2020 10:13:41 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     14 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     19 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     20 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     33 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     38 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     40 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     43 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 9, 11, 1])
     45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     48 -> both=set([5, 7, 9, 11, 13, 15]) left=set([4, 6, 8, 10, 12, 14]) right=set([1, 3])
     49 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     51 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([11, 1, 3, 9])
     56 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     58 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
     59 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     64 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 9, 11, 1])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       12 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       26 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       48 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       49 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       51 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       56 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       57 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       64 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:13:41 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:13:41 PM DEBUG [spec] No of edges: 384
11/17/2020 10:13:41 PM DEBUG 
End of translate


11/17/2020 10:13:41 PM INFO The bound of formula "[H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" is (5, 13)!
11/17/2020 10:13:41 PM INFO Translated formula "[H^1 r14]^[0, 5] * ([H^3 r10]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:13:41 PM DEBUG 

Start policy computation

11/17/2020 10:13:41 PM DEBUG [extend_ts] TS: (15, 75) ETS:(15, 75)
11/17/2020 10:13:41 PM DEBUG [extend_ts] TS: (15, 75) ETS:(15, 75)
11/17/2020 10:13:41 PM DEBUG [extend_ts] TS: (15, 75) ETS:(15, 75)
11/17/2020 10:13:41 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:13:41 PM INFO Product automaton size is: (51, 247)
11/17/2020 10:13:41 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:13:41 PM INFO Product automaton size is: (51, 247)
11/17/2020 10:13:41 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:13:41 PM INFO Product automaton size is: (51, 247)
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:41 PM DEBUG []
11/17/2020 10:13:44 PM INFO Max deadline: 2
11/17/2020 10:13:44 PM INFO Generated control policy is: Base1 -> 1 -> r7 -> 1 -> r2 -> 1 -> r2 -> 1 -> r9 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10
11/17/2020 10:13:44 PM INFO Max deadline: 2
11/17/2020 10:13:44 PM INFO Generated control policy is: Base2 -> 1 -> r7 -> 1 -> r14 -> 1 -> r14 -> 1 -> r9 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10
11/17/2020 10:13:44 PM INFO Max deadline: 2
11/17/2020 10:13:44 PM INFO Generated control policy is: Base3 -> 1 -> r7 -> 1 -> r14 -> 1 -> r14 -> 1 -> r9 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10 -> 1 -> r10
11/17/2020 10:28:59 PM DEBUG [hold] Prop: r8 Duration: 1 Negation: False Props: set(['r16', 'r17', 'r15', 'r8'])
11/17/2020 10:28:59 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r8 )
11/17/2020 10:28:59 PM DEBUG [hold] Prop: r15 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r15', 'r8'])
11/17/2020 10:28:59 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r15 )
11/17/2020 10:28:59 PM DEBUG [hold] Prop: r16 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r15', 'r8'])
11/17/2020 10:28:59 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r16 )
11/17/2020 10:28:59 PM INFO No trap states were added.
11/17/2020 10:28:59 PM INFO No trap states were added.
11/17/2020 10:28:59 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:28:59 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:28:59 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:28:59 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:28:59 PM DEBUG [union] DFA1: (Eventually (Hold 3 r15 ) 0 7 ) DFA2: (Eventually (Hold 3 r16 ) 0 7 )
11/17/2020 10:28:59 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r15', 'r8'])
11/17/2020 10:28:59 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 10:28:59 PM INFO No trap states were added.
11/17/2020 10:28:59 PM INFO No trap states were added.
11/17/2020 10:28:59 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 10:28:59 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r8 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) )
11/17/2020 10:28:59 PM DEBUG [spec] spec: [H^1 r8]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])
11/17/2020 10:28:59 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r8 ) 0 5 ) (Union (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r16': 1, 'r17': 2, 'r15': 4, 'r8': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r8', 'weight': 0, 'label': u'r8'}), (1, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r8', 'weight': 0, 'label': u'r8'}), (2, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (2, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (2, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (2, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (2, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (2, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (2, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (3, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (3, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (3, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (4, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (4, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (4, 39, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (4, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (4, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (4, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (4, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (5, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (5, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (5, 15, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (5, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (5, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (5, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (5, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (6, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (6, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (7, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (7, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (7, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (7, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (8, 64, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (8, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (8, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (8, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (8, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (8, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (8, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (9, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (9, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (9, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (9, 47, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (9, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (9, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (9, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (10, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (10, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (10, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (10, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (10, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (10, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (10, 60, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (11, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (11, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (11, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (11, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (12, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (12, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (13, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & (r16)) | (((else)) & (r16))) & ((else))) | ((((r15) & ((else))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & (r16)) | (((else)) & (r16))) & ((else))) | ((((r15) & ((else))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & (r17))))'}), (13, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (14, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (14, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (14, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (15, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (15, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (15, 14, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (15, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (15, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (15, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (16, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (16, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (16, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (16, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (16, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (16, 25, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (16, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (17, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (17, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (17, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (17, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (18, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (18, 42, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (18, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (18, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (18, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (19, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))'}), (19, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (20, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (20, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (20, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (20, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (21, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (21, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (21, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (21, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (22, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (22, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (22, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (22, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (23, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (23, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (23, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (23, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (23, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (23, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (23, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (24, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (24, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (24, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (24, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (25, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (25, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (25, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (25, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (26, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (26, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (27, 12, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (27, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (27, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (27, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (27, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (28, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (28, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (28, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (28, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (28, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (28, 56, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (28, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (29, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (29, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (29, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (29, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (29, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (29, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (29, 59, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (30, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (30, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (30, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (30, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (31, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))'}), (31, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (31, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (31, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (33, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (33, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (33, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (33, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (34, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (34, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (34, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (35, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (35, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (35, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (35, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (35, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (35, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (35, 63, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (36, 66, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (36, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (36, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (36, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (36, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (36, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (36, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (37, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | ((((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | ((((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r15) & ((else))) & (r17))))'}), (37, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (37, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (37, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (38, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (38, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (38, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (38, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (39, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (39, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (39, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (39, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (39, 51, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (39, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (40, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (40, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (40, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (40, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (41, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (41, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (41, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (41, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (41, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (41, 24, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (41, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (42, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))'}), (42, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (42, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (42, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (43, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (43, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (43, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (44, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (44, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (44, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (44, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (44, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (44, 58, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (45, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (45, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (45, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (45, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (46, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (46, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (47, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (47, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (47, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (47, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (48, 32, {'input': set([1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else))) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else))) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)))'}), (48, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (49, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (49, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (50, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (50, 44, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (50, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (50, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (50, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (50, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (50, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (51, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (51, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (52, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (52, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (52, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (52, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (52, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (52, 28, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (52, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (53, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (53, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (53, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (53, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (53, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (53, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (53, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (54, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (54, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (54, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (54, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (54, 9, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (54, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (54, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (55, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (55, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (55, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (55, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (55, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (55, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (55, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (56, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (56, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (57, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (57, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (57, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (57, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (58, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))'}), (58, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (59, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (59, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (59, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (59, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (60, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (61, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (61, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (61, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (61, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (61, 46, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (61, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (61, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (62, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (62, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (62, 21, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (62, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (62, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (63, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (63, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (63, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (63, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (64, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (64, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (65, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (65, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (65, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (65, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (65, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (65, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (65, 29, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (66, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (66, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (66, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (66, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (66, 48, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (66, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (66, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'})]
		
11/17/2020 10:28:59 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     6 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     14 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     19 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     20 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     26 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     33 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     34 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     38 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     40 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     43 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
     45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     48 -> both=set([3, 6, 7, 11, 14, 15]) left=set([1, 4, 5, 9, 12, 13]) right=set([2, 10])
     49 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     51 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
     56 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     58 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     59 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     60 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     64 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       12 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       13 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       26 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       34 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       40 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       48 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       49 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       51 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       56 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       57 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       58 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       59 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       60 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       64 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:28:59 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:28:59 PM DEBUG [spec] No of edges: 384
11/17/2020 10:28:59 PM DEBUG 
End of translate


11/17/2020 10:28:59 PM INFO The bound of formula "[H^1 r8]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])" is (5, 13)!
11/17/2020 10:28:59 PM INFO Translated formula "[H^1 r8]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:28:59 PM DEBUG [hold] Prop: r9 Duration: 1 Negation: False Props: set(['r16', 'r17', 'r15', 'r9'])
11/17/2020 10:28:59 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r9 )
11/17/2020 10:28:59 PM DEBUG [hold] Prop: r15 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r15', 'r9'])
11/17/2020 10:28:59 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r15 )
11/17/2020 10:28:59 PM DEBUG [hold] Prop: r16 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r15', 'r9'])
11/17/2020 10:28:59 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r16 )
11/17/2020 10:28:59 PM INFO No trap states were added.
11/17/2020 10:28:59 PM INFO No trap states were added.
11/17/2020 10:28:59 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:28:59 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:28:59 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:28:59 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:28:59 PM DEBUG [union] DFA1: (Eventually (Hold 3 r15 ) 0 7 ) DFA2: (Eventually (Hold 3 r16 ) 0 7 )
11/17/2020 10:28:59 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r15', 'r9'])
11/17/2020 10:28:59 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 10:28:59 PM INFO No trap states were added.
11/17/2020 10:28:59 PM INFO No trap states were added.
11/17/2020 10:28:59 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 10:28:59 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r9 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) )
11/17/2020 10:28:59 PM DEBUG [spec] spec: [H^1 r9]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])
11/17/2020 10:28:59 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r9 ) 0 5 ) (Union (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r16': 1, 'r17': 2, 'r15': 4, 'r9': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r9', 'weight': 0, 'label': u'r9'}), (1, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r9', 'weight': 0, 'label': u'r9'}), (2, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (2, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (2, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (2, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (2, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (2, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (2, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (3, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (3, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (3, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (4, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (4, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (4, 39, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (4, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (4, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (4, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (4, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (5, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (5, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (5, 15, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (5, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (5, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (5, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (5, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (6, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (6, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (7, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (7, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (7, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (7, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (8, 64, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (8, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (8, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (8, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (8, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (8, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (8, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (9, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (9, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (9, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (9, 47, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (9, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (9, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (9, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (10, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (10, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (10, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (10, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (10, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (10, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (10, 60, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (11, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (11, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (11, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (11, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (12, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (12, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (13, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & (r16)) | (((else)) & (r16))) & ((else))) | ((((r15) & ((else))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & (r16)) | (((else)) & (r16))) & ((else))) | ((((r15) & ((else))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & (r17))))'}), (13, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (14, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (14, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (14, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (15, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (15, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (15, 14, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (15, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (15, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (15, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (16, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (16, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (16, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (16, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (16, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (16, 25, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (16, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (17, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (17, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (17, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (17, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (18, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (18, 42, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (18, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (18, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (18, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (19, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))'}), (19, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (20, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (20, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (20, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (20, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (21, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (21, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (21, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (21, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (22, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (22, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (22, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (22, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (23, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (23, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (23, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (23, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (23, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (23, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (23, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (24, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (24, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (24, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (24, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (25, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (25, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (25, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (25, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (26, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (26, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (27, 12, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (27, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (27, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (27, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (27, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (28, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (28, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (28, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (28, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (28, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (28, 56, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (28, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (29, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (29, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (29, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (29, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (29, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (29, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (29, 59, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (30, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (30, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (30, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (30, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (31, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))'}), (31, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (31, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (31, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (33, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (33, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (33, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (33, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (34, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (34, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (34, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (35, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (35, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (35, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (35, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (35, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (35, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (35, 63, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (36, 66, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (36, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (36, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (36, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (36, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (36, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (36, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (37, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | ((((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | ((((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r15) & ((else))) & (r17))))'}), (37, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (37, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (37, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (38, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (38, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (38, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (38, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (39, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (39, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (39, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (39, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (39, 51, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (39, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (40, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (40, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (40, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (40, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (41, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (41, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (41, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (41, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (41, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (41, 24, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (41, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (42, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))'}), (42, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (42, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (42, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (43, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (43, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (43, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (44, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (44, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (44, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (44, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (44, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (44, 58, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (45, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (45, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (45, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (45, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (46, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (46, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (47, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (47, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (47, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (47, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (48, 32, {'input': set([1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else))) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else))) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)))'}), (48, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (49, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (49, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (50, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (50, 44, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (50, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (50, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (50, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (50, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (50, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (51, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (51, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (52, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (52, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (52, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (52, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (52, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (52, 28, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (52, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (53, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (53, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (53, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (53, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (53, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (53, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (53, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (54, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (54, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (54, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (54, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (54, 9, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (54, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (54, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (55, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (55, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (55, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (55, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (55, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (55, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (55, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (56, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (56, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (57, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (57, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (57, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (57, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (58, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))'}), (58, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (59, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (59, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (59, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (59, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (60, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (61, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (61, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (61, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (61, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (61, 46, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (61, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (61, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (62, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (62, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (62, 21, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (62, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (62, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (63, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (63, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (63, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (63, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (64, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (64, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (65, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (65, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (65, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (65, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (65, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (65, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (65, 29, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (66, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (66, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (66, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (66, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (66, 48, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (66, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (66, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'})]
		
11/17/2020 10:28:59 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     6 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     14 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     19 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     20 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     26 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     33 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     34 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     38 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     40 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     43 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
     45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     48 -> both=set([3, 6, 7, 11, 14, 15]) left=set([1, 4, 5, 9, 12, 13]) right=set([2, 10])
     49 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     51 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
     56 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     58 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     59 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     60 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     64 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       12 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       13 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       26 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       34 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       40 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       48 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       49 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       51 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       56 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       57 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       58 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       59 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       60 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       64 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:28:59 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:28:59 PM DEBUG [spec] No of edges: 384
11/17/2020 10:28:59 PM DEBUG 
End of translate


11/17/2020 10:28:59 PM INFO The bound of formula "[H^1 r9]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])" is (5, 13)!
11/17/2020 10:28:59 PM INFO Translated formula "[H^1 r9]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:28:59 PM DEBUG [hold] Prop: r9 Duration: 1 Negation: False Props: set(['r16', 'r17', 'r15', 'r9'])
11/17/2020 10:28:59 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r9 )
11/17/2020 10:28:59 PM DEBUG [hold] Prop: r15 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r15', 'r9'])
11/17/2020 10:28:59 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r15 )
11/17/2020 10:28:59 PM DEBUG [hold] Prop: r16 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r15', 'r9'])
11/17/2020 10:28:59 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r16 )
11/17/2020 10:28:59 PM INFO No trap states were added.
11/17/2020 10:28:59 PM INFO No trap states were added.
11/17/2020 10:28:59 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:28:59 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:28:59 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:28:59 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:28:59 PM DEBUG [union] DFA1: (Eventually (Hold 3 r15 ) 0 7 ) DFA2: (Eventually (Hold 3 r16 ) 0 7 )
11/17/2020 10:28:59 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r15', 'r9'])
11/17/2020 10:28:59 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 10:28:59 PM INFO No trap states were added.
11/17/2020 10:28:59 PM INFO No trap states were added.
11/17/2020 10:28:59 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:28:59 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 10:28:59 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r9 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) )
11/17/2020 10:28:59 PM DEBUG [spec] spec: [H^1 r9]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])
11/17/2020 10:28:59 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r9 ) 0 5 ) (Union (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r16': 1, 'r17': 2, 'r15': 4, 'r9': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r9', 'weight': 0, 'label': u'r9'}), (1, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r9', 'weight': 0, 'label': u'r9'}), (2, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (2, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (2, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (2, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (2, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (2, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (2, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (3, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (3, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (3, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (4, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (4, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (4, 39, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (4, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (4, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (4, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (4, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (5, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (5, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (5, 15, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (5, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (5, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (5, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (5, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (6, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (6, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (7, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (7, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (7, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (7, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (8, 64, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (8, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (8, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (8, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (8, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (8, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (8, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (9, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (9, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (9, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (9, 47, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (9, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (9, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (9, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (10, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (10, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (10, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (10, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (10, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (10, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (10, 60, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (11, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (11, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (11, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (11, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (12, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (12, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (13, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & (r16)) | (((else)) & (r16))) & ((else))) | ((((r15) & ((else))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & (r16)) | (((else)) & (r16))) & ((else))) | ((((r15) & ((else))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & (r17))))'}), (13, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (14, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (14, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (14, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (15, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (15, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (15, 14, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (15, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (15, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (15, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (16, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (16, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (16, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (16, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (16, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (16, 25, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (16, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (17, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (17, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (17, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (17, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (18, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (18, 42, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (18, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (18, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (18, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (19, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))'}), (19, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (20, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (20, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (20, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (20, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (21, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (21, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (21, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (21, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (22, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (22, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (22, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (22, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (23, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (23, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (23, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (23, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (23, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (23, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (23, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (24, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (24, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (24, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (24, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (25, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (25, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (25, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (25, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (26, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (26, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (27, 12, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (27, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (27, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (27, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (27, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (28, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (28, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (28, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (28, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (28, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (28, 56, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (28, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (29, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (29, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (29, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (29, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (29, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (29, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (29, 59, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (30, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (30, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (30, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (30, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (31, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))'}), (31, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (31, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (31, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (33, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (33, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (33, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (33, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (34, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (34, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (34, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (35, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (35, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (35, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (35, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (35, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (35, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (35, 63, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (36, 66, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (36, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (36, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (36, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (36, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (36, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (36, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (37, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | ((((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | ((((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r15) & ((else))) & (r17))))'}), (37, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (37, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (37, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (38, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (38, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (38, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (38, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (39, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (39, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (39, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (39, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (39, 51, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (39, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (40, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (40, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (40, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (40, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (41, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (41, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (41, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (41, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (41, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (41, 24, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (41, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (42, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))'}), (42, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (42, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (42, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (43, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (43, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (43, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (44, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (44, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (44, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (44, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (44, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (44, 58, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (45, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (45, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (45, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (45, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (46, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (46, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (47, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (47, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (47, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (47, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (48, 32, {'input': set([1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else))) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else))) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)))'}), (48, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (49, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (49, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (50, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (50, 44, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (50, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (50, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (50, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (50, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (50, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (51, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (51, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (52, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (52, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (52, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (52, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (52, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (52, 28, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (52, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (53, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (53, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (53, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (53, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (53, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (53, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (53, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (54, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (54, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (54, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (54, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (54, 9, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (54, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (54, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (55, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (55, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (55, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (55, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (55, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (55, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (55, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (56, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (56, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (57, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (57, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (57, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (57, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (58, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))'}), (58, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (59, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (59, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (59, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (59, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (60, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (61, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (61, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (61, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (61, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (61, 46, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (61, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (61, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (62, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (62, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (62, 21, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (62, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (62, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (63, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (63, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (63, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (63, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (64, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (64, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (65, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (65, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (65, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (65, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (65, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (65, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (65, 29, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (66, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (66, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (66, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (66, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (66, 48, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (66, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (66, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'})]
		
11/17/2020 10:28:59 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     6 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     14 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     19 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     20 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     26 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     33 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     34 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     38 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     40 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     43 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
     45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     48 -> both=set([3, 6, 7, 11, 14, 15]) left=set([1, 4, 5, 9, 12, 13]) right=set([2, 10])
     49 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     51 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
     56 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     58 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     59 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     60 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     64 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       12 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       13 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       26 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       34 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       40 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       48 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       49 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       51 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       56 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       57 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       58 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       59 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       60 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       64 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:28:59 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:28:59 PM DEBUG [spec] No of edges: 384
11/17/2020 10:28:59 PM DEBUG 
End of translate


11/17/2020 10:28:59 PM INFO The bound of formula "[H^1 r9]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])" is (5, 13)!
11/17/2020 10:28:59 PM INFO Translated formula "[H^1 r9]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:28:59 PM DEBUG 

Start policy computation

11/17/2020 10:28:59 PM DEBUG [extend_ts] TS: (15, 79) ETS:(15, 79)
11/17/2020 10:28:59 PM DEBUG [extend_ts] TS: (15, 79) ETS:(15, 79)
11/17/2020 10:28:59 PM DEBUG [extend_ts] TS: (15, 79) ETS:(15, 79)
11/17/2020 10:28:59 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:28:59 PM INFO Product automaton size is: (51, 259)
11/17/2020 10:28:59 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:28:59 PM INFO Product automaton size is: (51, 259)
11/17/2020 10:28:59 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:28:59 PM INFO Product automaton size is: (51, 259)
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:28:59 PM DEBUG []
11/17/2020 10:29:18 PM INFO Max deadline: 3
11/17/2020 10:29:18 PM INFO Generated control policy is: Base1 -> 1 -> Base2 -> 1 -> r13 -> 1 -> r8 -> 1 -> r8 -> 1 -> r15 -> 1 -> r15 -> 1 -> r15 -> 1 -> r15
11/17/2020 10:29:18 PM INFO Max deadline: 3
11/17/2020 10:29:18 PM INFO Generated control policy is: Base2 -> 1 -> r13 -> 1 -> r14 -> 1 -> r9 -> 1 -> r9 -> 1 -> r15 -> 1 -> r15 -> 1 -> r15 -> 1 -> r15
11/17/2020 10:29:18 PM INFO Max deadline: 3
11/17/2020 10:29:18 PM INFO Generated control policy is: Base3 -> 1 -> r13 -> 1 -> r14 -> 1 -> r9 -> 1 -> r9 -> 1 -> r15 -> 1 -> r15 -> 1 -> r15 -> 1 -> r15
11/17/2020 10:31:45 PM DEBUG [hold] Prop: r6 Duration: 1 Negation: False Props: set(['r6', 'r15', 'r14', 'r13'])
11/17/2020 10:31:45 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r6 )
11/17/2020 10:31:45 PM DEBUG [hold] Prop: r13 Duration: 3 Negation: False Props: set(['r6', 'r15', 'r14', 'r13'])
11/17/2020 10:31:45 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r13 )
11/17/2020 10:31:45 PM DEBUG [hold] Prop: r14 Duration: 3 Negation: False Props: set(['r6', 'r15', 'r14', 'r13'])
11/17/2020 10:31:45 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r14 )
11/17/2020 10:31:45 PM INFO No trap states were added.
11/17/2020 10:31:45 PM INFO No trap states were added.
11/17/2020 10:31:45 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:31:45 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:31:45 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:31:45 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:31:45 PM DEBUG [union] DFA1: (Eventually (Hold 3 r13 ) 0 7 ) DFA2: (Eventually (Hold 3 r14 ) 0 7 )
11/17/2020 10:31:45 PM DEBUG [hold] Prop: r15 Duration: 3 Negation: False Props: set(['r6', 'r15', 'r14', 'r13'])
11/17/2020 10:31:45 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r15 )
11/17/2020 10:31:45 PM INFO No trap states were added.
11/17/2020 10:31:45 PM INFO No trap states were added.
11/17/2020 10:31:45 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r13 ) 0 7 ) (Eventually (Hold 3 r14 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r15 ) 0 7 )
11/17/2020 10:31:45 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r6 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r13 ) 0 7 ) (Eventually (Hold 3 r14 ) 0 7 ) ) (Eventually (Hold 3 r15 ) 0 7 ) )
11/17/2020 10:31:45 PM DEBUG [spec] spec: [H^1 r6]^[0, 5] * ([H^3 r13]^[0, 7] | [H^3 r14]^[0, 7] | [H^3 r15]^[0, 7])
11/17/2020 10:31:45 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r6 ) 0 5 ) (Union (Union (Eventually (Hold 3 r13 ) 0 7 ) (Eventually (Hold 3 r14 ) 0 7 ) ) (Eventually (Hold 3 r15 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r6': 1, 'r15': 2, 'r14': 4, 'r13': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 2, 4, 6, 8, 10, 12, 14]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': u'r6', 'weight': 0, 'label': u'r6'}), (1, 0, {'input': set([0, 2, 4, 6, 8, 10, 12, 14]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': u'r6', 'weight': 0, 'label': u'r6'}), (2, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (2, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (2, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (2, 50, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (2, 52, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (2, 54, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (2, 4, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (3, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))'}), (3, 41, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (3, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (4, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (4, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (4, 39, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (4, 8, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (4, 41, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (4, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (4, 62, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (5, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (5, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (5, 15, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (5, 18, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (5, 52, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (5, 54, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (5, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (6, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (6, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (6, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (6, 54, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (7, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (7, 57, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (7, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (7, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (8, 64, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (8, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (8, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (8, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (8, 11, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (8, 45, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (8, 20, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (9, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (9, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (9, 45, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (9, 47, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (9, 17, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (9, 53, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (9, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (10, 33, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (10, 34, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (10, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (10, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (10, 54, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (10, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (10, 60, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (11, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (11, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (11, 10, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (11, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (12, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))'}), (12, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (13, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | (((((r13) & (r14)) | (((else)) & (r14))) & ((else))) | ((((r13) & ((else))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | (((((r13) & (r14)) | (((else)) & (r14))) & ((else))) | ((((r13) & ((else))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & (r15))))'}), (13, 41, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))'}), (14, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (14, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (14, 45, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (15, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (15, 41, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (15, 14, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (15, 22, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (15, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (15, 27, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (16, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (16, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (16, 40, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (16, 41, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (16, 57, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (16, 25, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (16, 61, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (17, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (17, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (17, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (17, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (18, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (18, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (18, 41, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (18, 42, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (18, 20, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (18, 22, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (18, 62, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (19, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | ((((((else)) & (r14)) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) | ((r13) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | ((((((else)) & (r14)) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) | ((r13) & (r14))) & (r15))))'}), (19, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (20, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))'}), (20, 16, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (20, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (20, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (21, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (21, 33, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (21, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (21, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (22, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))'}), (22, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (22, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (22, 45, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (23, 34, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (23, 4, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (23, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (23, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (23, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (23, 54, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (23, 57, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (24, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (24, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (24, 53, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (24, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (25, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (25, 17, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (25, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (25, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (26, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))'}), (26, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (27, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (27, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (27, 12, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (27, 45, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (27, 57, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (27, 26, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (27, 30, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (28, 33, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (28, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (28, 45, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (28, 17, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (28, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (28, 56, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (28, 26, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (29, 33, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (29, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (29, 8, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (29, 41, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (29, 40, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (29, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (29, 59, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (30, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (30, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (30, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (30, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (31, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & ((else))) & (r15))))', 'weight': 0, 'label': '(((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & ((else))) & (r15))))'}), (31, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (31, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (31, 41, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (33, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (33, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (33, 54, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (33, 31, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (34, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))'}), (34, 41, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (34, 61, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (35, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (35, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (35, 16, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (35, 54, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (35, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (35, 31, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (35, 63, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (36, 66, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (36, 8, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (36, 41, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (36, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (36, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (36, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (36, 27, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (37, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r14)) & (r15)) | ((((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((r13) & ((else))) & (r15))))', 'weight': 0, 'label': '((((else)) & (r14)) & (r15)) | ((((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((r13) & ((else))) & (r15))))'}), (37, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (37, 34, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (37, 54, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (38, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))'}), (38, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (38, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (38, 54, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (39, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (39, 7, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (39, 43, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (39, 45, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (39, 51, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (39, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (40, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (40, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (40, 30, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (40, 45, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (41, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (41, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (41, 11, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (41, 45, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (41, 50, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (41, 24, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (41, 30, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (42, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & ((else))) & (r15))))', 'weight': 0, 'label': '(((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & ((else))) & (r15))))'}), (42, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (42, 45, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (42, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (43, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))'}), (43, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (43, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (44, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (44, 40, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (44, 41, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (44, 19, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (44, 22, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (44, 58, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (45, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (45, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (45, 50, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (45, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (46, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (46, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (46, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (46, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (47, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (47, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (47, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (47, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (48, 32, {'input': set([2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else))) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else))) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)))'}), (48, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))'}), (49, 41, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (49, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (50, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (50, 44, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (50, 16, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (50, 18, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (50, 53, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (50, 54, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (50, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (51, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))'}), (51, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (52, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (52, 41, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (52, 10, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (52, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (52, 27, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (52, 28, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (52, 61, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (53, 34, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (53, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (53, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (53, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (53, 19, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (53, 54, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (53, 31, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (54, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (54, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (54, 41, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (54, 50, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (54, 9, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (54, 61, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (54, 62, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (55, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (55, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (55, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (55, 52, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (55, 54, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (55, 20, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (55, 31, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (56, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))'}), (56, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (57, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (57, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (57, 54, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (57, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (58, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | ((((((else)) & (r14)) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) | ((r13) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | ((((((else)) & (r14)) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) | ((r13) & (r14))) & (r15))))'}), (58, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (59, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (59, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (59, 45, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (59, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (60, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))'}), (60, 41, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (60, 22, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (61, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (61, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (61, 11, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (61, 45, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (61, 46, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (61, 17, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (61, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (62, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (62, 7, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (62, 10, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (62, 45, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (62, 21, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (62, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (62, 30, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (63, 40, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (63, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))'}), (63, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (63, 41, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (64, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))'}), (64, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (65, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (65, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (65, 10, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (65, 16, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (65, 54, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (65, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (65, 29, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (66, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (66, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (66, 43, {'input': set([10, 11]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (66, 45, {'input': set([8, 9]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (66, 48, {'input': set([14, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (66, 19, {'input': set([6, 7]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (66, 26, {'input': set([12, 13]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'})]
		
11/17/2020 10:31:45 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     6 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([3, 10, 11, 2])
     14 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     17 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     19 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([3, 10, 11, 2])
     20 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     21 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     24 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     33 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     38 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     40 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     43 -> both=set([10, 11, 14, 15]) left=set([8, 9, 12, 13]) right=set([2, 3, 6, 7])
     45 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     48 -> both=set([6, 7, 10, 11, 14, 15]) left=set([4, 5, 8, 9, 12, 13]) right=set([2, 3])
     49 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     51 -> both=set([10, 11, 14, 15]) left=set([8, 9, 12, 13]) right=set([2, 3, 6, 7])
     56 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     58 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([3, 10, 11, 2])
     59 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     64 -> both=set([10, 11, 14, 15]) left=set([8, 9, 12, 13]) right=set([2, 3, 6, 7])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       7 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       12 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
       13 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       17 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       21 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       26 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
       30 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       43 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       48 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
       49 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       51 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       56 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
       57 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       64 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:31:45 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:31:45 PM DEBUG [spec] No of edges: 384
11/17/2020 10:31:45 PM DEBUG 
End of translate


11/17/2020 10:31:45 PM INFO The bound of formula "[H^1 r6]^[0, 5] * ([H^3 r13]^[0, 7] | [H^3 r14]^[0, 7] | [H^3 r15]^[0, 7])" is (5, 13)!
11/17/2020 10:31:45 PM INFO Translated formula "[H^1 r6]^[0, 5] * ([H^3 r13]^[0, 7] | [H^3 r14]^[0, 7] | [H^3 r15]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:31:45 PM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r14', 'r15', 'r13', 'r10'])
11/17/2020 10:31:45 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r10 )
11/17/2020 10:31:45 PM DEBUG [hold] Prop: r13 Duration: 3 Negation: False Props: set(['r14', 'r15', 'r13', 'r10'])
11/17/2020 10:31:45 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r13 )
11/17/2020 10:31:45 PM DEBUG [hold] Prop: r14 Duration: 3 Negation: False Props: set(['r14', 'r15', 'r13', 'r10'])
11/17/2020 10:31:45 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r14 )
11/17/2020 10:31:45 PM INFO No trap states were added.
11/17/2020 10:31:45 PM INFO No trap states were added.
11/17/2020 10:31:45 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:31:45 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:31:45 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:31:45 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:31:45 PM DEBUG [union] DFA1: (Eventually (Hold 3 r13 ) 0 7 ) DFA2: (Eventually (Hold 3 r14 ) 0 7 )
11/17/2020 10:31:45 PM DEBUG [hold] Prop: r15 Duration: 3 Negation: False Props: set(['r14', 'r15', 'r13', 'r10'])
11/17/2020 10:31:45 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r15 )
11/17/2020 10:31:45 PM INFO No trap states were added.
11/17/2020 10:31:45 PM INFO No trap states were added.
11/17/2020 10:31:45 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r13 ) 0 7 ) (Eventually (Hold 3 r14 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r15 ) 0 7 )
11/17/2020 10:31:45 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r10 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r13 ) 0 7 ) (Eventually (Hold 3 r14 ) 0 7 ) ) (Eventually (Hold 3 r15 ) 0 7 ) )
11/17/2020 10:31:45 PM DEBUG [spec] spec: [H^1 r10]^[0, 5] * ([H^3 r13]^[0, 7] | [H^3 r14]^[0, 7] | [H^3 r15]^[0, 7])
11/17/2020 10:31:45 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r10 ) 0 5 ) (Union (Union (Eventually (Hold 3 r13 ) 0 7 ) (Eventually (Hold 3 r14 ) 0 7 ) ) (Eventually (Hold 3 r15 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r14': 1, 'r15': 2, 'r13': 4, 'r10': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (1, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (2, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (2, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (2, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (2, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (2, 52, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (2, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (2, 4, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (3, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))'}), (3, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (3, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (4, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (4, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (4, 39, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (4, 8, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (4, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (4, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (4, 62, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (5, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (5, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (5, 15, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (5, 18, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (5, 52, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (5, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (5, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (6, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (6, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (6, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (6, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (7, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (7, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (7, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (7, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (8, 64, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (8, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (8, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (8, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (8, 11, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (8, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (8, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (9, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (9, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (9, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (9, 47, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (9, 17, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (9, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (9, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (10, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (10, 34, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (10, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (10, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (10, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (10, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (10, 60, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (11, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (11, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (11, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (11, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (12, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))'}), (12, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (13, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | (((((r13) & (r14)) | (((else)) & (r14))) & ((else))) | ((((r13) & ((else))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | (((((r13) & (r14)) | (((else)) & (r14))) & ((else))) | ((((r13) & ((else))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & (r15))))'}), (13, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))'}), (14, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (14, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (14, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (15, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (15, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (15, 14, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (15, 22, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (15, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (15, 27, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (16, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (16, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (16, 40, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (16, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (16, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (16, 25, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (16, 61, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (17, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (17, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (17, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (17, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (18, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (18, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (18, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (18, 42, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (18, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (18, 22, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (18, 62, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (19, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | ((((((else)) & (r14)) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) | ((r13) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | ((((((else)) & (r14)) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) | ((r13) & (r14))) & (r15))))'}), (19, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (20, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))'}), (20, 16, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (20, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (20, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (21, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (21, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (21, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (21, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (22, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))'}), (22, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (22, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (22, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (23, 34, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (23, 4, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (23, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (23, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (23, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (23, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (23, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (24, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (24, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (24, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (24, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (25, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (25, 17, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (25, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (25, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (26, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))'}), (26, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (27, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (27, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (27, 12, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (27, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (27, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (27, 26, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (27, 30, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (28, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (28, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (28, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (28, 17, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (28, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (28, 56, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (28, 26, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (29, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (29, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (29, 8, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (29, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (29, 40, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (29, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (29, 59, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (30, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (30, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (30, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (30, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (31, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & ((else))) & (r15))))', 'weight': 0, 'label': '(((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & ((else))) & (r15))))'}), (31, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (31, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (31, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (33, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (33, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (33, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (33, 31, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (34, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))'}), (34, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (34, 61, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (35, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (35, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (35, 16, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (35, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (35, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (35, 31, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (35, 63, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (36, 66, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (36, 8, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (36, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (36, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (36, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (36, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (36, 27, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (37, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r14)) & (r15)) | ((((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((r13) & ((else))) & (r15))))', 'weight': 0, 'label': '((((else)) & (r14)) & (r15)) | ((((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((r13) & ((else))) & (r15))))'}), (37, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (37, 34, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (37, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (38, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))'}), (38, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (38, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (38, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (39, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (39, 7, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (39, 43, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (39, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (39, 51, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (39, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (40, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (40, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (40, 30, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (40, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (41, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (41, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (41, 11, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (41, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (41, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (41, 24, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (41, 30, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (42, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & ((else))) & (r15))))', 'weight': 0, 'label': '(((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & ((else))) & (r15))))'}), (42, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (42, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (42, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (43, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))'}), (43, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (43, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (44, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (44, 40, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (44, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (44, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (44, 22, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (44, 58, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (45, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (45, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (45, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (45, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (46, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (46, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (46, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (46, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (47, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (47, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (47, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (47, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (48, 32, {'input': set([1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else))) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else))) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)))'}), (48, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))'}), (49, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (49, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (50, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (50, 44, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (50, 16, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (50, 18, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (50, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (50, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (50, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (51, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))'}), (51, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (52, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (52, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (52, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (52, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (52, 27, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (52, 28, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (52, 61, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (53, 34, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (53, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (53, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (53, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (53, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (53, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (53, 31, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (54, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (54, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (54, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (54, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (54, 9, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (54, 61, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (54, 62, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (55, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (55, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (55, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (55, 52, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (55, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (55, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (55, 31, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (56, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))'}), (56, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (57, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (57, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (57, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (57, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (58, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | ((((((else)) & (r14)) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) | ((r13) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | ((((((else)) & (r14)) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) | ((r13) & (r14))) & (r15))))'}), (58, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (59, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (59, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (59, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (59, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (60, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))'}), (60, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (60, 22, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (61, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (61, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (61, 11, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (61, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (61, 46, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (61, 17, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (61, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (62, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (62, 7, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (62, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (62, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (62, 21, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (62, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (62, 30, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (63, 40, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (63, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))'}), (63, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (63, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (64, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))'}), (64, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (65, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (65, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (65, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (65, 16, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (65, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (65, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (65, 29, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (66, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (66, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (66, 43, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (66, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (66, 48, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (66, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (66, 26, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'})]
		
11/17/2020 10:31:45 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     6 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     14 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     19 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     20 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     26 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     33 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     34 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     38 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     40 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     43 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
     45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     48 -> both=set([3, 6, 7, 11, 14, 15]) left=set([1, 4, 5, 9, 12, 13]) right=set([2, 10])
     49 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     51 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
     56 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     58 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     59 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     60 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     64 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       12 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       13 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       26 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       34 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       40 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       48 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       49 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       51 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       56 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       57 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       58 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       59 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       60 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       64 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:31:45 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:31:45 PM DEBUG [spec] No of edges: 384
11/17/2020 10:31:45 PM DEBUG 
End of translate


11/17/2020 10:31:45 PM INFO The bound of formula "[H^1 r10]^[0, 5] * ([H^3 r13]^[0, 7] | [H^3 r14]^[0, 7] | [H^3 r15]^[0, 7])" is (5, 13)!
11/17/2020 10:31:45 PM INFO Translated formula "[H^1 r10]^[0, 5] * ([H^3 r13]^[0, 7] | [H^3 r14]^[0, 7] | [H^3 r15]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:31:45 PM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r14', 'r15', 'r13', 'r10'])
11/17/2020 10:31:45 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r10 )
11/17/2020 10:31:45 PM DEBUG [hold] Prop: r13 Duration: 3 Negation: False Props: set(['r14', 'r15', 'r13', 'r10'])
11/17/2020 10:31:45 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r13 )
11/17/2020 10:31:45 PM DEBUG [hold] Prop: r14 Duration: 3 Negation: False Props: set(['r14', 'r15', 'r13', 'r10'])
11/17/2020 10:31:45 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r14 )
11/17/2020 10:31:45 PM INFO No trap states were added.
11/17/2020 10:31:45 PM INFO No trap states were added.
11/17/2020 10:31:45 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:31:45 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:31:45 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:31:45 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:31:45 PM DEBUG [union] DFA1: (Eventually (Hold 3 r13 ) 0 7 ) DFA2: (Eventually (Hold 3 r14 ) 0 7 )
11/17/2020 10:31:45 PM DEBUG [hold] Prop: r15 Duration: 3 Negation: False Props: set(['r14', 'r15', 'r13', 'r10'])
11/17/2020 10:31:45 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r15 )
11/17/2020 10:31:45 PM INFO No trap states were added.
11/17/2020 10:31:45 PM INFO No trap states were added.
11/17/2020 10:31:45 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:31:45 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r13 ) 0 7 ) (Eventually (Hold 3 r14 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r15 ) 0 7 )
11/17/2020 10:31:45 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r10 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r13 ) 0 7 ) (Eventually (Hold 3 r14 ) 0 7 ) ) (Eventually (Hold 3 r15 ) 0 7 ) )
11/17/2020 10:31:45 PM DEBUG [spec] spec: [H^1 r10]^[0, 5] * ([H^3 r13]^[0, 7] | [H^3 r14]^[0, 7] | [H^3 r15]^[0, 7])
11/17/2020 10:31:45 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r10 ) 0 5 ) (Union (Union (Eventually (Hold 3 r13 ) 0 7 ) (Eventually (Hold 3 r14 ) 0 7 ) ) (Eventually (Hold 3 r15 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r14': 1, 'r15': 2, 'r13': 4, 'r10': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (1, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (2, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (2, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (2, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (2, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (2, 52, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (2, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (2, 4, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (3, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))'}), (3, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (3, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (4, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (4, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (4, 39, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (4, 8, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (4, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (4, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (4, 62, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (5, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (5, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (5, 15, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (5, 18, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (5, 52, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (5, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (5, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (6, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (6, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (6, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (6, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (7, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (7, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (7, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (7, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (8, 64, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (8, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (8, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (8, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (8, 11, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (8, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (8, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (9, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (9, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (9, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (9, 47, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (9, 17, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (9, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (9, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (10, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (10, 34, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (10, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (10, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (10, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (10, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (10, 60, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (11, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (11, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (11, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (11, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (12, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))'}), (12, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (13, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | (((((r13) & (r14)) | (((else)) & (r14))) & ((else))) | ((((r13) & ((else))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | (((((r13) & (r14)) | (((else)) & (r14))) & ((else))) | ((((r13) & ((else))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & (r15))))'}), (13, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))'}), (14, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (14, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (14, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (15, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (15, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (15, 14, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (15, 22, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (15, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (15, 27, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (16, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (16, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (16, 40, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (16, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (16, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (16, 25, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (16, 61, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (17, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (17, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (17, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (17, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (18, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (18, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (18, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (18, 42, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (18, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (18, 22, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (18, 62, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (19, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | ((((((else)) & (r14)) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) | ((r13) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | ((((((else)) & (r14)) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) | ((r13) & (r14))) & (r15))))'}), (19, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (20, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))'}), (20, 16, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (20, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (20, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (21, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (21, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (21, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (21, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (22, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))'}), (22, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (22, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (22, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (23, 34, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (23, 4, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (23, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (23, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (23, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (23, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (23, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (24, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (24, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (24, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (24, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (25, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (25, 17, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (25, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (25, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (26, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))'}), (26, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (27, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (27, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (27, 12, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (27, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (27, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (27, 26, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (27, 30, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (28, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (28, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (28, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (28, 17, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (28, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (28, 56, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (28, 26, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (29, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (29, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (29, 8, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (29, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (29, 40, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (29, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (29, 59, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (30, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (30, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (30, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (30, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (31, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & ((else))) & (r15))))', 'weight': 0, 'label': '(((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & ((else))) & (r15))))'}), (31, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (31, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (31, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (33, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (33, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (33, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (33, 31, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (34, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))'}), (34, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (34, 61, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (35, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (35, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (35, 16, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (35, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (35, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (35, 31, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (35, 63, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (36, 66, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (36, 8, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (36, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (36, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (36, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (36, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (36, 27, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (37, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r14)) & (r15)) | ((((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((r13) & ((else))) & (r15))))', 'weight': 0, 'label': '((((else)) & (r14)) & (r15)) | ((((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((r13) & ((else))) & (r15))))'}), (37, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (37, 34, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (37, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (38, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & (r14)) & (r15))))'}), (38, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (38, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (38, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (39, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (39, 7, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (39, 43, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (39, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (39, 51, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (39, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (40, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (40, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (40, 30, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (40, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (41, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (41, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (41, 11, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (41, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (41, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (41, 24, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (41, 30, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (42, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & ((else))) & (r15))))', 'weight': 0, 'label': '(((r13) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((r13) & ((else))) & (r15))))'}), (42, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (42, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (42, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (43, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))'}), (43, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (43, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (44, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (44, 40, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (44, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (44, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (44, 22, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (44, 58, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (45, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (45, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (45, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (45, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (46, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (46, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (46, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (46, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (47, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((r13) & (r14))) & (r15)) | ((((r13) & ((else))) | ((r13) & (r14))) & ((else)))'}), (47, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (47, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (47, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (48, 32, {'input': set([1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else))) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else))) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)))'}), (48, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))'}), (49, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (49, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (50, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (50, 44, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (50, 16, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (50, 18, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (50, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (50, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (50, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (51, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))'}), (51, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (52, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (52, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (52, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (52, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (52, 27, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (52, 28, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (52, 61, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (53, 34, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (53, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (53, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (53, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (53, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (53, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (53, 31, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (54, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (54, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (54, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (54, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (54, 9, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (54, 61, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (54, 62, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (55, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (55, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (55, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (55, 52, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (55, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (55, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (55, 31, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (56, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))', 'weight': 0, 'label': '((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & (r15)) | ((((r13) & ((else))) | ((((else)) & (r14)) | ((r13) & (r14)))) & ((else)))'}), (56, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (57, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (57, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (57, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (57, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (58, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | ((((((else)) & (r14)) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) | ((r13) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | ((((((else)) & (r14)) | ((r13) & (r14))) & ((else))) | (((((else)) & (r14)) | ((r13) & (r14))) & (r15))))'}), (58, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (59, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r14)) | ((r13) & (r14))) & (r15)) | (((((else)) & (r14)) | ((r13) & (r14))) & ((else)))'}), (59, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (59, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (59, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (60, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))', 'weight': 0, 'label': '((((r13) & (r14)) | (((else)) & (r14))) & (r15)) | ((((r13) & (r14)) | (((else)) & (r14))) & ((else)))'}), (60, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (60, 22, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (61, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (61, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (61, 11, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (61, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (61, 46, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (61, 17, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (61, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (62, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (62, 7, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (62, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (62, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (62, 21, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (62, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (62, 30, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (63, 40, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (63, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))', 'weight': 0, 'label': '((((else)) & (r14)) & (r15)) | (((((else)) & ((else))) & (r15)) | ((((r13) & ((else))) & (r15)) | (((r13) & (r14)) & (r15))))'}), (63, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (63, 41, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (64, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r15)) | (((((else)) & (r14)) & (r15)) | (((((r13) & ((else))) | ((r13) & (r14))) & ((else))) | ((((r13) & ((else))) | ((r13) & (r14))) & (r15))))'}), (64, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (65, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (65, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (65, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (65, 16, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'}), (65, 54, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (65, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (65, 29, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (66, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r14)) & ((else))', 'weight': 0, 'label': '(((else)) & (r14)) & ((else))'}), (66, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r15)', 'weight': 0, 'label': '(((else)) & ((else))) & (r15)'}), (66, 43, {'input': set([6, 14]), 'guard': '((r13) & ((else))) & (r15)', 'weight': 0, 'label': '((r13) & ((else))) & (r15)'}), (66, 45, {'input': set([4, 12]), 'guard': '((r13) & ((else))) & ((else))', 'weight': 0, 'label': '((r13) & ((else))) & ((else))'}), (66, 48, {'input': set([7, 15]), 'guard': '((r13) & (r14)) & (r15)', 'weight': 0, 'label': '((r13) & (r14)) & (r15)'}), (66, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r14)) & (r15)', 'weight': 0, 'label': '(((else)) & (r14)) & (r15)'}), (66, 26, {'input': set([13, 5]), 'guard': '((r13) & (r14)) & ((else))', 'weight': 0, 'label': '((r13) & (r14)) & ((else))'})]
		
11/17/2020 10:31:45 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     6 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     14 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     19 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     20 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     26 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     33 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     34 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     38 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     40 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     43 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
     45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     48 -> both=set([3, 6, 7, 11, 14, 15]) left=set([1, 4, 5, 9, 12, 13]) right=set([2, 10])
     49 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     51 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
     56 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     58 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     59 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     60 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     64 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       12 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       13 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       26 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       34 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       40 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       48 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       49 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       51 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       56 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       57 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       58 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       59 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       60 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       64 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:31:45 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:31:45 PM DEBUG [spec] No of edges: 384
11/17/2020 10:31:45 PM DEBUG 
End of translate


11/17/2020 10:31:45 PM INFO The bound of formula "[H^1 r10]^[0, 5] * ([H^3 r13]^[0, 7] | [H^3 r14]^[0, 7] | [H^3 r15]^[0, 7])" is (5, 13)!
11/17/2020 10:31:45 PM INFO Translated formula "[H^1 r10]^[0, 5] * ([H^3 r13]^[0, 7] | [H^3 r14]^[0, 7] | [H^3 r15]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:31:45 PM DEBUG 

Start policy computation

11/17/2020 10:31:45 PM DEBUG [extend_ts] TS: (15, 65) ETS:(15, 65)
11/17/2020 10:31:45 PM DEBUG [extend_ts] TS: (15, 65) ETS:(15, 65)
11/17/2020 10:31:45 PM DEBUG [extend_ts] TS: (15, 65) ETS:(15, 65)
11/17/2020 10:31:45 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:31:45 PM INFO Product automaton size is: (39, 155)
11/17/2020 10:31:45 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:31:45 PM INFO Product automaton size is: (39, 155)
11/17/2020 10:31:45 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:31:45 PM INFO Product automaton size is: (39, 155)
11/17/2020 10:31:45 PM DEBUG []
11/17/2020 10:31:45 PM DEBUG []
11/17/2020 10:31:45 PM DEBUG []
11/17/2020 10:31:45 PM DEBUG []
11/17/2020 10:31:45 PM DEBUG []
11/17/2020 10:31:45 PM DEBUG []
11/17/2020 10:31:45 PM DEBUG []
11/17/2020 10:31:45 PM DEBUG []
11/17/2020 10:31:45 PM DEBUG []
11/17/2020 10:31:45 PM DEBUG []
11/17/2020 10:31:45 PM DEBUG []
11/17/2020 10:31:45 PM DEBUG []
11/17/2020 10:31:45 PM DEBUG []
11/17/2020 10:31:45 PM DEBUG []
11/17/2020 10:31:45 PM DEBUG []
11/17/2020 10:31:45 PM DEBUG []
11/17/2020 10:31:45 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:31:46 PM DEBUG []
11/17/2020 10:32:33 PM INFO Max deadline: 1
11/17/2020 10:32:33 PM INFO Generated control policy is: Base1 -> 1 -> r6 -> 1 -> r6 -> 1 -> r13 -> 1 -> r13 -> 1 -> r13 -> 1 -> r13
11/17/2020 10:32:33 PM INFO Max deadline: 0
11/17/2020 10:32:33 PM INFO Generated control policy is: Base2 -> 1 -> Base3 -> 1 -> r10 -> 1 -> r10 -> 1 -> r15 -> 1 -> r14 -> 1 -> r14 -> 1 -> r14 -> 1 -> r14
11/17/2020 10:32:33 PM INFO Max deadline: 0
11/17/2020 10:32:33 PM INFO Generated control policy is: Base3 -> 1 -> r10 -> 1 -> r10 -> 1 -> r15 -> 1 -> r14 -> 1 -> r14 -> 1 -> r14 -> 1 -> r14
11/17/2020 10:38:36 PM DEBUG [hold] Prop: r5 Duration: 1 Negation: False Props: set(['r5', 'r14', 'r8', 'r9'])
11/17/2020 10:38:36 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r5 )
11/17/2020 10:38:36 PM DEBUG [hold] Prop: r8 Duration: 3 Negation: False Props: set(['r5', 'r14', 'r8', 'r9'])
11/17/2020 10:38:36 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r8 )
11/17/2020 10:38:36 PM DEBUG [hold] Prop: r9 Duration: 3 Negation: False Props: set(['r5', 'r14', 'r8', 'r9'])
11/17/2020 10:38:36 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r9 )
11/17/2020 10:38:36 PM INFO No trap states were added.
11/17/2020 10:38:36 PM INFO No trap states were added.
11/17/2020 10:38:36 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:38:36 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:38:36 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:38:36 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:38:36 PM DEBUG [union] DFA1: (Eventually (Hold 3 r8 ) 0 7 ) DFA2: (Eventually (Hold 3 r9 ) 0 7 )
11/17/2020 10:38:36 PM DEBUG [hold] Prop: r14 Duration: 3 Negation: False Props: set(['r5', 'r14', 'r8', 'r9'])
11/17/2020 10:38:36 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r14 )
11/17/2020 10:38:36 PM INFO No trap states were added.
11/17/2020 10:38:36 PM INFO No trap states were added.
11/17/2020 10:38:36 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r8 ) 0 7 ) (Eventually (Hold 3 r9 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r14 ) 0 7 )
11/17/2020 10:38:36 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r5 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r8 ) 0 7 ) (Eventually (Hold 3 r9 ) 0 7 ) ) (Eventually (Hold 3 r14 ) 0 7 ) )
11/17/2020 10:38:36 PM DEBUG [spec] spec: [H^1 r5]^[0, 5] * ([H^3 r8]^[0, 7] | [H^3 r9]^[0, 7] | [H^3 r14]^[0, 7])
11/17/2020 10:38:36 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r5 ) 0 5 ) (Union (Union (Eventually (Hold 3 r8 ) 0 7 ) (Eventually (Hold 3 r9 ) 0 7 ) ) (Eventually (Hold 3 r14 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r5': 1, 'r14': 2, 'r8': 4, 'r9': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 2, 4, 6, 8, 10, 12, 14]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': u'r5', 'weight': 0, 'label': u'r5'}), (1, 0, {'input': set([0, 2, 4, 6, 8, 10, 12, 14]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': u'r5', 'weight': 0, 'label': u'r5'}), (2, 65, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (2, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (2, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (2, 50, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (2, 52, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (2, 54, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (2, 4, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (3, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))'}), (3, 41, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (3, 23, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (4, 65, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (4, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (4, 39, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (4, 8, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (4, 41, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (4, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (4, 62, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (5, 65, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (5, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (5, 15, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (5, 18, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (5, 52, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (5, 54, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (5, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (6, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (6, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (6, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (6, 54, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (7, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (7, 57, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (7, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (7, 6, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (8, 64, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (8, 65, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (8, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (8, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (8, 11, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (8, 45, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (8, 20, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (9, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (9, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (9, 45, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (9, 47, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (9, 17, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (9, 53, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (9, 23, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (10, 33, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (10, 34, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (10, 6, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (10, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (10, 54, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (10, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (10, 60, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (11, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (11, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (11, 10, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (11, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (12, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))'}), (12, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (13, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | (((((r8) & (r9)) | (((else)) & (r9))) & ((else))) | ((((r8) & ((else))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | (((((r8) & (r9)) | (((else)) & (r9))) & ((else))) | ((((r8) & ((else))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & (r14))))'}), (13, 41, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))'}), (14, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (14, 6, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (14, 45, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (15, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (15, 41, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (15, 14, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (15, 22, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (15, 23, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (15, 27, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (16, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (16, 6, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (16, 40, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (16, 41, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (16, 57, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (16, 25, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (16, 61, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (17, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (17, 65, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (17, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (17, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (18, 65, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (18, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (18, 41, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (18, 42, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (18, 20, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (18, 22, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (18, 62, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (19, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | ((((((else)) & (r9)) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) | ((r8) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | ((((((else)) & (r9)) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) | ((r8) & (r9))) & (r14))))'}), (19, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (20, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))'}), (20, 16, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (20, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (20, 23, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (21, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (21, 33, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (21, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (21, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (22, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))'}), (22, 65, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (22, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (22, 45, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (23, 34, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (23, 4, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (23, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (23, 6, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (23, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (23, 54, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (23, 57, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (24, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (24, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (24, 53, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (24, 23, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (25, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (25, 17, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (25, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (25, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (26, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))'}), (26, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (27, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (27, 6, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (27, 12, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (27, 45, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (27, 57, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (27, 26, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (27, 30, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (28, 33, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (28, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (28, 45, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (28, 17, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (28, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (28, 56, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (28, 26, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (29, 33, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (29, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (29, 8, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (29, 41, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (29, 40, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (29, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (29, 59, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (30, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (30, 65, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (30, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (30, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (31, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & ((else))) & (r14))))', 'weight': 0, 'label': '(((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & ((else))) & (r14))))'}), (31, 65, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (31, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (31, 41, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (33, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (33, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (33, 54, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (33, 31, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (34, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))'}), (34, 41, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (34, 61, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (35, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (35, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (35, 16, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (35, 54, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (35, 23, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (35, 31, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (35, 63, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (36, 66, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (36, 8, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (36, 41, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (36, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (36, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (36, 23, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (36, 27, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (37, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r9)) & (r14)) | ((((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((r8) & ((else))) & (r14))))', 'weight': 0, 'label': '((((else)) & (r9)) & (r14)) | ((((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((r8) & ((else))) & (r14))))'}), (37, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (37, 34, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (37, 54, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (38, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))'}), (38, 65, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (38, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (38, 54, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (39, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (39, 7, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (39, 43, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (39, 45, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (39, 51, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (39, 23, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (40, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (40, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (40, 30, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (40, 45, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (41, 65, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (41, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (41, 11, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (41, 45, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (41, 50, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (41, 24, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (41, 30, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (42, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & ((else))) & (r14))))', 'weight': 0, 'label': '(((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & ((else))) & (r14))))'}), (42, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (42, 45, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (42, 23, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (43, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))'}), (43, 65, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (43, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (44, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (44, 40, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (44, 41, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (44, 19, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (44, 22, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (44, 58, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (45, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (45, 65, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (45, 50, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (45, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (46, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (46, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (46, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (46, 23, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (47, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (47, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (47, 6, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (47, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (48, 32, {'input': set([2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else))) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else))) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)))'}), (48, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))'}), (49, 41, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (49, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (50, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (50, 44, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (50, 16, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (50, 18, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (50, 53, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (50, 54, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (50, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (51, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))'}), (51, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (52, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (52, 41, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (52, 10, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (52, 23, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (52, 27, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (52, 28, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (52, 61, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (53, 34, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (53, 6, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (53, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (53, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (53, 19, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (53, 54, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (53, 31, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (54, 65, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (54, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (54, 41, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (54, 50, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (54, 9, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (54, 61, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (54, 62, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (55, 65, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (55, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (55, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (55, 52, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (55, 54, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (55, 20, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (55, 31, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (56, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))'}), (56, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (57, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (57, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (57, 54, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (57, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (58, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | ((((((else)) & (r9)) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) | ((r8) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | ((((((else)) & (r9)) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) | ((r8) & (r9))) & (r14))))'}), (58, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (59, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (59, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (59, 45, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (59, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (60, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))'}), (60, 41, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (60, 22, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (61, 65, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (61, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (61, 11, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (61, 45, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (61, 46, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (61, 17, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (61, 55, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (62, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (62, 7, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (62, 10, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (62, 45, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (62, 21, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (62, 23, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (62, 30, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (63, 40, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (63, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))'}), (63, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (63, 41, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (64, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))'}), (64, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (65, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (65, 5, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (65, 10, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (65, 16, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (65, 54, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (65, 23, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (65, 29, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (66, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([8, 9]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (66, 38, {'input': set([2, 3]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (66, 43, {'input': set([6, 7]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (66, 45, {'input': set([4, 5]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (66, 48, {'input': set([14, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (66, 19, {'input': set([10, 11]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (66, 26, {'input': set([12, 13]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'})]
		
11/17/2020 10:38:36 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([10, 11, 14, 15]) left=set([8, 9, 12, 13]) right=set([2, 3, 6, 7])
     14 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     19 -> both=set([10, 11, 14, 15]) left=set([8, 9, 12, 13]) right=set([2, 3, 6, 7])
     20 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     33 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     38 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     40 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     43 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([3, 10, 11, 2])
     45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     48 -> both=set([6, 7, 10, 11, 14, 15]) left=set([4, 5, 8, 9, 12, 13]) right=set([2, 3])
     49 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     51 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
     56 -> both=set([]) left=set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     58 -> both=set([10, 11, 14, 15]) left=set([8, 9, 12, 13]) right=set([2, 3, 6, 7])
     59 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     64 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([3, 10, 11, 2])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       12 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       26 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       48 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       49 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       51 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       56 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
       57 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       64 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:38:36 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:38:36 PM DEBUG [spec] No of edges: 384
11/17/2020 10:38:36 PM DEBUG 
End of translate


11/17/2020 10:38:36 PM INFO The bound of formula "[H^1 r5]^[0, 5] * ([H^3 r8]^[0, 7] | [H^3 r9]^[0, 7] | [H^3 r14]^[0, 7])" is (5, 13)!
11/17/2020 10:38:36 PM INFO Translated formula "[H^1 r5]^[0, 5] * ([H^3 r8]^[0, 7] | [H^3 r9]^[0, 7] | [H^3 r14]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:38:36 PM DEBUG [hold] Prop: r11 Duration: 1 Negation: False Props: set(['r14', 'r8', 'r9', 'r11'])
11/17/2020 10:38:36 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r11 )
11/17/2020 10:38:36 PM DEBUG [hold] Prop: r8 Duration: 3 Negation: False Props: set(['r14', 'r8', 'r9', 'r11'])
11/17/2020 10:38:36 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r8 )
11/17/2020 10:38:36 PM DEBUG [hold] Prop: r9 Duration: 3 Negation: False Props: set(['r14', 'r8', 'r9', 'r11'])
11/17/2020 10:38:36 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r9 )
11/17/2020 10:38:36 PM INFO No trap states were added.
11/17/2020 10:38:36 PM INFO No trap states were added.
11/17/2020 10:38:36 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:38:36 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:38:36 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:38:36 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:38:36 PM DEBUG [union] DFA1: (Eventually (Hold 3 r8 ) 0 7 ) DFA2: (Eventually (Hold 3 r9 ) 0 7 )
11/17/2020 10:38:36 PM DEBUG [hold] Prop: r14 Duration: 3 Negation: False Props: set(['r14', 'r8', 'r9', 'r11'])
11/17/2020 10:38:36 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r14 )
11/17/2020 10:38:36 PM INFO No trap states were added.
11/17/2020 10:38:36 PM INFO No trap states were added.
11/17/2020 10:38:36 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r8 ) 0 7 ) (Eventually (Hold 3 r9 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r14 ) 0 7 )
11/17/2020 10:38:36 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r11 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r8 ) 0 7 ) (Eventually (Hold 3 r9 ) 0 7 ) ) (Eventually (Hold 3 r14 ) 0 7 ) )
11/17/2020 10:38:36 PM DEBUG [spec] spec: [H^1 r11]^[0, 5] * ([H^3 r8]^[0, 7] | [H^3 r9]^[0, 7] | [H^3 r14]^[0, 7])
11/17/2020 10:38:36 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r11 ) 0 5 ) (Union (Union (Eventually (Hold 3 r8 ) 0 7 ) (Eventually (Hold 3 r9 ) 0 7 ) ) (Eventually (Hold 3 r14 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r14': 1, 'r8': 2, 'r9': 4, 'r11': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r11', 'weight': 0, 'label': u'r11'}), (1, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r11', 'weight': 0, 'label': u'r11'}), (2, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (2, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (2, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (2, 50, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (2, 52, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (2, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (2, 4, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (3, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))'}), (3, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (3, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (4, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (4, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (4, 39, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (4, 8, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (4, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (4, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (4, 62, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (5, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (5, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (5, 15, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (5, 18, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (5, 52, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (5, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (5, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (6, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (6, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (6, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (6, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (7, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (7, 57, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (7, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (7, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (8, 64, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (8, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (8, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (8, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (8, 11, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (8, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (8, 20, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (9, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (9, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (9, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (9, 47, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (9, 17, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (9, 53, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (9, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (10, 33, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (10, 34, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (10, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (10, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (10, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (10, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (10, 60, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (11, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (11, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (11, 10, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (11, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (12, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))'}), (12, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (13, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | (((((r8) & (r9)) | (((else)) & (r9))) & ((else))) | ((((r8) & ((else))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | (((((r8) & (r9)) | (((else)) & (r9))) & ((else))) | ((((r8) & ((else))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & (r14))))'}), (13, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))'}), (14, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (14, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (14, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (15, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (15, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (15, 14, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (15, 22, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (15, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (15, 27, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (16, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (16, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (16, 40, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (16, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (16, 57, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (16, 25, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (16, 61, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (17, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (17, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (17, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (17, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (18, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (18, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (18, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (18, 42, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (18, 20, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (18, 22, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (18, 62, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (19, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | ((((((else)) & (r9)) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) | ((r8) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | ((((((else)) & (r9)) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) | ((r8) & (r9))) & (r14))))'}), (19, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (20, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))'}), (20, 16, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (20, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (20, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (21, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (21, 33, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (21, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (21, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (22, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))'}), (22, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (22, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (22, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (23, 34, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (23, 4, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (23, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (23, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (23, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (23, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (23, 57, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (24, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (24, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (24, 53, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (24, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (25, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (25, 17, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (25, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (25, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (26, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))'}), (26, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (27, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (27, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (27, 12, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (27, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (27, 57, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (27, 26, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (27, 30, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (28, 33, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (28, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (28, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (28, 17, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (28, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (28, 56, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (28, 26, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (29, 33, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (29, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (29, 8, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (29, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (29, 40, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (29, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (29, 59, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (30, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (30, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (30, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (30, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (31, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & ((else))) & (r14))))', 'weight': 0, 'label': '(((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & ((else))) & (r14))))'}), (31, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (31, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (31, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (33, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (33, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (33, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (33, 31, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (34, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))'}), (34, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (34, 61, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (35, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (35, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (35, 16, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (35, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (35, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (35, 31, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (35, 63, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (36, 66, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (36, 8, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (36, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (36, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (36, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (36, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (36, 27, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (37, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r9)) & (r14)) | ((((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((r8) & ((else))) & (r14))))', 'weight': 0, 'label': '((((else)) & (r9)) & (r14)) | ((((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((r8) & ((else))) & (r14))))'}), (37, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (37, 34, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (37, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (38, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))'}), (38, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (38, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (38, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (39, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (39, 7, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (39, 43, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (39, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (39, 51, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (39, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (40, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (40, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (40, 30, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (40, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (41, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (41, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (41, 11, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (41, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (41, 50, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (41, 24, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (41, 30, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (42, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & ((else))) & (r14))))', 'weight': 0, 'label': '(((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & ((else))) & (r14))))'}), (42, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (42, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (42, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (43, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))'}), (43, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (43, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (44, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (44, 40, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (44, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (44, 19, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (44, 22, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (44, 58, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (45, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (45, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (45, 50, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (45, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (46, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (46, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (46, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (46, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (47, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (47, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (47, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (47, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (48, 32, {'input': set([1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else))) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else))) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)))'}), (48, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))'}), (49, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (49, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (50, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (50, 44, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (50, 16, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (50, 18, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (50, 53, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (50, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (50, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (51, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))'}), (51, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (52, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (52, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (52, 10, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (52, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (52, 27, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (52, 28, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (52, 61, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (53, 34, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (53, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (53, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (53, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (53, 19, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (53, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (53, 31, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (54, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (54, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (54, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (54, 50, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (54, 9, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (54, 61, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (54, 62, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (55, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (55, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (55, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (55, 52, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (55, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (55, 20, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (55, 31, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (56, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))'}), (56, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (57, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (57, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (57, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (57, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (58, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | ((((((else)) & (r9)) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) | ((r8) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | ((((((else)) & (r9)) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) | ((r8) & (r9))) & (r14))))'}), (58, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (59, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (59, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (59, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (59, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (60, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))'}), (60, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (60, 22, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (61, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (61, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (61, 11, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (61, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (61, 46, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (61, 17, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (61, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (62, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (62, 7, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (62, 10, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (62, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (62, 21, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (62, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (62, 30, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (63, 40, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (63, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))'}), (63, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (63, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))'}), (64, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (65, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (65, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (65, 10, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (65, 16, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (65, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (65, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (65, 29, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (66, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (66, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (66, 43, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (66, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (66, 48, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (66, 19, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (66, 26, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'})]
		
11/17/2020 10:38:36 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     6 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     11 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     12 -> both=set([]) left=set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([11, 1, 3, 9])
     14 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     17 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     19 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([11, 1, 3, 9])
     20 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     21 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     24 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     25 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     33 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     38 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     40 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     43 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([1, 9, 5, 13])
     45 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     46 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     47 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     48 -> both=set([3, 5, 7, 11, 13, 15]) left=set([2, 4, 6, 10, 12, 14]) right=set([1, 9])
     49 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     51 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([1, 13, 5, 9])
     56 -> both=set([]) left=set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     58 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([11, 1, 3, 9])
     59 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     64 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([1, 9, 5, 13])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       7 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       11 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       12 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 5, 13])
       13 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       17 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       21 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       24 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       26 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 5, 13])
       30 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       43 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       45 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       46 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       47 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       48 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 5, 13])
       49 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       51 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       56 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 5, 13])
       57 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       64 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:38:36 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:38:36 PM DEBUG [spec] No of edges: 384
11/17/2020 10:38:36 PM DEBUG 
End of translate


11/17/2020 10:38:36 PM INFO The bound of formula "[H^1 r11]^[0, 5] * ([H^3 r8]^[0, 7] | [H^3 r9]^[0, 7] | [H^3 r14]^[0, 7])" is (5, 13)!
11/17/2020 10:38:36 PM INFO Translated formula "[H^1 r11]^[0, 5] * ([H^3 r8]^[0, 7] | [H^3 r9]^[0, 7] | [H^3 r14]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:38:36 PM DEBUG [hold] Prop: r11 Duration: 1 Negation: False Props: set(['r14', 'r8', 'r9', 'r11'])
11/17/2020 10:38:36 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r11 )
11/17/2020 10:38:36 PM DEBUG [hold] Prop: r8 Duration: 3 Negation: False Props: set(['r14', 'r8', 'r9', 'r11'])
11/17/2020 10:38:36 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r8 )
11/17/2020 10:38:36 PM DEBUG [hold] Prop: r9 Duration: 3 Negation: False Props: set(['r14', 'r8', 'r9', 'r11'])
11/17/2020 10:38:36 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r9 )
11/17/2020 10:38:36 PM INFO No trap states were added.
11/17/2020 10:38:36 PM INFO No trap states were added.
11/17/2020 10:38:36 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:38:36 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:38:36 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:38:36 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:38:36 PM DEBUG [union] DFA1: (Eventually (Hold 3 r8 ) 0 7 ) DFA2: (Eventually (Hold 3 r9 ) 0 7 )
11/17/2020 10:38:36 PM DEBUG [hold] Prop: r14 Duration: 3 Negation: False Props: set(['r14', 'r8', 'r9', 'r11'])
11/17/2020 10:38:36 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r14 )
11/17/2020 10:38:36 PM INFO No trap states were added.
11/17/2020 10:38:36 PM INFO No trap states were added.
11/17/2020 10:38:36 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:38:36 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r8 ) 0 7 ) (Eventually (Hold 3 r9 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r14 ) 0 7 )
11/17/2020 10:38:36 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r11 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r8 ) 0 7 ) (Eventually (Hold 3 r9 ) 0 7 ) ) (Eventually (Hold 3 r14 ) 0 7 ) )
11/17/2020 10:38:36 PM DEBUG [spec] spec: [H^1 r11]^[0, 5] * ([H^3 r8]^[0, 7] | [H^3 r9]^[0, 7] | [H^3 r14]^[0, 7])
11/17/2020 10:38:36 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r11 ) 0 5 ) (Union (Union (Eventually (Hold 3 r8 ) 0 7 ) (Eventually (Hold 3 r9 ) 0 7 ) ) (Eventually (Hold 3 r14 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r14': 1, 'r8': 2, 'r9': 4, 'r11': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r11', 'weight': 0, 'label': u'r11'}), (1, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r11', 'weight': 0, 'label': u'r11'}), (2, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (2, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (2, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (2, 50, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (2, 52, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (2, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (2, 4, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (3, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))'}), (3, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (3, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (4, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (4, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (4, 39, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (4, 8, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (4, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (4, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (4, 62, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (5, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (5, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (5, 15, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (5, 18, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (5, 52, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (5, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (5, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (6, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (6, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (6, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (6, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (7, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (7, 57, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (7, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (7, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (8, 64, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (8, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (8, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (8, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (8, 11, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (8, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (8, 20, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (9, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (9, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (9, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (9, 47, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (9, 17, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (9, 53, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (9, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (10, 33, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (10, 34, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (10, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (10, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (10, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (10, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (10, 60, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (11, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (11, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (11, 10, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (11, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (12, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))'}), (12, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (13, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | (((((r8) & (r9)) | (((else)) & (r9))) & ((else))) | ((((r8) & ((else))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | (((((r8) & (r9)) | (((else)) & (r9))) & ((else))) | ((((r8) & ((else))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & (r14))))'}), (13, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))'}), (14, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (14, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (14, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (15, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (15, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (15, 14, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (15, 22, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (15, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (15, 27, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (16, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (16, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (16, 40, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (16, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (16, 57, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (16, 25, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (16, 61, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (17, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (17, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (17, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (17, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (18, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (18, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (18, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (18, 42, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (18, 20, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (18, 22, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (18, 62, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (19, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | ((((((else)) & (r9)) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) | ((r8) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | ((((((else)) & (r9)) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) | ((r8) & (r9))) & (r14))))'}), (19, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (20, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))'}), (20, 16, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (20, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (20, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (21, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (21, 33, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (21, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (21, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (22, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))'}), (22, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (22, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (22, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (23, 34, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (23, 4, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (23, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (23, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (23, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (23, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (23, 57, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (24, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (24, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (24, 53, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (24, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (25, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (25, 17, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (25, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (25, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (26, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))'}), (26, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (27, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (27, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (27, 12, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (27, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (27, 57, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (27, 26, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (27, 30, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (28, 33, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (28, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (28, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (28, 17, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (28, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (28, 56, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (28, 26, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (29, 33, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (29, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (29, 8, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (29, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (29, 40, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (29, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (29, 59, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (30, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (30, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (30, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (30, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (31, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & ((else))) & (r14))))', 'weight': 0, 'label': '(((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & ((else))) & (r14))))'}), (31, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (31, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (31, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (33, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (33, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (33, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (33, 31, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (34, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))'}), (34, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (34, 61, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (35, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (35, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (35, 16, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (35, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (35, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (35, 31, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (35, 63, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (36, 66, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (36, 8, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (36, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (36, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (36, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (36, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (36, 27, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (37, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r9)) & (r14)) | ((((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((r8) & ((else))) & (r14))))', 'weight': 0, 'label': '((((else)) & (r9)) & (r14)) | ((((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((r8) & ((else))) & (r14))))'}), (37, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (37, 34, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (37, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (38, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & (r9)) & (r14))))'}), (38, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (38, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (38, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (39, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (39, 7, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (39, 43, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (39, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (39, 51, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (39, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (40, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (40, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (40, 30, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (40, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (41, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (41, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (41, 11, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (41, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (41, 50, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (41, 24, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (41, 30, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (42, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & ((else))) & (r14))))', 'weight': 0, 'label': '(((r8) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((r8) & ((else))) & (r14))))'}), (42, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (42, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (42, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (43, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))'}), (43, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (43, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (44, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (44, 40, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (44, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (44, 19, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (44, 22, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (44, 58, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (45, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (45, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (45, 50, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (45, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (46, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (46, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (46, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (46, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (47, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((r8) & (r9))) & (r14)) | ((((r8) & ((else))) | ((r8) & (r9))) & ((else)))'}), (47, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (47, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (47, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (48, 32, {'input': set([1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else))) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else))) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)))'}), (48, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))'}), (49, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (49, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (50, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (50, 44, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (50, 16, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (50, 18, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (50, 53, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (50, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (50, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (51, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))'}), (51, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (52, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (52, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (52, 10, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (52, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (52, 27, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (52, 28, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (52, 61, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (53, 34, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (53, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (53, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (53, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (53, 19, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (53, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (53, 31, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (54, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (54, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (54, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (54, 50, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (54, 9, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (54, 61, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (54, 62, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (55, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (55, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (55, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (55, 52, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (55, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (55, 20, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (55, 31, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (56, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))', 'weight': 0, 'label': '((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & (r14)) | ((((r8) & ((else))) | ((((else)) & (r9)) | ((r8) & (r9)))) & ((else)))'}), (56, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (57, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (57, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (57, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (57, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (58, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | ((((((else)) & (r9)) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) | ((r8) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | ((((((else)) & (r9)) | ((r8) & (r9))) & ((else))) | (((((else)) & (r9)) | ((r8) & (r9))) & (r14))))'}), (58, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (59, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r9)) | ((r8) & (r9))) & (r14)) | (((((else)) & (r9)) | ((r8) & (r9))) & ((else)))'}), (59, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (59, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (59, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (60, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))', 'weight': 0, 'label': '((((r8) & (r9)) | (((else)) & (r9))) & (r14)) | ((((r8) & (r9)) | (((else)) & (r9))) & ((else)))'}), (60, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (60, 22, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (61, 65, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (61, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (61, 11, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (61, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (61, 46, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (61, 17, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (61, 55, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (62, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (62, 7, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (62, 10, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (62, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (62, 21, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (62, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (62, 30, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (63, 40, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (63, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))', 'weight': 0, 'label': '((((else)) & (r9)) & (r14)) | (((((else)) & ((else))) & (r14)) | ((((r8) & ((else))) & (r14)) | (((r8) & (r9)) & (r14))))'}), (63, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (63, 41, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r14)) | (((((else)) & (r9)) & (r14)) | (((((r8) & ((else))) | ((r8) & (r9))) & ((else))) | ((((r8) & ((else))) | ((r8) & (r9))) & (r14))))'}), (64, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (65, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (65, 5, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (65, 10, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (65, 16, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'}), (65, 54, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (65, 23, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (65, 29, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (66, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([4, 12]), 'guard': '(((else)) & (r9)) & ((else))', 'weight': 0, 'label': '(((else)) & (r9)) & ((else))'}), (66, 38, {'input': set([1, 9]), 'guard': '(((else)) & ((else))) & (r14)', 'weight': 0, 'label': '(((else)) & ((else))) & (r14)'}), (66, 43, {'input': set([3, 11]), 'guard': '((r8) & ((else))) & (r14)', 'weight': 0, 'label': '((r8) & ((else))) & (r14)'}), (66, 45, {'input': set([2, 10]), 'guard': '((r8) & ((else))) & ((else))', 'weight': 0, 'label': '((r8) & ((else))) & ((else))'}), (66, 48, {'input': set([7, 15]), 'guard': '((r8) & (r9)) & (r14)', 'weight': 0, 'label': '((r8) & (r9)) & (r14)'}), (66, 19, {'input': set([5, 13]), 'guard': '(((else)) & (r9)) & (r14)', 'weight': 0, 'label': '(((else)) & (r9)) & (r14)'}), (66, 26, {'input': set([6, 14]), 'guard': '((r8) & (r9)) & ((else))', 'weight': 0, 'label': '((r8) & (r9)) & ((else))'})]
		
11/17/2020 10:38:36 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     6 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     11 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     12 -> both=set([]) left=set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([11, 1, 3, 9])
     14 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     17 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     19 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([11, 1, 3, 9])
     20 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     21 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     24 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     25 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     33 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     38 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     40 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     43 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([1, 9, 5, 13])
     45 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     46 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     47 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     48 -> both=set([3, 5, 7, 11, 13, 15]) left=set([2, 4, 6, 10, 12, 14]) right=set([1, 9])
     49 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     51 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([1, 13, 5, 9])
     56 -> both=set([]) left=set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     58 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([11, 1, 3, 9])
     59 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
     64 -> both=set([3, 7, 11, 15]) left=set([2, 6, 10, 14]) right=set([1, 9, 5, 13])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       7 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       11 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       12 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 5, 13])
       13 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       17 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       21 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       24 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       26 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 5, 13])
       30 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       43 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       45 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       46 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       47 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       48 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 5, 13])
       49 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       51 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       56 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 5, 13])
       57 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       64 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:38:37 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:38:37 PM DEBUG [spec] No of edges: 384
11/17/2020 10:38:37 PM DEBUG 
End of translate


11/17/2020 10:38:37 PM INFO The bound of formula "[H^1 r11]^[0, 5] * ([H^3 r8]^[0, 7] | [H^3 r9]^[0, 7] | [H^3 r14]^[0, 7])" is (5, 13)!
11/17/2020 10:38:37 PM INFO Translated formula "[H^1 r11]^[0, 5] * ([H^3 r8]^[0, 7] | [H^3 r9]^[0, 7] | [H^3 r14]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:38:37 PM DEBUG 

Start policy computation

11/17/2020 10:38:37 PM DEBUG [extend_ts] TS: (15, 83) ETS:(15, 83)
11/17/2020 10:38:37 PM DEBUG [extend_ts] TS: (15, 83) ETS:(15, 83)
11/17/2020 10:38:37 PM DEBUG [extend_ts] TS: (15, 83) ETS:(15, 83)
11/17/2020 10:38:37 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:38:37 PM INFO Product automaton size is: (51, 274)
11/17/2020 10:38:37 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:38:37 PM INFO Product automaton size is: (51, 276)
11/17/2020 10:38:37 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:38:37 PM INFO Product automaton size is: (51, 276)
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:38:37 PM DEBUG []
11/17/2020 10:39:16 PM INFO Max deadline: 3
11/17/2020 10:39:16 PM INFO Generated control policy is: Base1 -> 1 -> Base2 -> 1 -> Base3 -> 1 -> r10 -> 1 -> r5 -> 1 -> r5 -> 1 -> r10 -> 1 -> r9 -> 1 -> r8 -> 1 -> r8 -> 1 -> r8 -> 1 -> r8
11/17/2020 10:39:16 PM INFO Max deadline: 4
11/17/2020 10:39:16 PM INFO Generated control policy is: Base2 -> 1 -> Base3 -> 1 -> r10 -> 1 -> r11 -> 1 -> r11 -> 1 -> r10 -> 1 -> r9 -> 1 -> r9 -> 1 -> r9 -> 1 -> r9
11/17/2020 10:39:16 PM INFO Max deadline: 4
11/17/2020 10:39:16 PM INFO Generated control policy is: Base3 -> 1 -> r10 -> 1 -> r11 -> 1 -> r11 -> 1 -> r10 -> 1 -> r9 -> 1 -> r9 -> 1 -> r9 -> 1 -> r9
11/17/2020 10:42:30 PM DEBUG [hold] Prop: r7 Duration: 1 Negation: False Props: set(['r5', 'r7', 'r17', 'r11'])
11/17/2020 10:42:30 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r7 )
11/17/2020 10:42:30 PM DEBUG [hold] Prop: r5 Duration: 3 Negation: False Props: set(['r5', 'r7', 'r17', 'r11'])
11/17/2020 10:42:30 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r5 )
11/17/2020 10:42:30 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r5', 'r7', 'r17', 'r11'])
11/17/2020 10:42:30 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r11 )
11/17/2020 10:42:30 PM INFO No trap states were added.
11/17/2020 10:42:30 PM INFO No trap states were added.
11/17/2020 10:42:30 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:42:30 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:42:30 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:42:30 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:42:30 PM DEBUG [union] DFA1: (Eventually (Hold 3 r5 ) 0 7 ) DFA2: (Eventually (Hold 3 r11 ) 0 7 )
11/17/2020 10:42:30 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r5', 'r7', 'r17', 'r11'])
11/17/2020 10:42:30 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 10:42:30 PM INFO No trap states were added.
11/17/2020 10:42:30 PM INFO No trap states were added.
11/17/2020 10:42:30 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:42:30 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:42:30 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:42:30 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:42:30 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:42:30 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:42:30 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:42:30 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r5 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 10:42:30 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r7 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r5 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) )
11/17/2020 10:42:30 PM DEBUG [spec] spec: [H^1 r7]^[0, 5] * ([H^3 r5]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])
11/17/2020 10:42:30 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r7 ) 0 5 ) (Union (Union (Eventually (Hold 3 r5 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r5': 1, 'r11': 8, 'r7': 2, 'r17': 4}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r7', 'weight': 0, 'label': u'r7'}), (1, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r7', 'weight': 0, 'label': u'r7'}), (2, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (2, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (2, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (2, 50, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (2, 52, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (2, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (2, 4, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (3, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))'}), (3, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (3, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (4, 39, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (4, 8, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (4, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (4, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (4, 62, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (5, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (5, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (5, 15, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (5, 18, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (5, 52, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (5, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (5, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (6, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (6, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (7, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (7, 57, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (7, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (7, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 64, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (8, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (8, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (8, 11, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (8, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (8, 20, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (9, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (9, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (9, 47, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (9, 17, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (9, 53, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 33, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (10, 34, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (10, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (10, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (10, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (10, 60, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (11, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (11, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (11, 10, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (11, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (12, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))'}), (12, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (13, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r5) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r5) & ((else))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r5) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r5) & ((else))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & (r17))))'}), (13, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))'}), (14, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (14, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (14, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (15, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (15, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (15, 14, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (15, 22, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (15, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (15, 27, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (16, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (16, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (16, 40, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (16, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (16, 57, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (16, 25, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (16, 61, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (17, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (17, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (17, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (17, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (18, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (18, 42, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (18, 20, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (18, 22, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (18, 62, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (19, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r5) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r5) & (r11))) & (r17))))'}), (19, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (20, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))'}), (20, 16, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (20, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (20, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (21, 33, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (21, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (22, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))'}), (22, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (22, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (22, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (23, 34, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (23, 4, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (23, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (23, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (23, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (23, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (23, 57, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (24, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (24, 53, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (25, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (25, 17, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (25, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (25, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (26, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))'}), (26, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (27, 12, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (27, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (27, 57, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (27, 26, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (27, 30, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (28, 33, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (28, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (28, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (28, 17, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (28, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (28, 56, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (28, 26, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (29, 33, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (29, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (29, 8, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (29, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (29, 40, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (29, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (29, 59, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (30, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (30, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (30, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (30, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (31, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & ((else))) & (r17))))'}), (31, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (31, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (31, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (33, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (33, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (33, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (33, 31, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (34, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))'}), (34, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (34, 61, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (35, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (35, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (35, 16, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (35, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (35, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (35, 31, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (35, 63, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (36, 66, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (36, 8, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (36, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (36, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (36, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (36, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (36, 27, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (37, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | ((((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r5) & ((else))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | ((((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r5) & ((else))) & (r17))))'}), (37, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (37, 34, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (37, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (38, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))'}), (38, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (38, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (38, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (39, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (39, 7, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (39, 43, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (39, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (39, 51, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (39, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (40, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (40, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (40, 30, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (40, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (41, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (41, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (41, 11, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (41, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (41, 50, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (41, 24, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (41, 30, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (42, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & ((else))) & (r17))))'}), (42, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (42, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (42, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))'}), (43, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (44, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (44, 40, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (44, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (44, 19, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (44, 22, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (44, 58, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (45, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (45, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (45, 50, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (45, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (46, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (46, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (47, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (47, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (48, 32, {'input': set([1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else))) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else))) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)))'}), (48, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))'}), (49, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (49, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (50, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (50, 44, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (50, 16, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (50, 18, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (50, 53, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (50, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (50, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (51, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))'}), (51, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (52, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (52, 10, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (52, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 27, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (52, 28, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (52, 61, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (53, 34, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (53, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (53, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (53, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (53, 19, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (53, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (53, 31, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (54, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (54, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (54, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (54, 50, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (54, 9, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (54, 61, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (54, 62, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (55, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (55, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (55, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (55, 52, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (55, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (55, 20, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (55, 31, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (56, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))'}), (56, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (57, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (57, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (57, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (57, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (58, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r5) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r5) & (r11))) & (r17))))'}), (58, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (59, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (59, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (59, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (59, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))'}), (60, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 22, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (61, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (61, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (61, 11, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (61, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (61, 46, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (61, 17, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (61, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 7, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (62, 10, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (62, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (62, 21, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (62, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (62, 30, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (63, 40, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (63, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))'}), (63, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (63, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))'}), (64, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (65, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (65, 10, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (65, 16, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (65, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (65, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 29, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (66, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (66, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (66, 43, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (66, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (66, 48, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (66, 19, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (66, 26, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'})]
		
11/17/2020 10:42:30 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     12 -> both=set([]) left=set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
     14 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     19 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
     20 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     25 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     33 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     38 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     40 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     43 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 6, 14])
     45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     48 -> both=set([5, 7, 12, 13, 14, 15]) left=set([1, 3, 8, 9, 10, 11]) right=set([4, 6])
     49 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     51 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([12, 4, 14, 6])
     56 -> both=set([]) left=set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     58 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
     59 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     64 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 6, 14])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       12 -> both=set([9, 11, 13, 15]) left=set([1, 3, 5, 7]) right=set([8, 10, 12, 14])
       13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       26 -> both=set([9, 11, 13, 15]) left=set([1, 3, 5, 7]) right=set([8, 10, 12, 14])
       30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       43 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       48 -> both=set([9, 11, 13, 15]) left=set([1, 3, 5, 7]) right=set([8, 10, 12, 14])
       49 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       51 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       56 -> both=set([9, 11, 13, 15]) left=set([1, 3, 5, 7]) right=set([8, 10, 12, 14])
       57 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       64 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:42:30 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:42:30 PM DEBUG [spec] No of edges: 384
11/17/2020 10:42:30 PM DEBUG 
End of translate


11/17/2020 10:42:30 PM INFO The bound of formula "[H^1 r7]^[0, 5] * ([H^3 r5]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" is (5, 13)!
11/17/2020 10:42:30 PM INFO Translated formula "[H^1 r7]^[0, 5] * ([H^3 r5]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:42:30 PM DEBUG [hold] Prop: r8 Duration: 1 Negation: False Props: set(['r5', 'r8', 'r17', 'r11'])
11/17/2020 10:42:30 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r8 )
11/17/2020 10:42:30 PM DEBUG [hold] Prop: r5 Duration: 3 Negation: False Props: set(['r5', 'r8', 'r17', 'r11'])
11/17/2020 10:42:30 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r5 )
11/17/2020 10:42:30 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r5', 'r8', 'r17', 'r11'])
11/17/2020 10:42:30 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r11 )
11/17/2020 10:42:30 PM INFO No trap states were added.
11/17/2020 10:42:30 PM INFO No trap states were added.
11/17/2020 10:42:30 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:42:30 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:42:30 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:42:30 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:42:30 PM DEBUG [union] DFA1: (Eventually (Hold 3 r5 ) 0 7 ) DFA2: (Eventually (Hold 3 r11 ) 0 7 )
11/17/2020 10:42:30 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r5', 'r8', 'r17', 'r11'])
11/17/2020 10:42:30 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 10:42:30 PM INFO No trap states were added.
11/17/2020 10:42:30 PM INFO No trap states were added.
11/17/2020 10:42:30 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:42:30 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:42:30 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:42:30 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:42:30 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:42:30 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:42:30 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:42:31 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r5 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 10:42:31 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r8 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r5 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) )
11/17/2020 10:42:31 PM DEBUG [spec] spec: [H^1 r8]^[0, 5] * ([H^3 r5]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])
11/17/2020 10:42:31 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r8 ) 0 5 ) (Union (Union (Eventually (Hold 3 r5 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r5': 1, 'r11': 8, 'r8': 2, 'r17': 4}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r8', 'weight': 0, 'label': u'r8'}), (1, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r8', 'weight': 0, 'label': u'r8'}), (2, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (2, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (2, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (2, 50, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (2, 52, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (2, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (2, 4, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (3, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))'}), (3, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (3, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (4, 39, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (4, 8, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (4, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (4, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (4, 62, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (5, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (5, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (5, 15, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (5, 18, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (5, 52, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (5, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (5, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (6, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (6, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (7, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (7, 57, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (7, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (7, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 64, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (8, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (8, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (8, 11, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (8, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (8, 20, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (9, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (9, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (9, 47, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (9, 17, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (9, 53, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 33, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (10, 34, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (10, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (10, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (10, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (10, 60, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (11, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (11, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (11, 10, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (11, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (12, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))'}), (12, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (13, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r5) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r5) & ((else))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r5) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r5) & ((else))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & (r17))))'}), (13, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))'}), (14, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (14, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (14, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (15, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (15, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (15, 14, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (15, 22, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (15, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (15, 27, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (16, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (16, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (16, 40, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (16, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (16, 57, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (16, 25, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (16, 61, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (17, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (17, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (17, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (17, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (18, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (18, 42, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (18, 20, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (18, 22, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (18, 62, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (19, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r5) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r5) & (r11))) & (r17))))'}), (19, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (20, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))'}), (20, 16, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (20, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (20, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (21, 33, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (21, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (22, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))'}), (22, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (22, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (22, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (23, 34, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (23, 4, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (23, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (23, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (23, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (23, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (23, 57, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (24, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (24, 53, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (25, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (25, 17, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (25, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (25, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (26, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))'}), (26, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (27, 12, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (27, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (27, 57, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (27, 26, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (27, 30, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (28, 33, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (28, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (28, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (28, 17, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (28, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (28, 56, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (28, 26, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (29, 33, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (29, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (29, 8, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (29, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (29, 40, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (29, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (29, 59, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (30, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (30, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (30, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (30, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (31, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & ((else))) & (r17))))'}), (31, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (31, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (31, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (33, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (33, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (33, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (33, 31, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (34, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))'}), (34, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (34, 61, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (35, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (35, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (35, 16, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (35, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (35, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (35, 31, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (35, 63, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (36, 66, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (36, 8, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (36, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (36, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (36, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (36, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (36, 27, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (37, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | ((((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r5) & ((else))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | ((((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r5) & ((else))) & (r17))))'}), (37, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (37, 34, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (37, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (38, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))'}), (38, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (38, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (38, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (39, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (39, 7, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (39, 43, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (39, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (39, 51, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (39, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (40, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (40, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (40, 30, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (40, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (41, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (41, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (41, 11, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (41, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (41, 50, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (41, 24, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (41, 30, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (42, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & ((else))) & (r17))))'}), (42, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (42, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (42, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))'}), (43, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (44, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (44, 40, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (44, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (44, 19, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (44, 22, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (44, 58, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (45, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (45, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (45, 50, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (45, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (46, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (46, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (47, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (47, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (48, 32, {'input': set([1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else))) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else))) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)))'}), (48, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))'}), (49, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (49, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (50, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (50, 44, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (50, 16, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (50, 18, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (50, 53, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (50, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (50, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (51, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))'}), (51, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (52, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (52, 10, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (52, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 27, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (52, 28, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (52, 61, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (53, 34, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (53, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (53, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (53, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (53, 19, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (53, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (53, 31, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (54, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (54, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (54, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (54, 50, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (54, 9, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (54, 61, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (54, 62, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (55, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (55, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (55, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (55, 52, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (55, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (55, 20, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (55, 31, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (56, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))'}), (56, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (57, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (57, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (57, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (57, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (58, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r5) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r5) & (r11))) & (r17))))'}), (58, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (59, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (59, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (59, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (59, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))'}), (60, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 22, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (61, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (61, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (61, 11, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (61, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (61, 46, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (61, 17, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (61, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 7, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (62, 10, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (62, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (62, 21, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (62, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (62, 30, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (63, 40, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (63, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))'}), (63, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (63, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))'}), (64, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (65, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (65, 10, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (65, 16, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (65, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (65, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 29, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (66, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (66, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (66, 43, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (66, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (66, 48, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (66, 19, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (66, 26, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'})]
		
11/17/2020 10:42:31 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     12 -> both=set([]) left=set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
     14 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     19 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
     20 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     25 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     33 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     38 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     40 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     43 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 6, 14])
     45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     48 -> both=set([5, 7, 12, 13, 14, 15]) left=set([1, 3, 8, 9, 10, 11]) right=set([4, 6])
     49 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     51 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([12, 4, 14, 6])
     56 -> both=set([]) left=set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     58 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
     59 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     64 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 6, 14])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       12 -> both=set([9, 11, 13, 15]) left=set([1, 3, 5, 7]) right=set([8, 10, 12, 14])
       13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       26 -> both=set([9, 11, 13, 15]) left=set([1, 3, 5, 7]) right=set([8, 10, 12, 14])
       30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       43 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       48 -> both=set([9, 11, 13, 15]) left=set([1, 3, 5, 7]) right=set([8, 10, 12, 14])
       49 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       51 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       56 -> both=set([9, 11, 13, 15]) left=set([1, 3, 5, 7]) right=set([8, 10, 12, 14])
       57 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       64 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:42:31 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:42:31 PM DEBUG [spec] No of edges: 384
11/17/2020 10:42:31 PM DEBUG 
End of translate


11/17/2020 10:42:31 PM INFO The bound of formula "[H^1 r8]^[0, 5] * ([H^3 r5]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" is (5, 13)!
11/17/2020 10:42:31 PM INFO Translated formula "[H^1 r8]^[0, 5] * ([H^3 r5]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:42:31 PM DEBUG [hold] Prop: r8 Duration: 1 Negation: False Props: set(['r5', 'r8', 'r17', 'r11'])
11/17/2020 10:42:31 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r8 )
11/17/2020 10:42:31 PM DEBUG [hold] Prop: r5 Duration: 3 Negation: False Props: set(['r5', 'r8', 'r17', 'r11'])
11/17/2020 10:42:31 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r5 )
11/17/2020 10:42:31 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r5', 'r8', 'r17', 'r11'])
11/17/2020 10:42:31 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r11 )
11/17/2020 10:42:31 PM INFO No trap states were added.
11/17/2020 10:42:31 PM INFO No trap states were added.
11/17/2020 10:42:31 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:42:31 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:42:31 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:42:31 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:42:31 PM DEBUG [union] DFA1: (Eventually (Hold 3 r5 ) 0 7 ) DFA2: (Eventually (Hold 3 r11 ) 0 7 )
11/17/2020 10:42:31 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r5', 'r8', 'r17', 'r11'])
11/17/2020 10:42:31 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 10:42:31 PM INFO No trap states were added.
11/17/2020 10:42:31 PM INFO No trap states were added.
11/17/2020 10:42:31 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:42:31 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:42:31 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:42:31 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:42:31 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:42:31 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:42:31 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:42:31 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r5 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 10:42:31 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r8 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r5 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) )
11/17/2020 10:42:31 PM DEBUG [spec] spec: [H^1 r8]^[0, 5] * ([H^3 r5]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])
11/17/2020 10:42:31 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r8 ) 0 5 ) (Union (Union (Eventually (Hold 3 r5 ) 0 7 ) (Eventually (Hold 3 r11 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r5': 1, 'r11': 8, 'r8': 2, 'r17': 4}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r8', 'weight': 0, 'label': u'r8'}), (1, 0, {'input': set([0, 1, 4, 5, 8, 9, 12, 13]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': u'r8', 'weight': 0, 'label': u'r8'}), (2, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (2, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (2, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (2, 50, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (2, 52, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (2, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (2, 4, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (3, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))'}), (3, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (3, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (4, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (4, 39, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (4, 8, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (4, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (4, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (4, 62, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (5, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (5, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (5, 15, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (5, 18, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (5, 52, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (5, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (5, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (6, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (6, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (7, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (7, 57, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (7, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (7, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 64, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (8, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (8, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (8, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (8, 11, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (8, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (8, 20, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (9, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (9, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (9, 47, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (9, 17, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (9, 53, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (9, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 33, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (10, 34, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (10, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (10, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (10, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (10, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (10, 60, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (11, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (11, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (11, 10, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (11, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (12, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))'}), (12, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (13, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r5) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r5) & ((else))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r5) & (r11)) | (((else)) & (r11))) & ((else))) | ((((r5) & ((else))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & (r17))))'}), (13, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))'}), (14, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (14, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (14, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (15, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (15, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (15, 14, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (15, 22, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (15, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (15, 27, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (16, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (16, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (16, 40, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (16, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (16, 57, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (16, 25, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (16, 61, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (17, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (17, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (17, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (17, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (18, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (18, 42, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (18, 20, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (18, 22, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (18, 62, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (19, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r5) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r5) & (r11))) & (r17))))'}), (19, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (20, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))'}), (20, 16, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (20, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (20, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (21, 33, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (21, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (21, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (22, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))'}), (22, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (22, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (22, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (23, 34, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (23, 4, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (23, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (23, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (23, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (23, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (23, 57, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (24, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (24, 53, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (24, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (25, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (25, 17, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (25, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (25, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (26, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))'}), (26, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (27, 12, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (27, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (27, 57, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (27, 26, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (27, 30, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (28, 33, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (28, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (28, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (28, 17, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (28, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (28, 56, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (28, 26, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (29, 33, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (29, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (29, 8, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (29, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (29, 40, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (29, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (29, 59, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (30, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (30, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (30, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (30, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (31, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & ((else))) & (r17))))'}), (31, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (31, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (31, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (33, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (33, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (33, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (33, 31, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (34, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))'}), (34, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (34, 61, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (35, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (35, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (35, 16, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (35, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (35, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (35, 31, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (35, 63, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (36, 66, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (36, 8, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (36, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (36, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (36, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (36, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (36, 27, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (37, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | ((((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r5) & ((else))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | ((((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r5) & ((else))) & (r17))))'}), (37, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (37, 34, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (37, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (38, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & (r11)) & (r17))))'}), (38, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (38, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (38, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (39, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (39, 7, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (39, 43, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (39, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (39, 51, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (39, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (40, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (40, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (40, 30, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (40, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (41, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (41, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (41, 11, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (41, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (41, 50, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (41, 24, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (41, 30, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (42, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r5) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((r5) & ((else))) & (r17))))'}), (42, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (42, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (42, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))'}), (43, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (43, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (44, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (44, 40, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (44, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (44, 19, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (44, 22, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (44, 58, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (45, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (45, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (45, 50, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (45, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (46, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (46, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((r5) & (r11))) & (r17)) | ((((r5) & ((else))) | ((r5) & (r11))) & ((else)))'}), (47, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (47, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (47, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (48, 32, {'input': set([1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else))) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else))) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)))'}), (48, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))'}), (49, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (49, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (50, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (50, 44, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (50, 16, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (50, 18, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (50, 53, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (50, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (50, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (51, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))'}), (51, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (52, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (52, 10, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (52, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (52, 27, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (52, 28, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (52, 61, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (53, 34, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (53, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (53, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (53, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (53, 19, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (53, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (53, 31, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (54, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (54, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (54, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (54, 50, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (54, 9, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (54, 61, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (54, 62, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (55, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (55, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (55, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (55, 52, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (55, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (55, 20, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (55, 31, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (56, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))', 'weight': 0, 'label': '((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & (r17)) | ((((r5) & ((else))) | ((((else)) & (r11)) | ((r5) & (r11)))) & ((else)))'}), (56, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (57, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (57, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (57, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (57, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (58, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r5) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | ((((((else)) & (r11)) | ((r5) & (r11))) & ((else))) | (((((else)) & (r11)) | ((r5) & (r11))) & (r17))))'}), (58, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (59, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r11)) | ((r5) & (r11))) & (r17)) | (((((else)) & (r11)) | ((r5) & (r11))) & ((else)))'}), (59, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (59, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (59, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))', 'weight': 0, 'label': '((((r5) & (r11)) | (((else)) & (r11))) & (r17)) | ((((r5) & (r11)) | (((else)) & (r11))) & ((else)))'}), (60, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 22, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (61, 65, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (61, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (61, 11, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (61, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (61, 46, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (61, 17, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (61, 55, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 7, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (62, 10, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (62, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (62, 21, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (62, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (62, 30, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (63, 40, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (63, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r11)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r5) & ((else))) & (r17)) | (((r5) & (r11)) & (r17))))'}), (63, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (63, 41, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r11)) & (r17)) | (((((r5) & ((else))) | ((r5) & (r11))) & ((else))) | ((((r5) & ((else))) | ((r5) & (r11))) & (r17))))'}), (64, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (65, 5, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (65, 10, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (65, 16, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'}), (65, 54, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (65, 23, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (65, 29, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (66, 2, {'input': set([0, 2]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([8, 10]), 'guard': '(((else)) & (r11)) & ((else))', 'weight': 0, 'label': '(((else)) & (r11)) & ((else))'}), (66, 38, {'input': set([4, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (66, 43, {'input': set([5, 7]), 'guard': '((r5) & ((else))) & (r17)', 'weight': 0, 'label': '((r5) & ((else))) & (r17)'}), (66, 45, {'input': set([1, 3]), 'guard': '((r5) & ((else))) & ((else))', 'weight': 0, 'label': '((r5) & ((else))) & ((else))'}), (66, 48, {'input': set([13, 15]), 'guard': '((r5) & (r11)) & (r17)', 'weight': 0, 'label': '((r5) & (r11)) & (r17)'}), (66, 19, {'input': set([12, 14]), 'guard': '(((else)) & (r11)) & (r17)', 'weight': 0, 'label': '(((else)) & (r11)) & (r17)'}), (66, 26, {'input': set([9, 11]), 'guard': '((r5) & (r11)) & ((else))', 'weight': 0, 'label': '((r5) & (r11)) & ((else))'})]
		
11/17/2020 10:42:31 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     6 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     12 -> both=set([]) left=set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
     14 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     19 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
     20 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     25 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     33 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     38 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     40 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     43 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 6, 14])
     45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     48 -> both=set([5, 7, 12, 13, 14, 15]) left=set([1, 3, 8, 9, 10, 11]) right=set([4, 6])
     49 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     51 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([12, 4, 14, 6])
     56 -> both=set([]) left=set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     58 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
     59 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     64 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 6, 14])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       12 -> both=set([9, 11, 13, 15]) left=set([1, 3, 5, 7]) right=set([8, 10, 12, 14])
       13 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       26 -> both=set([9, 11, 13, 15]) left=set([1, 3, 5, 7]) right=set([8, 10, 12, 14])
       30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       43 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       48 -> both=set([9, 11, 13, 15]) left=set([1, 3, 5, 7]) right=set([8, 10, 12, 14])
       49 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       51 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       56 -> both=set([9, 11, 13, 15]) left=set([1, 3, 5, 7]) right=set([8, 10, 12, 14])
       57 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
       64 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:42:31 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:42:31 PM DEBUG [spec] No of edges: 384
11/17/2020 10:42:31 PM DEBUG 
End of translate


11/17/2020 10:42:31 PM INFO The bound of formula "[H^1 r8]^[0, 5] * ([H^3 r5]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" is (5, 13)!
11/17/2020 10:42:31 PM INFO Translated formula "[H^1 r8]^[0, 5] * ([H^3 r5]^[0, 7] | [H^3 r11]^[0, 7] | [H^3 r17]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:42:31 PM DEBUG 

Start policy computation

11/17/2020 10:42:31 PM DEBUG [extend_ts] TS: (15, 81) ETS:(15, 81)
11/17/2020 10:42:31 PM DEBUG [extend_ts] TS: (15, 81) ETS:(15, 81)
11/17/2020 10:42:31 PM DEBUG [extend_ts] TS: (15, 81) ETS:(15, 81)
11/17/2020 10:42:31 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:42:31 PM INFO Product automaton size is: (51, 256)
11/17/2020 10:42:31 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:42:31 PM INFO Product automaton size is: (51, 256)
11/17/2020 10:42:31 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:42:31 PM INFO Product automaton size is: (51, 256)
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:31 PM DEBUG []
11/17/2020 10:42:49 PM INFO Max deadline: 1
11/17/2020 10:42:49 PM INFO Generated control policy is: Base1 -> 1 -> r7 -> 1 -> r7 -> 1 -> r8 -> 1 -> r9 -> 1 -> r10 -> 1 -> r5 -> 1 -> r5 -> 1 -> r5 -> 1 -> r5
11/17/2020 10:42:49 PM INFO Max deadline: 0
11/17/2020 10:42:49 PM INFO Generated control policy is: Base2 -> 1 -> r7 -> 1 -> r8 -> 1 -> r8 -> 1 -> r9 -> 1 -> r10 -> 1 -> r5 -> 1 -> r5 -> 1 -> r5 -> 1 -> r5
11/17/2020 10:42:49 PM INFO Max deadline: 1
11/17/2020 10:42:49 PM INFO Generated control policy is: Base3 -> 1 -> r8 -> 1 -> r8 -> 1 -> r9 -> 1 -> r10 -> 1 -> r5 -> 1 -> r5 -> 1 -> r5 -> 1 -> r5
11/17/2020 10:55:10 PM DEBUG [hold] Prop: r11 Duration: 1 Negation: False Props: set(['r6', 'r7', 'r0', 'r11'])
11/17/2020 10:55:10 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r11 )
11/17/2020 10:55:10 PM DEBUG [hold] Prop: r6 Duration: 3 Negation: False Props: set(['r6', 'r7', 'r0', 'r11'])
11/17/2020 10:55:10 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r6 )
11/17/2020 10:55:10 PM DEBUG [hold] Prop: r7 Duration: 3 Negation: False Props: set(['r6', 'r7', 'r0', 'r11'])
11/17/2020 10:55:10 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r7 )
11/17/2020 10:55:10 PM INFO No trap states were added.
11/17/2020 10:55:10 PM INFO No trap states were added.
11/17/2020 10:55:10 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:55:10 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:55:10 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:55:10 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:55:10 PM DEBUG [union] DFA1: (Eventually (Hold 3 r6 ) 0 7 ) DFA2: (Eventually (Hold 3 r7 ) 0 7 )
11/17/2020 10:55:10 PM DEBUG [hold] Prop: r0 Duration: 3 Negation: False Props: set(['r6', 'r7', 'r0', 'r11'])
11/17/2020 10:55:10 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r0 )
11/17/2020 10:55:10 PM INFO No trap states were added.
11/17/2020 10:55:10 PM INFO No trap states were added.
11/17/2020 10:55:10 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r6 ) 0 7 ) (Eventually (Hold 3 r7 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r0 ) 0 7 )
11/17/2020 10:55:10 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r11 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r6 ) 0 7 ) (Eventually (Hold 3 r7 ) 0 7 ) ) (Eventually (Hold 3 r0 ) 0 7 ) )
11/17/2020 10:55:10 PM DEBUG [spec] spec: [H^1 r11]^[0, 5] * ([H^3 r6]^[0, 7] | [H^3 r7]^[0, 7] | [H^3 r0]^[0, 7])
11/17/2020 10:55:10 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r11 ) 0 5 ) (Union (Union (Eventually (Hold 3 r6 ) 0 7 ) (Eventually (Hold 3 r7 ) 0 7 ) ) (Eventually (Hold 3 r0 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r6': 1, 'r7': 2, 'r0': 4, 'r11': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r11', 'weight': 0, 'label': u'r11'}), (1, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r11', 'weight': 0, 'label': u'r11'}), (2, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (2, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (2, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (2, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (2, 52, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (2, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (2, 4, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (3, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))'}), (3, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (3, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (4, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (4, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (4, 39, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (4, 8, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (4, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (4, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (4, 62, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (5, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (5, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (5, 15, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (5, 18, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (5, 52, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (5, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (5, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (6, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (6, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (6, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (6, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (7, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (7, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (7, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (7, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (8, 64, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (8, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (8, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (8, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (8, 11, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (8, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (8, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (9, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (9, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (9, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (9, 47, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (9, 17, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (9, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (9, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (10, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (10, 34, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (10, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (10, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (10, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (10, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (10, 60, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (11, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (11, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (11, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (11, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (12, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))'}), (12, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (13, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | (((((r6) & (r7)) | (((else)) & (r7))) & ((else))) | ((((r6) & ((else))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | (((((r6) & (r7)) | (((else)) & (r7))) & ((else))) | ((((r6) & ((else))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & (r0))))'}), (13, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))'}), (14, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (14, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (14, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (15, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (15, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (15, 14, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (15, 22, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (15, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (15, 27, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (16, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (16, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (16, 40, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (16, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (16, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (16, 25, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (16, 61, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (17, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (17, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (17, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (17, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (18, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (18, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (18, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (18, 42, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (18, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (18, 22, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (18, 62, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (19, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | ((((((else)) & (r7)) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) | ((r6) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | ((((((else)) & (r7)) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) | ((r6) & (r7))) & (r0))))'}), (19, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (20, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))'}), (20, 16, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (20, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (20, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (21, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (21, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (21, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (21, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (22, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))'}), (22, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (22, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (22, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (23, 34, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (23, 4, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (23, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (23, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (23, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (23, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (23, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (24, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (24, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (24, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (24, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (25, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (25, 17, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (25, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (25, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (26, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))'}), (26, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (27, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (27, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (27, 12, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (27, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (27, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (27, 26, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (27, 30, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (28, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (28, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (28, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (28, 17, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (28, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (28, 56, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (28, 26, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (29, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (29, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (29, 8, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (29, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (29, 40, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (29, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (29, 59, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (30, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (30, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (30, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (30, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (31, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & ((else))) & (r0))))', 'weight': 0, 'label': '(((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & ((else))) & (r0))))'}), (31, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (31, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (31, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (33, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (33, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (33, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (33, 31, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (34, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))'}), (34, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (34, 61, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (35, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (35, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (35, 16, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (35, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (35, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (35, 31, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (35, 63, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (36, 66, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (36, 8, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (36, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (36, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (36, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (36, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (36, 27, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (37, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r7)) & (r0)) | ((((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((r6) & ((else))) & (r0))))', 'weight': 0, 'label': '((((else)) & (r7)) & (r0)) | ((((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((r6) & ((else))) & (r0))))'}), (37, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (37, 34, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (37, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (38, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))'}), (38, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (38, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (38, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (39, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (39, 7, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (39, 43, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (39, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (39, 51, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (39, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (40, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (40, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (40, 30, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (40, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (41, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (41, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (41, 11, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (41, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (41, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (41, 24, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (41, 30, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (42, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & ((else))) & (r0))))', 'weight': 0, 'label': '(((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & ((else))) & (r0))))'}), (42, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (42, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (42, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (43, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))'}), (43, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (43, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (44, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (44, 40, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (44, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (44, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (44, 22, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (44, 58, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (45, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (45, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (45, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (45, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (46, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (46, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (46, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (46, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (47, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (47, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (47, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (47, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (48, 32, {'input': set([1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else))) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else))) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)))'}), (48, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))'}), (49, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (49, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (50, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (50, 44, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (50, 16, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (50, 18, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (50, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (50, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (50, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (51, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))'}), (51, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (52, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (52, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (52, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (52, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (52, 27, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (52, 28, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (52, 61, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (53, 34, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (53, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (53, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (53, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (53, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (53, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (53, 31, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (54, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (54, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (54, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (54, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (54, 9, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (54, 61, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (54, 62, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (55, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (55, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (55, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (55, 52, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (55, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (55, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (55, 31, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (56, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))'}), (56, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (57, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (57, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (57, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (57, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (58, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | ((((((else)) & (r7)) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) | ((r6) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | ((((((else)) & (r7)) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) | ((r6) & (r7))) & (r0))))'}), (58, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (59, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (59, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (59, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (59, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (60, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))'}), (60, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (60, 22, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (61, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (61, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (61, 11, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (61, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (61, 46, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (61, 17, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (61, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (62, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (62, 7, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (62, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (62, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (62, 21, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (62, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (62, 30, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (63, 40, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (63, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))'}), (63, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (63, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))'}), (64, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (65, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (65, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (65, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (65, 16, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (65, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (65, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (65, 29, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (66, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (66, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (66, 43, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (66, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (66, 48, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (66, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (66, 26, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'})]
		
11/17/2020 10:55:10 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     6 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     12 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     13 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     14 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     19 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     20 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     25 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     26 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     33 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     34 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     38 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     40 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     43 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 14, 6])
     45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     48 -> both=set([5, 6, 7, 13, 14, 15]) left=set([1, 2, 3, 9, 10, 11]) right=set([4, 12])
     49 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     51 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 14, 6])
     56 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     58 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     59 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     60 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     64 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 14, 6])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       12 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       13 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       26 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       34 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       40 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       43 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       48 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       49 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       51 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       56 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       57 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       58 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       59 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       60 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       64 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:55:10 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:55:10 PM DEBUG [spec] No of edges: 384
11/17/2020 10:55:10 PM DEBUG 
End of translate


11/17/2020 10:55:10 PM INFO The bound of formula "[H^1 r11]^[0, 5] * ([H^3 r6]^[0, 7] | [H^3 r7]^[0, 7] | [H^3 r0]^[0, 7])" is (5, 13)!
11/17/2020 10:55:10 PM INFO Translated formula "[H^1 r11]^[0, 5] * ([H^3 r6]^[0, 7] | [H^3 r7]^[0, 7] | [H^3 r0]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:55:10 PM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r6', 'r7', 'r0', 'r10'])
11/17/2020 10:55:10 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r10 )
11/17/2020 10:55:10 PM DEBUG [hold] Prop: r6 Duration: 3 Negation: False Props: set(['r6', 'r7', 'r0', 'r10'])
11/17/2020 10:55:10 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r6 )
11/17/2020 10:55:10 PM DEBUG [hold] Prop: r7 Duration: 3 Negation: False Props: set(['r6', 'r7', 'r0', 'r10'])
11/17/2020 10:55:10 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r7 )
11/17/2020 10:55:10 PM INFO No trap states were added.
11/17/2020 10:55:10 PM INFO No trap states were added.
11/17/2020 10:55:10 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:55:10 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:55:10 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:55:10 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:55:10 PM DEBUG [union] DFA1: (Eventually (Hold 3 r6 ) 0 7 ) DFA2: (Eventually (Hold 3 r7 ) 0 7 )
11/17/2020 10:55:10 PM DEBUG [hold] Prop: r0 Duration: 3 Negation: False Props: set(['r6', 'r7', 'r0', 'r10'])
11/17/2020 10:55:10 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r0 )
11/17/2020 10:55:10 PM INFO No trap states were added.
11/17/2020 10:55:10 PM INFO No trap states were added.
11/17/2020 10:55:10 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r6 ) 0 7 ) (Eventually (Hold 3 r7 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r0 ) 0 7 )
11/17/2020 10:55:10 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r10 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r6 ) 0 7 ) (Eventually (Hold 3 r7 ) 0 7 ) ) (Eventually (Hold 3 r0 ) 0 7 ) )
11/17/2020 10:55:10 PM DEBUG [spec] spec: [H^1 r10]^[0, 5] * ([H^3 r6]^[0, 7] | [H^3 r7]^[0, 7] | [H^3 r0]^[0, 7])
11/17/2020 10:55:10 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r10 ) 0 5 ) (Union (Union (Eventually (Hold 3 r6 ) 0 7 ) (Eventually (Hold 3 r7 ) 0 7 ) ) (Eventually (Hold 3 r0 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r6': 1, 'r7': 2, 'r0': 4, 'r10': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (1, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (2, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (2, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (2, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (2, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (2, 52, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (2, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (2, 4, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (3, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))'}), (3, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (3, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (4, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (4, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (4, 39, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (4, 8, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (4, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (4, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (4, 62, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (5, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (5, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (5, 15, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (5, 18, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (5, 52, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (5, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (5, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (6, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (6, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (6, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (6, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (7, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (7, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (7, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (7, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (8, 64, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (8, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (8, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (8, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (8, 11, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (8, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (8, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (9, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (9, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (9, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (9, 47, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (9, 17, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (9, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (9, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (10, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (10, 34, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (10, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (10, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (10, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (10, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (10, 60, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (11, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (11, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (11, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (11, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (12, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))'}), (12, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (13, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | (((((r6) & (r7)) | (((else)) & (r7))) & ((else))) | ((((r6) & ((else))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | (((((r6) & (r7)) | (((else)) & (r7))) & ((else))) | ((((r6) & ((else))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & (r0))))'}), (13, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))'}), (14, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (14, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (14, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (15, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (15, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (15, 14, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (15, 22, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (15, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (15, 27, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (16, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (16, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (16, 40, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (16, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (16, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (16, 25, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (16, 61, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (17, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (17, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (17, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (17, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (18, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (18, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (18, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (18, 42, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (18, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (18, 22, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (18, 62, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (19, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | ((((((else)) & (r7)) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) | ((r6) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | ((((((else)) & (r7)) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) | ((r6) & (r7))) & (r0))))'}), (19, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (20, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))'}), (20, 16, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (20, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (20, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (21, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (21, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (21, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (21, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (22, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))'}), (22, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (22, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (22, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (23, 34, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (23, 4, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (23, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (23, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (23, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (23, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (23, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (24, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (24, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (24, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (24, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (25, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (25, 17, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (25, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (25, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (26, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))'}), (26, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (27, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (27, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (27, 12, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (27, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (27, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (27, 26, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (27, 30, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (28, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (28, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (28, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (28, 17, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (28, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (28, 56, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (28, 26, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (29, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (29, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (29, 8, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (29, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (29, 40, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (29, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (29, 59, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (30, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (30, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (30, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (30, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (31, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & ((else))) & (r0))))', 'weight': 0, 'label': '(((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & ((else))) & (r0))))'}), (31, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (31, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (31, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (33, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (33, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (33, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (33, 31, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (34, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))'}), (34, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (34, 61, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (35, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (35, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (35, 16, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (35, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (35, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (35, 31, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (35, 63, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (36, 66, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (36, 8, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (36, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (36, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (36, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (36, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (36, 27, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (37, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r7)) & (r0)) | ((((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((r6) & ((else))) & (r0))))', 'weight': 0, 'label': '((((else)) & (r7)) & (r0)) | ((((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((r6) & ((else))) & (r0))))'}), (37, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (37, 34, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (37, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (38, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))'}), (38, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (38, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (38, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (39, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (39, 7, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (39, 43, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (39, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (39, 51, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (39, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (40, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (40, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (40, 30, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (40, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (41, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (41, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (41, 11, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (41, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (41, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (41, 24, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (41, 30, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (42, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & ((else))) & (r0))))', 'weight': 0, 'label': '(((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & ((else))) & (r0))))'}), (42, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (42, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (42, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (43, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))'}), (43, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (43, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (44, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (44, 40, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (44, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (44, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (44, 22, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (44, 58, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (45, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (45, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (45, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (45, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (46, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (46, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (46, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (46, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (47, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (47, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (47, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (47, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (48, 32, {'input': set([1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else))) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else))) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)))'}), (48, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))'}), (49, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (49, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (50, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (50, 44, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (50, 16, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (50, 18, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (50, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (50, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (50, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (51, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))'}), (51, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (52, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (52, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (52, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (52, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (52, 27, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (52, 28, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (52, 61, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (53, 34, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (53, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (53, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (53, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (53, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (53, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (53, 31, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (54, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (54, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (54, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (54, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (54, 9, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (54, 61, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (54, 62, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (55, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (55, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (55, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (55, 52, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (55, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (55, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (55, 31, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (56, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))'}), (56, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (57, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (57, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (57, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (57, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (58, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | ((((((else)) & (r7)) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) | ((r6) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | ((((((else)) & (r7)) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) | ((r6) & (r7))) & (r0))))'}), (58, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (59, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (59, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (59, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (59, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (60, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))'}), (60, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (60, 22, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (61, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (61, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (61, 11, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (61, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (61, 46, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (61, 17, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (61, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (62, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (62, 7, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (62, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (62, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (62, 21, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (62, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (62, 30, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (63, 40, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (63, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))'}), (63, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (63, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))'}), (64, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (65, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (65, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (65, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (65, 16, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (65, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (65, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (65, 29, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (66, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (66, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (66, 43, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (66, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (66, 48, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (66, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (66, 26, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'})]
		
11/17/2020 10:55:10 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     6 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     12 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     13 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     14 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     19 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     20 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     25 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     26 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     33 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     34 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     38 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     40 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     43 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 14, 6])
     45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     48 -> both=set([5, 6, 7, 13, 14, 15]) left=set([1, 2, 3, 9, 10, 11]) right=set([4, 12])
     49 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     51 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 14, 6])
     56 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     58 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     59 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     60 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     64 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 14, 6])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       12 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       13 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       26 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       34 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       40 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       43 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       48 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       49 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       51 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       56 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       57 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       58 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       59 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       60 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       64 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:55:10 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:55:10 PM DEBUG [spec] No of edges: 384
11/17/2020 10:55:10 PM DEBUG 
End of translate


11/17/2020 10:55:10 PM INFO The bound of formula "[H^1 r10]^[0, 5] * ([H^3 r6]^[0, 7] | [H^3 r7]^[0, 7] | [H^3 r0]^[0, 7])" is (5, 13)!
11/17/2020 10:55:10 PM INFO Translated formula "[H^1 r10]^[0, 5] * ([H^3 r6]^[0, 7] | [H^3 r7]^[0, 7] | [H^3 r0]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:55:10 PM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r6', 'r7', 'r0', 'r10'])
11/17/2020 10:55:10 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r10 )
11/17/2020 10:55:10 PM DEBUG [hold] Prop: r6 Duration: 3 Negation: False Props: set(['r6', 'r7', 'r0', 'r10'])
11/17/2020 10:55:10 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r6 )
11/17/2020 10:55:10 PM DEBUG [hold] Prop: r7 Duration: 3 Negation: False Props: set(['r6', 'r7', 'r0', 'r10'])
11/17/2020 10:55:10 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r7 )
11/17/2020 10:55:10 PM INFO No trap states were added.
11/17/2020 10:55:10 PM INFO No trap states were added.
11/17/2020 10:55:10 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:55:10 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:55:10 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:55:10 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:55:10 PM DEBUG [union] DFA1: (Eventually (Hold 3 r6 ) 0 7 ) DFA2: (Eventually (Hold 3 r7 ) 0 7 )
11/17/2020 10:55:10 PM DEBUG [hold] Prop: r0 Duration: 3 Negation: False Props: set(['r6', 'r7', 'r0', 'r10'])
11/17/2020 10:55:10 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r0 )
11/17/2020 10:55:10 PM INFO No trap states were added.
11/17/2020 10:55:10 PM INFO No trap states were added.
11/17/2020 10:55:10 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:55:10 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r6 ) 0 7 ) (Eventually (Hold 3 r7 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r0 ) 0 7 )
11/17/2020 10:55:10 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r10 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r6 ) 0 7 ) (Eventually (Hold 3 r7 ) 0 7 ) ) (Eventually (Hold 3 r0 ) 0 7 ) )
11/17/2020 10:55:10 PM DEBUG [spec] spec: [H^1 r10]^[0, 5] * ([H^3 r6]^[0, 7] | [H^3 r7]^[0, 7] | [H^3 r0]^[0, 7])
11/17/2020 10:55:10 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r10 ) 0 5 ) (Union (Union (Eventually (Hold 3 r6 ) 0 7 ) (Eventually (Hold 3 r7 ) 0 7 ) ) (Eventually (Hold 3 r0 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r6': 1, 'r7': 2, 'r0': 4, 'r10': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (1, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (2, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (2, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (2, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (2, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (2, 52, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (2, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (2, 4, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (3, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))'}), (3, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (3, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (4, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (4, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (4, 39, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (4, 8, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (4, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (4, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (4, 62, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (5, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (5, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (5, 15, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (5, 18, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (5, 52, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (5, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (5, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (6, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (6, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (6, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (6, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (7, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (7, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (7, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (7, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (8, 64, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (8, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (8, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (8, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (8, 11, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (8, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (8, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (9, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (9, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (9, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (9, 47, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (9, 17, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (9, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (9, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (10, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (10, 34, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (10, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (10, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (10, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (10, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (10, 60, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (11, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (11, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (11, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (11, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (12, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))'}), (12, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (13, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | (((((r6) & (r7)) | (((else)) & (r7))) & ((else))) | ((((r6) & ((else))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | (((((r6) & (r7)) | (((else)) & (r7))) & ((else))) | ((((r6) & ((else))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & (r0))))'}), (13, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))'}), (14, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (14, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (14, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (15, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (15, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (15, 14, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (15, 22, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (15, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (15, 27, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (16, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (16, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (16, 40, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (16, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (16, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (16, 25, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (16, 61, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (17, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (17, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (17, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (17, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (18, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (18, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (18, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (18, 42, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (18, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (18, 22, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (18, 62, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (19, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | ((((((else)) & (r7)) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) | ((r6) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | ((((((else)) & (r7)) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) | ((r6) & (r7))) & (r0))))'}), (19, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (20, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))'}), (20, 16, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (20, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (20, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (21, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (21, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (21, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (21, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (22, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))'}), (22, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (22, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (22, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (23, 34, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (23, 4, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (23, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (23, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (23, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (23, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (23, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (24, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (24, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (24, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (24, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (25, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (25, 17, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (25, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (25, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (26, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))'}), (26, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (27, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (27, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (27, 12, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (27, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (27, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (27, 26, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (27, 30, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (28, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (28, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (28, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (28, 17, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (28, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (28, 56, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (28, 26, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (29, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (29, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (29, 8, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (29, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (29, 40, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (29, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (29, 59, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (30, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (30, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (30, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (30, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (31, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & ((else))) & (r0))))', 'weight': 0, 'label': '(((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & ((else))) & (r0))))'}), (31, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (31, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (31, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (33, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (33, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (33, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (33, 31, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (34, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))'}), (34, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (34, 61, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (35, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (35, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (35, 16, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (35, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (35, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (35, 31, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (35, 63, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (36, 66, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (36, 8, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (36, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (36, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (36, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (36, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (36, 27, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (37, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r7)) & (r0)) | ((((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((r6) & ((else))) & (r0))))', 'weight': 0, 'label': '((((else)) & (r7)) & (r0)) | ((((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((r6) & ((else))) & (r0))))'}), (37, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (37, 34, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (37, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (38, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & (r7)) & (r0))))'}), (38, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (38, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (38, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (39, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (39, 7, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (39, 43, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (39, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (39, 51, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (39, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (40, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (40, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (40, 30, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (40, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (41, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (41, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (41, 11, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (41, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (41, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (41, 24, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (41, 30, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (42, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & ((else))) & (r0))))', 'weight': 0, 'label': '(((r6) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((r6) & ((else))) & (r0))))'}), (42, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (42, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (42, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (43, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))'}), (43, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (43, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (44, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (44, 40, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (44, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (44, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (44, 22, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (44, 58, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (45, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (45, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (45, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (45, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (46, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (46, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (46, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (46, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (47, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((r6) & (r7))) & (r0)) | ((((r6) & ((else))) | ((r6) & (r7))) & ((else)))'}), (47, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (47, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (47, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (48, 32, {'input': set([1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else))) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else))) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)))'}), (48, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))'}), (49, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (49, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (50, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (50, 44, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (50, 16, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (50, 18, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (50, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (50, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (50, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (51, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))'}), (51, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (52, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (52, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (52, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (52, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (52, 27, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (52, 28, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (52, 61, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (53, 34, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (53, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (53, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (53, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (53, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (53, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (53, 31, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (54, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (54, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (54, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (54, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (54, 9, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (54, 61, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (54, 62, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (55, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (55, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (55, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (55, 52, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (55, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (55, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (55, 31, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (56, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))', 'weight': 0, 'label': '((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & (r0)) | ((((r6) & ((else))) | ((((else)) & (r7)) | ((r6) & (r7)))) & ((else)))'}), (56, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (57, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (57, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (57, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (57, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (58, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | ((((((else)) & (r7)) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) | ((r6) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | ((((((else)) & (r7)) | ((r6) & (r7))) & ((else))) | (((((else)) & (r7)) | ((r6) & (r7))) & (r0))))'}), (58, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (59, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r7)) | ((r6) & (r7))) & (r0)) | (((((else)) & (r7)) | ((r6) & (r7))) & ((else)))'}), (59, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (59, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (59, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (60, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))', 'weight': 0, 'label': '((((r6) & (r7)) | (((else)) & (r7))) & (r0)) | ((((r6) & (r7)) | (((else)) & (r7))) & ((else)))'}), (60, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (60, 22, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (61, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (61, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (61, 11, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (61, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (61, 46, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (61, 17, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (61, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (62, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (62, 7, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (62, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (62, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (62, 21, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (62, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (62, 30, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (63, 40, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (63, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))', 'weight': 0, 'label': '((((else)) & (r7)) & (r0)) | (((((else)) & ((else))) & (r0)) | ((((r6) & ((else))) & (r0)) | (((r6) & (r7)) & (r0))))'}), (63, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (63, 41, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r0)) | (((((else)) & (r7)) & (r0)) | (((((r6) & ((else))) | ((r6) & (r7))) & ((else))) | ((((r6) & ((else))) | ((r6) & (r7))) & (r0))))'}), (64, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (65, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (65, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (65, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (65, 16, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'}), (65, 54, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (65, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (65, 29, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (66, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r7)) & ((else))', 'weight': 0, 'label': '(((else)) & (r7)) & ((else))'}), (66, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r0)', 'weight': 0, 'label': '(((else)) & ((else))) & (r0)'}), (66, 43, {'input': set([13, 5]), 'guard': '((r6) & ((else))) & (r0)', 'weight': 0, 'label': '((r6) & ((else))) & (r0)'}), (66, 45, {'input': set([1, 9]), 'guard': '((r6) & ((else))) & ((else))', 'weight': 0, 'label': '((r6) & ((else))) & ((else))'}), (66, 48, {'input': set([7, 15]), 'guard': '((r6) & (r7)) & (r0)', 'weight': 0, 'label': '((r6) & (r7)) & (r0)'}), (66, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r7)) & (r0)', 'weight': 0, 'label': '(((else)) & (r7)) & (r0)'}), (66, 26, {'input': set([3, 11]), 'guard': '((r6) & (r7)) & ((else))', 'weight': 0, 'label': '((r6) & (r7)) & ((else))'})]
		
11/17/2020 10:55:10 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     6 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     12 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     13 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     14 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     19 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     20 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     25 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     26 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     33 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     34 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     38 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     40 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     43 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 14, 6])
     45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     48 -> both=set([5, 6, 7, 13, 14, 15]) left=set([1, 2, 3, 9, 10, 11]) right=set([4, 12])
     49 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     51 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 14, 6])
     56 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     58 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     59 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     60 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     64 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 14, 6])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       12 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       13 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       26 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       34 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       40 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       43 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       48 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       49 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       51 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       56 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       57 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       58 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       59 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       60 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       64 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:55:10 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:55:10 PM DEBUG [spec] No of edges: 384
11/17/2020 10:55:10 PM DEBUG 
End of translate


11/17/2020 10:55:10 PM INFO The bound of formula "[H^1 r10]^[0, 5] * ([H^3 r6]^[0, 7] | [H^3 r7]^[0, 7] | [H^3 r0]^[0, 7])" is (5, 13)!
11/17/2020 10:55:10 PM INFO Translated formula "[H^1 r10]^[0, 5] * ([H^3 r6]^[0, 7] | [H^3 r7]^[0, 7] | [H^3 r0]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:55:10 PM DEBUG 

Start policy computation

11/17/2020 10:55:10 PM DEBUG [extend_ts] TS: (15, 75) ETS:(15, 75)
11/17/2020 10:55:10 PM DEBUG [extend_ts] TS: (15, 75) ETS:(15, 75)
11/17/2020 10:55:10 PM DEBUG [extend_ts] TS: (15, 75) ETS:(15, 75)
11/17/2020 10:55:10 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:55:10 PM INFO Product automaton size is: (51, 249)
11/17/2020 10:55:10 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:55:10 PM INFO Product automaton size is: (51, 249)
11/17/2020 10:55:10 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:55:10 PM INFO Product automaton size is: (51, 249)
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:10 PM DEBUG []
11/17/2020 10:55:29 PM INFO Max deadline: 2
11/17/2020 10:55:29 PM INFO Generated control policy is: Base1 -> 1 -> r11 -> 1 -> r11 -> 1 -> Base1 -> 1 -> r15 -> 1 -> r8 -> 1 -> r7 -> 1 -> r7 -> 1 -> r7 -> 1 -> r7
11/17/2020 10:55:29 PM INFO Max deadline: 2
11/17/2020 10:55:29 PM INFO Generated control policy is: Base2 -> 1 -> r10 -> 1 -> r10 -> 1 -> r15 -> 1 -> r8 -> 1 -> r7 -> 1 -> r7 -> 1 -> r7 -> 1 -> r7
11/17/2020 10:55:29 PM INFO Max deadline: 2
11/17/2020 10:55:29 PM INFO Generated control policy is: Base3 -> 1 -> r10 -> 1 -> r10 -> 1 -> r15 -> 1 -> r8 -> 1 -> r7 -> 1 -> r7 -> 1 -> r7 -> 1 -> r7
11/17/2020 10:57:37 PM DEBUG [hold] Prop: r6 Duration: 1 Negation: False Props: set(['r16', 'r17', 'r6', 'r15'])
11/17/2020 10:57:37 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r6 )
11/17/2020 10:57:37 PM DEBUG [hold] Prop: r15 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r6', 'r15'])
11/17/2020 10:57:37 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r15 )
11/17/2020 10:57:37 PM DEBUG [hold] Prop: r16 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r6', 'r15'])
11/17/2020 10:57:37 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r16 )
11/17/2020 10:57:37 PM INFO No trap states were added.
11/17/2020 10:57:37 PM INFO No trap states were added.
11/17/2020 10:57:37 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:57:37 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:57:37 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:57:37 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:57:37 PM DEBUG [union] DFA1: (Eventually (Hold 3 r15 ) 0 7 ) DFA2: (Eventually (Hold 3 r16 ) 0 7 )
11/17/2020 10:57:37 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r6', 'r15'])
11/17/2020 10:57:37 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 10:57:37 PM INFO No trap states were added.
11/17/2020 10:57:37 PM INFO No trap states were added.
11/17/2020 10:57:37 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 10:57:37 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r6 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) )
11/17/2020 10:57:37 PM DEBUG [spec] spec: [H^1 r6]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])
11/17/2020 10:57:37 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r6 ) 0 5 ) (Union (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r16': 1, 'r17': 2, 'r6': 4, 'r15': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 8, 9, 10, 11]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': u'r6', 'weight': 0, 'label': u'r6'}), (1, 0, {'input': set([0, 1, 2, 3, 8, 9, 10, 11]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': u'r6', 'weight': 0, 'label': u'r6'}), (2, 65, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (2, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (2, 5, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (2, 50, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (2, 52, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (2, 54, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (2, 4, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (3, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (3, 41, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (3, 23, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (4, 65, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (4, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (4, 39, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (4, 8, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (4, 41, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (4, 55, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (4, 62, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (5, 65, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (5, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (5, 15, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (5, 18, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (5, 52, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (5, 54, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (5, 55, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (6, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (6, 5, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 54, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (7, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (7, 57, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (7, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (7, 6, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (8, 64, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (8, 65, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (8, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (8, 38, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (8, 11, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (8, 45, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (8, 20, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (9, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (9, 55, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (9, 45, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (9, 47, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (9, 17, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (9, 53, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (9, 23, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (10, 33, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (10, 34, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (10, 6, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (10, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (10, 54, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (10, 55, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (10, 60, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (11, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (11, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (11, 10, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (11, 5, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (12, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (12, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (13, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & (r16)) | (((else)) & (r16))) & ((else))) | ((((r15) & ((else))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & (r16)) | (((else)) & (r16))) & ((else))) | ((((r15) & ((else))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & (r17))))'}), (13, 41, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (14, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (14, 6, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (14, 45, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (15, 38, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (15, 41, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (15, 14, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (15, 22, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (15, 23, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (15, 27, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (16, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (16, 6, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (16, 40, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (16, 41, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (16, 57, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (16, 25, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (16, 61, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (17, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (17, 65, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (17, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (17, 38, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 65, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (18, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 41, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (18, 42, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (18, 20, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (18, 22, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (18, 62, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (19, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))'}), (19, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (20, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (20, 16, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (20, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (20, 23, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (21, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (21, 33, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (21, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (21, 55, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (22, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (22, 65, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (22, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (22, 45, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (23, 34, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (23, 4, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (23, 5, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (23, 6, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (23, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (23, 54, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (23, 57, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (24, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (24, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (24, 53, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (24, 23, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (25, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (25, 17, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (25, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (25, 55, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (26, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (26, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 6, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (27, 12, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (27, 45, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (27, 57, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (27, 26, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (27, 30, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (28, 33, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (28, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (28, 45, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (28, 17, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (28, 55, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (28, 56, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (28, 26, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (29, 33, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (29, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (29, 8, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (29, 41, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (29, 40, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (29, 55, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (29, 59, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (30, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (30, 65, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (30, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (30, 55, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (31, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))'}), (31, 65, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (31, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (31, 41, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (33, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (33, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (33, 54, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (33, 31, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (34, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (34, 41, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (34, 61, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (35, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (35, 38, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (35, 16, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (35, 54, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (35, 23, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (35, 31, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (35, 63, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (36, 66, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (36, 8, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (36, 41, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (36, 55, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (36, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (36, 23, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (36, 27, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (37, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | ((((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | ((((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r15) & ((else))) & (r17))))'}), (37, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (37, 34, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (37, 54, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (38, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (38, 65, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (38, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (38, 54, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (39, 38, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (39, 7, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (39, 43, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (39, 45, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (39, 51, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (39, 23, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (40, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (40, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (40, 30, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (40, 45, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (41, 65, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (41, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (41, 11, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (41, 45, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (41, 50, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (41, 24, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (41, 30, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (42, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))'}), (42, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (42, 45, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (42, 23, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (43, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (43, 65, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (43, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (44, 38, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (44, 40, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (44, 41, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (44, 19, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (44, 22, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (44, 58, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (45, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (45, 65, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (45, 50, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (45, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (46, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (46, 38, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 23, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (47, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (47, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (47, 6, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (47, 38, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (48, 32, {'input': set([1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else))) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else))) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)))'}), (48, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (49, 41, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (49, 55, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (50, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (50, 44, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (50, 16, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (50, 18, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (50, 53, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (50, 54, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (50, 55, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (51, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (51, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (52, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (52, 41, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (52, 10, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (52, 23, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (52, 27, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (52, 28, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (52, 61, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (53, 34, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (53, 6, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (53, 38, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (53, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (53, 19, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (53, 54, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (53, 31, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (54, 65, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (54, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (54, 41, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (54, 50, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (54, 9, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (54, 61, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (54, 62, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (55, 65, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (55, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (55, 38, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (55, 52, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (55, 54, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (55, 20, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (55, 31, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (56, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (56, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (57, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (57, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (57, 54, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (57, 55, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (58, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))'}), (58, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (59, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (59, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (59, 45, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (59, 38, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (60, 41, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 22, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (61, 65, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (61, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (61, 11, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (61, 45, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (61, 46, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (61, 17, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (61, 55, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 7, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (62, 10, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (62, 45, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (62, 21, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (62, 23, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (62, 30, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (63, 40, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (63, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (63, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (63, 41, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (64, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (64, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (65, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (65, 5, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (65, 10, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (65, 16, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (65, 54, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (65, 23, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (65, 29, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (66, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([1, 5]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (66, 38, {'input': set([2, 6]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (66, 43, {'input': set([10, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (66, 45, {'input': set([8, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (66, 48, {'input': set([11, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (66, 19, {'input': set([3, 7]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (66, 26, {'input': set([9, 13]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'})]
		
11/17/2020 10:57:37 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     6 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     7 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([10, 6, 2, 14])
     14 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     17 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     19 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([10, 6, 2, 14])
     20 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     21 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     24 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     26 -> both=set([]) left=set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     33 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     34 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     38 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     40 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     43 -> both=set([10, 11, 14, 15]) left=set([8, 9, 12, 13]) right=set([2, 3, 6, 7])
     45 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     48 -> both=set([3, 7, 10, 11, 14, 15]) left=set([1, 5, 8, 9, 12, 13]) right=set([2, 6])
     49 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     51 -> both=set([10, 11, 14, 15]) left=set([8, 9, 12, 13]) right=set([2, 3, 6, 7])
     56 -> both=set([]) left=set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     58 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([10, 6, 2, 14])
     59 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     60 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     64 -> both=set([10, 11, 14, 15]) left=set([8, 9, 12, 13]) right=set([2, 3, 6, 7])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       7 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       12 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
       13 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       17 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       21 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       26 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
       30 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       34 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       40 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       43 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       48 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
       49 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       51 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       56 -> both=set([9, 11, 13, 15]) left=set([8, 10, 12, 14]) right=set([1, 3, 5, 7])
       57 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       58 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       59 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       60 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       64 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:57:37 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:57:37 PM DEBUG [spec] No of edges: 384
11/17/2020 10:57:37 PM DEBUG 
End of translate


11/17/2020 10:57:37 PM INFO The bound of formula "[H^1 r6]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])" is (5, 13)!
11/17/2020 10:57:37 PM INFO Translated formula "[H^1 r6]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:57:37 PM DEBUG [hold] Prop: r0 Duration: 1 Negation: False Props: set(['r16', 'r17', 'r15', 'r0'])
11/17/2020 10:57:37 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r0 )
11/17/2020 10:57:37 PM DEBUG [hold] Prop: r15 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r15', 'r0'])
11/17/2020 10:57:37 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r15 )
11/17/2020 10:57:37 PM DEBUG [hold] Prop: r16 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r15', 'r0'])
11/17/2020 10:57:37 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r16 )
11/17/2020 10:57:37 PM INFO No trap states were added.
11/17/2020 10:57:37 PM INFO No trap states were added.
11/17/2020 10:57:37 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:57:37 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:57:37 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:57:37 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:57:37 PM DEBUG [union] DFA1: (Eventually (Hold 3 r15 ) 0 7 ) DFA2: (Eventually (Hold 3 r16 ) 0 7 )
11/17/2020 10:57:37 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r15', 'r0'])
11/17/2020 10:57:37 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 10:57:37 PM INFO No trap states were added.
11/17/2020 10:57:37 PM INFO No trap states were added.
11/17/2020 10:57:37 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 10:57:37 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r0 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) )
11/17/2020 10:57:37 PM DEBUG [spec] spec: [H^1 r0]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])
11/17/2020 10:57:37 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r0 ) 0 5 ) (Union (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r16': 1, 'r17': 2, 'r15': 4, 'r0': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r0', 'weight': 0, 'label': u'r0'}), (1, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r0', 'weight': 0, 'label': u'r0'}), (2, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (2, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (2, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (2, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (2, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (2, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (2, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (3, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (3, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (3, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (4, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (4, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (4, 39, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (4, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (4, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (4, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (4, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (5, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (5, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (5, 15, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (5, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (5, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (5, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (5, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (6, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (6, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (7, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (7, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (7, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (7, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (8, 64, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (8, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (8, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (8, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (8, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (8, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (8, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (9, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (9, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (9, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (9, 47, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (9, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (9, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (9, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (10, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (10, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (10, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (10, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (10, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (10, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (10, 60, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (11, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (11, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (11, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (11, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (12, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (12, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (13, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & (r16)) | (((else)) & (r16))) & ((else))) | ((((r15) & ((else))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & (r16)) | (((else)) & (r16))) & ((else))) | ((((r15) & ((else))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & (r17))))'}), (13, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (14, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (14, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (14, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (15, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (15, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (15, 14, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (15, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (15, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (15, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (16, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (16, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (16, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (16, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (16, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (16, 25, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (16, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (17, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (17, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (17, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (17, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (18, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (18, 42, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (18, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (18, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (18, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (19, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))'}), (19, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (20, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (20, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (20, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (20, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (21, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (21, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (21, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (21, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (22, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (22, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (22, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (22, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (23, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (23, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (23, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (23, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (23, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (23, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (23, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (24, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (24, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (24, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (24, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (25, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (25, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (25, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (25, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (26, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (26, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (27, 12, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (27, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (27, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (27, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (27, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (28, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (28, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (28, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (28, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (28, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (28, 56, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (28, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (29, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (29, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (29, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (29, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (29, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (29, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (29, 59, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (30, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (30, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (30, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (30, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (31, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))'}), (31, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (31, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (31, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (33, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (33, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (33, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (33, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (34, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (34, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (34, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (35, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (35, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (35, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (35, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (35, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (35, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (35, 63, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (36, 66, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (36, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (36, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (36, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (36, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (36, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (36, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (37, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | ((((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | ((((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r15) & ((else))) & (r17))))'}), (37, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (37, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (37, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (38, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (38, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (38, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (38, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (39, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (39, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (39, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (39, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (39, 51, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (39, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (40, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (40, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (40, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (40, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (41, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (41, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (41, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (41, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (41, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (41, 24, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (41, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (42, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))'}), (42, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (42, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (42, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (43, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (43, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (43, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (44, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (44, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (44, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (44, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (44, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (44, 58, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (45, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (45, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (45, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (45, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (46, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (46, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (47, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (47, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (47, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (47, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (48, 32, {'input': set([1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else))) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else))) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)))'}), (48, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (49, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (49, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (50, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (50, 44, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (50, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (50, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (50, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (50, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (50, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (51, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (51, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (52, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (52, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (52, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (52, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (52, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (52, 28, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (52, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (53, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (53, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (53, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (53, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (53, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (53, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (53, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (54, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (54, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (54, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (54, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (54, 9, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (54, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (54, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (55, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (55, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (55, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (55, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (55, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (55, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (55, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (56, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (56, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (57, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (57, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (57, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (57, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (58, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))'}), (58, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (59, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (59, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (59, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (59, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (60, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (61, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (61, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (61, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (61, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (61, 46, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (61, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (61, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (62, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (62, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (62, 21, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (62, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (62, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (63, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (63, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (63, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (63, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (64, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (64, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (65, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (65, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (65, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (65, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (65, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (65, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (65, 29, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (66, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (66, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (66, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (66, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (66, 48, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (66, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (66, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'})]
		
11/17/2020 10:57:37 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     6 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     14 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     19 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     20 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     26 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     33 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     34 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     38 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     40 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     43 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
     45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     48 -> both=set([3, 6, 7, 11, 14, 15]) left=set([1, 4, 5, 9, 12, 13]) right=set([2, 10])
     49 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     51 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
     56 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     58 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     59 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     60 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     64 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       12 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       13 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       26 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       34 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       40 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       48 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       49 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       51 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       56 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       57 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       58 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       59 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       60 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       64 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:57:37 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:57:37 PM DEBUG [spec] No of edges: 384
11/17/2020 10:57:37 PM DEBUG 
End of translate


11/17/2020 10:57:37 PM INFO The bound of formula "[H^1 r0]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])" is (5, 13)!
11/17/2020 10:57:37 PM INFO Translated formula "[H^1 r0]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:57:37 PM DEBUG [hold] Prop: r0 Duration: 1 Negation: False Props: set(['r16', 'r17', 'r15', 'r0'])
11/17/2020 10:57:37 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r0 )
11/17/2020 10:57:37 PM DEBUG [hold] Prop: r15 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r15', 'r0'])
11/17/2020 10:57:37 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r15 )
11/17/2020 10:57:37 PM DEBUG [hold] Prop: r16 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r15', 'r0'])
11/17/2020 10:57:37 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r16 )
11/17/2020 10:57:37 PM INFO No trap states were added.
11/17/2020 10:57:37 PM INFO No trap states were added.
11/17/2020 10:57:37 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:57:37 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 10:57:37 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:57:37 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 10:57:37 PM DEBUG [union] DFA1: (Eventually (Hold 3 r15 ) 0 7 ) DFA2: (Eventually (Hold 3 r16 ) 0 7 )
11/17/2020 10:57:37 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r15', 'r0'])
11/17/2020 10:57:37 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 10:57:37 PM INFO No trap states were added.
11/17/2020 10:57:37 PM INFO No trap states were added.
11/17/2020 10:57:37 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 10:57:37 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 10:57:37 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r0 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) )
11/17/2020 10:57:37 PM DEBUG [spec] spec: [H^1 r0]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])
11/17/2020 10:57:37 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r0 ) 0 5 ) (Union (Union (Eventually (Hold 3 r15 ) 0 7 ) (Eventually (Hold 3 r16 ) 0 7 ) ) (Eventually (Hold 3 r17 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r16': 1, 'r17': 2, 'r15': 4, 'r0': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r0', 'weight': 0, 'label': u'r0'}), (1, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r0', 'weight': 0, 'label': u'r0'}), (2, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (2, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (2, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (2, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (2, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (2, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (2, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (3, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (3, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (3, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (4, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (4, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (4, 39, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (4, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (4, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (4, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (4, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (5, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (5, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (5, 15, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (5, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (5, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (5, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (5, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (6, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (6, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (6, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (7, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (7, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (7, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (7, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (8, 64, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (8, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (8, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (8, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (8, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (8, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (8, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (9, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (9, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (9, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (9, 47, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (9, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (9, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (9, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (10, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (10, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (10, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (10, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (10, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (10, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (10, 60, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (11, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (11, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (11, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (11, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (12, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (12, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (13, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & (r16)) | (((else)) & (r16))) & ((else))) | ((((r15) & ((else))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & (r16)) | (((else)) & (r16))) & ((else))) | ((((r15) & ((else))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & (r17))))'}), (13, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (14, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (14, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (14, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (15, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (15, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (15, 14, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (15, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (15, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (15, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (16, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (16, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (16, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (16, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (16, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (16, 25, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (16, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (17, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (17, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (17, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (17, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (18, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (18, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (18, 42, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (18, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (18, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (18, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (19, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))'}), (19, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (20, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (20, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (20, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (20, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (21, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (21, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (21, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (21, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (22, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (22, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (22, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (22, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (23, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (23, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (23, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (23, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (23, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (23, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (23, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (24, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (24, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (24, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (24, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (25, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (25, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (25, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (25, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (26, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (26, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (27, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (27, 12, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (27, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (27, 57, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (27, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (27, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (28, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (28, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (28, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (28, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (28, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (28, 56, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (28, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (29, 33, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (29, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (29, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (29, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (29, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (29, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (29, 59, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (30, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (30, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (30, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (30, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (31, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))'}), (31, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (31, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (31, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (33, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (33, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (33, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (33, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (34, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (34, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (34, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (35, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (35, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (35, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (35, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (35, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (35, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (35, 63, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (36, 66, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (36, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (36, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (36, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (36, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (36, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (36, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (37, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | ((((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | ((((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((r15) & ((else))) & (r17))))'}), (37, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (37, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (37, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (38, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & (r16)) & (r17))))'}), (38, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (38, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (38, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (39, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (39, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (39, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (39, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (39, 51, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (39, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (40, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (40, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (40, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (40, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (41, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (41, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (41, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (41, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (41, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (41, 24, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (41, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (42, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))', 'weight': 0, 'label': '(((r15) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((r15) & ((else))) & (r17))))'}), (42, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (42, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (42, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (43, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (43, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (43, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (44, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (44, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (44, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (44, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (44, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (44, 58, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (45, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (45, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (45, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (45, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (46, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (46, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (46, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (47, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((r15) & (r16))) & (r17)) | ((((r15) & ((else))) | ((r15) & (r16))) & ((else)))'}), (47, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (47, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (47, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (48, 32, {'input': set([1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else))) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else))) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)))'}), (48, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (49, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (49, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (50, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (50, 44, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (50, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (50, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (50, 53, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (50, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (50, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (51, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (51, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (52, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (52, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (52, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (52, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (52, 27, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (52, 28, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (52, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (53, 34, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (53, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (53, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (53, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (53, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (53, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (53, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (54, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (54, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (54, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (54, 50, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (54, 9, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (54, 61, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (54, 62, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (55, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (55, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (55, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (55, 52, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (55, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (55, 20, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (55, 31, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (56, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))', 'weight': 0, 'label': '((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & (r17)) | ((((r15) & ((else))) | ((((else)) & (r16)) | ((r15) & (r16)))) & ((else)))'}), (56, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (57, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (57, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (57, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (57, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (58, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | ((((((else)) & (r16)) | ((r15) & (r16))) & ((else))) | (((((else)) & (r16)) | ((r15) & (r16))) & (r17))))'}), (58, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (59, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r16)) | ((r15) & (r16))) & (r17)) | (((((else)) & (r16)) | ((r15) & (r16))) & ((else)))'}), (59, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (59, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (59, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))', 'weight': 0, 'label': '((((r15) & (r16)) | (((else)) & (r16))) & (r17)) | ((((r15) & (r16)) | (((else)) & (r16))) & ((else)))'}), (60, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (60, 22, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (61, 65, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (61, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (61, 11, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (61, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (61, 46, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (61, 17, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (61, 55, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (62, 7, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (62, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (62, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (62, 21, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (62, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (62, 30, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (63, 40, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (63, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))', 'weight': 0, 'label': '((((else)) & (r16)) & (r17)) | (((((else)) & ((else))) & (r17)) | ((((r15) & ((else))) & (r17)) | (((r15) & (r16)) & (r17))))'}), (63, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (63, 41, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (64, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r17)) | (((((else)) & (r16)) & (r17)) | (((((r15) & ((else))) | ((r15) & (r16))) & ((else))) | ((((r15) & ((else))) | ((r15) & (r16))) & (r17))))'}), (64, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (65, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (65, 5, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (65, 10, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (65, 16, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'}), (65, 54, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (65, 23, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (65, 29, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (66, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([1, 9]), 'guard': '(((else)) & (r16)) & ((else))', 'weight': 0, 'label': '(((else)) & (r16)) & ((else))'}), (66, 38, {'input': set([2, 10]), 'guard': '(((else)) & ((else))) & (r17)', 'weight': 0, 'label': '(((else)) & ((else))) & (r17)'}), (66, 43, {'input': set([6, 14]), 'guard': '((r15) & ((else))) & (r17)', 'weight': 0, 'label': '((r15) & ((else))) & (r17)'}), (66, 45, {'input': set([4, 12]), 'guard': '((r15) & ((else))) & ((else))', 'weight': 0, 'label': '((r15) & ((else))) & ((else))'}), (66, 48, {'input': set([7, 15]), 'guard': '((r15) & (r16)) & (r17)', 'weight': 0, 'label': '((r15) & (r16)) & (r17)'}), (66, 19, {'input': set([3, 11]), 'guard': '(((else)) & (r16)) & (r17)', 'weight': 0, 'label': '(((else)) & (r16)) & (r17)'}), (66, 26, {'input': set([13, 5]), 'guard': '((r15) & (r16)) & ((else))', 'weight': 0, 'label': '((r15) & (r16)) & ((else))'})]
		
11/17/2020 10:57:37 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     6 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     14 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     19 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     20 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     26 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     33 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     34 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     38 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     40 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     43 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
     45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     48 -> both=set([3, 6, 7, 11, 14, 15]) left=set([1, 4, 5, 9, 12, 13]) right=set([2, 10])
     49 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     51 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
     56 -> both=set([]) left=set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     58 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 10, 14, 6])
     59 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     60 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
     64 -> both=set([7, 6, 14, 15]) left=set([4, 12, 5, 13]) right=set([11, 2, 3, 10])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       7 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       12 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       13 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       17 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       21 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       26 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       30 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       34 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       40 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       43 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       48 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       49 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       51 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
       56 -> both=set([7, 5, 13, 15]) left=set([4, 12, 6, 14]) right=set([3, 1, 11, 9])
       57 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       58 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       59 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       60 -> both=set([]) left=set([]) right=set([1, 3, 5, 7, 9, 11, 13, 15])
       64 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 10:57:37 PM DEBUG [spec] No of nodes: 67
11/17/2020 10:57:37 PM DEBUG [spec] No of edges: 384
11/17/2020 10:57:37 PM DEBUG 
End of translate


11/17/2020 10:57:37 PM INFO The bound of formula "[H^1 r0]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])" is (5, 13)!
11/17/2020 10:57:37 PM INFO Translated formula "[H^1 r0]^[0, 5] * ([H^3 r15]^[0, 7] | [H^3 r16]^[0, 7] | [H^3 r17]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 10:57:37 PM DEBUG 

Start policy computation

11/17/2020 10:57:37 PM DEBUG [extend_ts] TS: (15, 79) ETS:(15, 79)
11/17/2020 10:57:37 PM DEBUG [extend_ts] TS: (15, 79) ETS:(15, 79)
11/17/2020 10:57:37 PM DEBUG [extend_ts] TS: (15, 79) ETS:(15, 79)
11/17/2020 10:57:37 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:57:37 PM INFO Product automaton size is: (51, 257)
11/17/2020 10:57:37 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:57:37 PM INFO Product automaton size is: (51, 257)
11/17/2020 10:57:37 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 10:57:37 PM INFO Product automaton size is: (51, 257)
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:57:37 PM DEBUG []
11/17/2020 10:58:02 PM INFO Max deadline: 4
11/17/2020 10:58:02 PM INFO Generated control policy is: Base1 -> 1 -> r9 -> 1 -> r14 -> 1 -> r7 -> 1 -> r6 -> 1 -> r6 -> 1 -> r7 -> 1 -> r14 -> 1 -> r15 -> 1 -> r15 -> 1 -> r15 -> 1 -> r15
11/17/2020 10:58:02 PM INFO Max deadline: 4
11/17/2020 10:58:02 PM INFO Generated control policy is: Base2 -> 1 -> r9 -> 1 -> r14 -> 1 -> r7 -> 1 -> r0 -> 1 -> r0 -> 1 -> r7 -> 1 -> r14 -> 1 -> r15 -> 1 -> r15 -> 1 -> r15 -> 1 -> r15
11/17/2020 10:58:02 PM INFO Max deadline: 4
11/17/2020 10:58:02 PM INFO Generated control policy is: Base3 -> 1 -> Base2 -> 1 -> r9 -> 1 -> r14 -> 1 -> r7 -> 1 -> r0 -> 1 -> r0 -> 1 -> r7 -> 1 -> r14 -> 1 -> r15 -> 1 -> r15 -> 1 -> r15 -> 1 -> r15
11/17/2020 11:00:00 PM DEBUG [hold] Prop: r4 Duration: 1 Negation: False Props: set(['r4', 'r17', 'r12', 'r13'])
11/17/2020 11:00:00 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r4 )
11/17/2020 11:00:00 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r4', 'r17', 'r12', 'r13'])
11/17/2020 11:00:00 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 11:00:00 PM DEBUG [hold] Prop: r12 Duration: 3 Negation: False Props: set(['r4', 'r17', 'r12', 'r13'])
11/17/2020 11:00:00 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r12 )
11/17/2020 11:00:00 PM INFO No trap states were added.
11/17/2020 11:00:00 PM INFO No trap states were added.
11/17/2020 11:00:00 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 11:00:00 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 11:00:00 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 11:00:00 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 11:00:00 PM DEBUG [union] DFA1: (Eventually (Hold 3 r17 ) 0 7 ) DFA2: (Eventually (Hold 3 r12 ) 0 7 )
11/17/2020 11:00:00 PM DEBUG [hold] Prop: r13 Duration: 3 Negation: False Props: set(['r4', 'r17', 'r12', 'r13'])
11/17/2020 11:00:00 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r13 )
11/17/2020 11:00:00 PM INFO No trap states were added.
11/17/2020 11:00:00 PM INFO No trap states were added.
11/17/2020 11:00:00 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r17 ) 0 7 ) (Eventually (Hold 3 r12 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r13 ) 0 7 )
11/17/2020 11:00:00 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r4 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r17 ) 0 7 ) (Eventually (Hold 3 r12 ) 0 7 ) ) (Eventually (Hold 3 r13 ) 0 7 ) )
11/17/2020 11:00:00 PM DEBUG [spec] spec: [H^1 r4]^[0, 5] * ([H^3 r17]^[0, 7] | [H^3 r12]^[0, 7] | [H^3 r13]^[0, 7])
11/17/2020 11:00:00 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r4 ) 0 5 ) (Union (Union (Eventually (Hold 3 r17 ) 0 7 ) (Eventually (Hold 3 r12 ) 0 7 ) ) (Eventually (Hold 3 r13 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r4': 1, 'r17': 2, 'r12': 4, 'r13': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 2, 4, 6, 8, 10, 12, 14]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': u'r4', 'weight': 0, 'label': u'r4'}), (1, 0, {'input': set([0, 2, 4, 6, 8, 10, 12, 14]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': u'r4', 'weight': 0, 'label': u'r4'}), (2, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (2, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (2, 5, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (2, 50, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (2, 52, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (2, 54, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (2, 4, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (3, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))'}), (3, 41, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (3, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (4, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (4, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (4, 39, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (4, 8, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (4, 41, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (4, 55, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (4, 62, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (5, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (5, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (5, 15, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (5, 18, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (5, 52, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (5, 54, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (5, 55, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (6, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (6, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (6, 5, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (6, 54, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (7, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (7, 57, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (7, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (7, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (8, 64, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (8, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (8, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (8, 38, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (8, 11, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (8, 45, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (8, 20, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (9, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (9, 55, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (9, 45, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (9, 47, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (9, 17, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (9, 53, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (9, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (10, 33, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (10, 34, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (10, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (10, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (10, 54, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (10, 55, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (10, 60, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (11, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (11, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (11, 10, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (11, 5, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (12, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))'}), (12, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (13, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | (((((r17) & (r12)) | (((else)) & (r12))) & ((else))) | ((((r17) & ((else))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | (((((r17) & (r12)) | (((else)) & (r12))) & ((else))) | ((((r17) & ((else))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & (r13))))'}), (13, 41, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))'}), (14, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (14, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (14, 45, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (15, 38, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (15, 41, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (15, 14, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (15, 22, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (15, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (15, 27, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (16, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (16, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (16, 40, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (16, 41, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (16, 57, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (16, 25, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (16, 61, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (17, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (17, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (17, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (17, 38, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (18, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (18, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (18, 41, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (18, 42, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (18, 20, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (18, 22, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (18, 62, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (19, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | ((((((else)) & (r12)) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) | ((r17) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | ((((((else)) & (r12)) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) | ((r17) & (r12))) & (r13))))'}), (19, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (20, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))'}), (20, 16, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (20, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (20, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (21, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (21, 33, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (21, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (21, 55, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (22, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))'}), (22, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (22, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (22, 45, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (23, 34, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (23, 4, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (23, 5, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (23, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (23, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (23, 54, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (23, 57, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (24, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (24, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (24, 53, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (24, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (25, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (25, 17, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (25, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (25, 55, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (26, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))'}), (26, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (27, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (27, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (27, 12, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (27, 45, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (27, 57, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (27, 26, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (27, 30, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (28, 33, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (28, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (28, 45, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (28, 17, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (28, 55, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (28, 56, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (28, 26, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (29, 33, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (29, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (29, 8, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (29, 41, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (29, 40, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (29, 55, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (29, 59, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (30, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (30, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (30, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (30, 55, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (31, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & ((else))) & (r13))))', 'weight': 0, 'label': '(((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & ((else))) & (r13))))'}), (31, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (31, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (31, 41, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (33, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (33, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (33, 54, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (33, 31, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (34, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))'}), (34, 41, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (34, 61, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (35, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (35, 38, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (35, 16, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (35, 54, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (35, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (35, 31, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (35, 63, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (36, 66, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (36, 8, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (36, 41, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (36, 55, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (36, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (36, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (36, 27, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (37, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r12)) & (r13)) | ((((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((r17) & ((else))) & (r13))))', 'weight': 0, 'label': '((((else)) & (r12)) & (r13)) | ((((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((r17) & ((else))) & (r13))))'}), (37, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (37, 34, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (37, 54, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (38, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))'}), (38, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (38, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (38, 54, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (39, 38, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (39, 7, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (39, 43, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (39, 45, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (39, 51, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (39, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (40, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (40, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (40, 30, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (40, 45, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (41, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (41, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (41, 11, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (41, 45, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (41, 50, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (41, 24, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (41, 30, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (42, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & ((else))) & (r13))))', 'weight': 0, 'label': '(((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & ((else))) & (r13))))'}), (42, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (42, 45, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (42, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (43, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))'}), (43, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (43, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (44, 38, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (44, 40, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (44, 41, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (44, 19, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (44, 22, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (44, 58, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (45, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (45, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (45, 50, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (45, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (46, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (46, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (46, 38, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (46, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (47, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (47, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (47, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (47, 38, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (48, 32, {'input': set([2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else))) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else))) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)))'}), (48, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))'}), (49, 41, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (49, 55, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (50, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (50, 44, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (50, 16, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (50, 18, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (50, 53, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (50, 54, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (50, 55, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (51, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))'}), (51, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (52, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (52, 41, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (52, 10, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (52, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (52, 27, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (52, 28, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (52, 61, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (53, 34, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (53, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (53, 38, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (53, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (53, 19, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (53, 54, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (53, 31, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (54, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (54, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (54, 41, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (54, 50, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (54, 9, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (54, 61, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (54, 62, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (55, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (55, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (55, 38, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (55, 52, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (55, 54, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (55, 20, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (55, 31, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (56, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))'}), (56, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (57, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (57, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (57, 54, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (57, 55, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (58, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | ((((((else)) & (r12)) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) | ((r17) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | ((((((else)) & (r12)) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) | ((r17) & (r12))) & (r13))))'}), (58, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (59, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (59, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (59, 45, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (59, 38, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (60, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))'}), (60, 41, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (60, 22, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (61, 65, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (61, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (61, 11, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (61, 45, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (61, 46, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (61, 17, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (61, 55, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (62, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (62, 7, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (62, 10, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (62, 45, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (62, 21, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (62, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (62, 30, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (63, 40, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (63, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))'}), (63, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (63, 41, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (64, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))'}), (64, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (65, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (65, 5, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (65, 10, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (65, 16, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (65, 54, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (65, 23, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (65, 29, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (66, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([4, 5]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (66, 38, {'input': set([8, 9]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (66, 43, {'input': set([10, 11]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (66, 45, {'input': set([2, 3]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (66, 48, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (66, 19, {'input': set([12, 13]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (66, 26, {'input': set([6, 7]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'})]
		
11/17/2020 11:00:00 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     6 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     7 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     11 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     12 -> both=set([]) left=set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
     14 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     17 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     19 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
     20 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     21 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     24 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     25 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     26 -> both=set([]) left=set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     33 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     34 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     38 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     40 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     43 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
     45 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     46 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     47 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     48 -> both=set([10, 11, 12, 13, 14, 15]) left=set([2, 3, 4, 5, 6, 7]) right=set([8, 9])
     49 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     51 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
     56 -> both=set([]) left=set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     58 -> both=set([12, 13, 14, 15]) left=set([4, 5, 6, 7]) right=set([8, 9, 10, 11])
     59 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     60 -> both=set([]) left=set([4, 5, 6, 7, 12, 13, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     64 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       7 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       11 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       12 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 5, 13])
       13 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       17 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       21 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       24 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       26 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 5, 13])
       30 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       34 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       40 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       43 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       45 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       46 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       47 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       48 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 5, 13])
       49 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       51 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
       56 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 5, 13])
       57 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       58 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       59 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       60 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
       64 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 11:00:00 PM DEBUG [spec] No of nodes: 67
11/17/2020 11:00:00 PM DEBUG [spec] No of edges: 384
11/17/2020 11:00:00 PM DEBUG 
End of translate


11/17/2020 11:00:00 PM INFO The bound of formula "[H^1 r4]^[0, 5] * ([H^3 r17]^[0, 7] | [H^3 r12]^[0, 7] | [H^3 r13]^[0, 7])" is (5, 13)!
11/17/2020 11:00:00 PM INFO Translated formula "[H^1 r4]^[0, 5] * ([H^3 r17]^[0, 7] | [H^3 r12]^[0, 7] | [H^3 r13]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 11:00:00 PM DEBUG [hold] Prop: r5 Duration: 1 Negation: False Props: set(['r5', 'r12', 'r13', 'r17'])
11/17/2020 11:00:00 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r5 )
11/17/2020 11:00:00 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r5', 'r12', 'r13', 'r17'])
11/17/2020 11:00:00 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 11:00:00 PM DEBUG [hold] Prop: r12 Duration: 3 Negation: False Props: set(['r5', 'r12', 'r13', 'r17'])
11/17/2020 11:00:00 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r12 )
11/17/2020 11:00:00 PM INFO No trap states were added.
11/17/2020 11:00:00 PM INFO No trap states were added.
11/17/2020 11:00:00 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 11:00:00 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 11:00:00 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 11:00:00 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 11:00:00 PM DEBUG [union] DFA1: (Eventually (Hold 3 r17 ) 0 7 ) DFA2: (Eventually (Hold 3 r12 ) 0 7 )
11/17/2020 11:00:00 PM DEBUG [hold] Prop: r13 Duration: 3 Negation: False Props: set(['r5', 'r12', 'r13', 'r17'])
11/17/2020 11:00:00 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r13 )
11/17/2020 11:00:00 PM INFO No trap states were added.
11/17/2020 11:00:00 PM INFO No trap states were added.
11/17/2020 11:00:00 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r17 ) 0 7 ) (Eventually (Hold 3 r12 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r13 ) 0 7 )
11/17/2020 11:00:00 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r5 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r17 ) 0 7 ) (Eventually (Hold 3 r12 ) 0 7 ) ) (Eventually (Hold 3 r13 ) 0 7 ) )
11/17/2020 11:00:00 PM DEBUG [spec] spec: [H^1 r5]^[0, 5] * ([H^3 r17]^[0, 7] | [H^3 r12]^[0, 7] | [H^3 r13]^[0, 7])
11/17/2020 11:00:00 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r5 ) 0 5 ) (Union (Union (Eventually (Hold 3 r17 ) 0 7 ) (Eventually (Hold 3 r12 ) 0 7 ) ) (Eventually (Hold 3 r13 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r5': 1, 'r12': 2, 'r13': 4, 'r17': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 2, 4, 6, 8, 10, 12, 14]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': u'r5', 'weight': 0, 'label': u'r5'}), (1, 0, {'input': set([0, 2, 4, 6, 8, 10, 12, 14]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': u'r5', 'weight': 0, 'label': u'r5'}), (2, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (2, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (2, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (2, 50, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (2, 52, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (2, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (2, 4, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (3, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))'}), (3, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (3, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (4, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (4, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (4, 39, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (4, 8, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (4, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (4, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (4, 62, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (5, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (5, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (5, 15, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (5, 18, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (5, 52, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (5, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (5, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (6, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (6, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (6, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (6, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (7, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (7, 57, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (7, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (7, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (8, 64, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (8, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (8, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (8, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (8, 11, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (8, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (8, 20, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (9, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (9, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (9, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (9, 47, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (9, 17, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (9, 53, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (9, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (10, 33, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (10, 34, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (10, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (10, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (10, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (10, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (10, 60, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (11, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (11, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (11, 10, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (11, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (12, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))'}), (12, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (13, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | (((((r17) & (r12)) | (((else)) & (r12))) & ((else))) | ((((r17) & ((else))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | (((((r17) & (r12)) | (((else)) & (r12))) & ((else))) | ((((r17) & ((else))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & (r13))))'}), (13, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))'}), (14, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (14, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (14, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (15, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (15, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (15, 14, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (15, 22, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (15, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (15, 27, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (16, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (16, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (16, 40, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (16, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (16, 57, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (16, 25, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (16, 61, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (17, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (17, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (17, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (17, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (18, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (18, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (18, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (18, 42, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (18, 20, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (18, 22, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (18, 62, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (19, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | ((((((else)) & (r12)) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) | ((r17) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | ((((((else)) & (r12)) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) | ((r17) & (r12))) & (r13))))'}), (19, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (20, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))'}), (20, 16, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (20, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (20, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (21, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (21, 33, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (21, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (21, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (22, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))'}), (22, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (22, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (22, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (23, 34, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (23, 4, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (23, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (23, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (23, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (23, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (23, 57, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (24, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (24, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (24, 53, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (24, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (25, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (25, 17, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (25, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (25, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (26, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))'}), (26, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (27, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (27, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (27, 12, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (27, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (27, 57, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (27, 26, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (27, 30, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (28, 33, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (28, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (28, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (28, 17, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (28, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (28, 56, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (28, 26, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (29, 33, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (29, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (29, 8, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (29, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (29, 40, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (29, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (29, 59, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (30, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (30, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (30, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (30, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (31, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & ((else))) & (r13))))', 'weight': 0, 'label': '(((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & ((else))) & (r13))))'}), (31, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (31, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (31, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (33, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (33, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (33, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (33, 31, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (34, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))'}), (34, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (34, 61, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (35, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (35, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (35, 16, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (35, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (35, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (35, 31, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (35, 63, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (36, 66, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (36, 8, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (36, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (36, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (36, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (36, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (36, 27, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (37, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r12)) & (r13)) | ((((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((r17) & ((else))) & (r13))))', 'weight': 0, 'label': '((((else)) & (r12)) & (r13)) | ((((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((r17) & ((else))) & (r13))))'}), (37, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (37, 34, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (37, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (38, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))'}), (38, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (38, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (38, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (39, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (39, 7, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (39, 43, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (39, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (39, 51, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (39, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (40, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (40, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (40, 30, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (40, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (41, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (41, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (41, 11, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (41, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (41, 50, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (41, 24, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (41, 30, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (42, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & ((else))) & (r13))))', 'weight': 0, 'label': '(((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & ((else))) & (r13))))'}), (42, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (42, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (42, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (43, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))'}), (43, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (43, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (44, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (44, 40, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (44, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (44, 19, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (44, 22, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (44, 58, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (45, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (45, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (45, 50, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (45, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (46, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (46, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (46, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (46, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (47, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (47, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (47, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (47, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (48, 32, {'input': set([2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else))) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else))) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)))'}), (48, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))'}), (49, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (49, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (50, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (50, 44, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (50, 16, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (50, 18, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (50, 53, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (50, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (50, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (51, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))'}), (51, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (52, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (52, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (52, 10, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (52, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (52, 27, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (52, 28, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (52, 61, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (53, 34, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (53, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (53, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (53, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (53, 19, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (53, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (53, 31, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (54, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (54, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (54, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (54, 50, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (54, 9, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (54, 61, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (54, 62, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (55, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (55, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (55, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (55, 52, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (55, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (55, 20, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (55, 31, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (56, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))'}), (56, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (57, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (57, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (57, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (57, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (58, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | ((((((else)) & (r12)) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) | ((r17) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | ((((((else)) & (r12)) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) | ((r17) & (r12))) & (r13))))'}), (58, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (59, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (59, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (59, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (59, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (60, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))'}), (60, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (60, 22, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (61, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (61, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (61, 11, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (61, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (61, 46, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (61, 17, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (61, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (62, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (62, 7, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (62, 10, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (62, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (62, 21, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (62, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (62, 30, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (63, 40, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (63, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))'}), (63, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (63, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (64, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))'}), (64, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (65, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (65, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (65, 10, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (65, 16, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (65, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (65, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (65, 29, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (66, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (66, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (66, 43, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (66, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (66, 48, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (66, 19, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (66, 26, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'})]
		
11/17/2020 11:00:00 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     6 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     7 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     14 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     17 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     19 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     20 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     21 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     24 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     26 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     33 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     34 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     38 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     40 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     43 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
     45 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     48 -> both=set([6, 7, 12, 13, 14, 15]) left=set([2, 3, 8, 9, 10, 11]) right=set([4, 5])
     49 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     51 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
     56 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     58 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     59 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     60 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     64 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       7 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       12 -> both=set([10, 11, 14, 15]) left=set([8, 9, 12, 13]) right=set([2, 3, 6, 7])
       13 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       17 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       21 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       26 -> both=set([10, 11, 14, 15]) left=set([8, 9, 12, 13]) right=set([2, 3, 6, 7])
       30 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       34 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       40 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       43 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       48 -> both=set([10, 11, 14, 15]) left=set([8, 9, 12, 13]) right=set([2, 3, 6, 7])
       49 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       51 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       56 -> both=set([10, 11, 14, 15]) left=set([8, 9, 12, 13]) right=set([2, 3, 6, 7])
       57 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       58 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       59 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       60 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       64 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 11:00:00 PM DEBUG [spec] No of nodes: 67
11/17/2020 11:00:00 PM DEBUG [spec] No of edges: 384
11/17/2020 11:00:00 PM DEBUG 
End of translate


11/17/2020 11:00:00 PM INFO The bound of formula "[H^1 r5]^[0, 5] * ([H^3 r17]^[0, 7] | [H^3 r12]^[0, 7] | [H^3 r13]^[0, 7])" is (5, 13)!
11/17/2020 11:00:00 PM INFO Translated formula "[H^1 r5]^[0, 5] * ([H^3 r17]^[0, 7] | [H^3 r12]^[0, 7] | [H^3 r13]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 11:00:00 PM DEBUG [hold] Prop: r5 Duration: 1 Negation: False Props: set(['r5', 'r12', 'r13', 'r17'])
11/17/2020 11:00:00 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r5 )
11/17/2020 11:00:00 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r5', 'r12', 'r13', 'r17'])
11/17/2020 11:00:00 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 11:00:00 PM DEBUG [hold] Prop: r12 Duration: 3 Negation: False Props: set(['r5', 'r12', 'r13', 'r17'])
11/17/2020 11:00:00 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r12 )
11/17/2020 11:00:00 PM INFO No trap states were added.
11/17/2020 11:00:00 PM INFO No trap states were added.
11/17/2020 11:00:00 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 11:00:00 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 11:00:00 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 11:00:00 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 11:00:00 PM DEBUG [union] DFA1: (Eventually (Hold 3 r17 ) 0 7 ) DFA2: (Eventually (Hold 3 r12 ) 0 7 )
11/17/2020 11:00:00 PM DEBUG [hold] Prop: r13 Duration: 3 Negation: False Props: set(['r5', 'r12', 'r13', 'r17'])
11/17/2020 11:00:00 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r13 )
11/17/2020 11:00:00 PM INFO No trap states were added.
11/17/2020 11:00:00 PM INFO No trap states were added.
11/17/2020 11:00:00 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 11:00:00 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r17 ) 0 7 ) (Eventually (Hold 3 r12 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r13 ) 0 7 )
11/17/2020 11:00:00 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r5 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r17 ) 0 7 ) (Eventually (Hold 3 r12 ) 0 7 ) ) (Eventually (Hold 3 r13 ) 0 7 ) )
11/17/2020 11:00:00 PM DEBUG [spec] spec: [H^1 r5]^[0, 5] * ([H^3 r17]^[0, 7] | [H^3 r12]^[0, 7] | [H^3 r13]^[0, 7])
11/17/2020 11:00:00 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r5 ) 0 5 ) (Union (Union (Eventually (Hold 3 r17 ) 0 7 ) (Eventually (Hold 3 r12 ) 0 7 ) ) (Eventually (Hold 3 r13 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r5': 1, 'r12': 2, 'r13': 4, 'r17': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 2, 4, 6, 8, 10, 12, 14]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': u'r5', 'weight': 0, 'label': u'r5'}), (1, 0, {'input': set([0, 2, 4, 6, 8, 10, 12, 14]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': u'r5', 'weight': 0, 'label': u'r5'}), (2, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (2, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (2, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (2, 50, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (2, 52, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (2, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (2, 4, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (3, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))'}), (3, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (3, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (4, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (4, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (4, 39, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (4, 8, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (4, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (4, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (4, 62, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (5, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (5, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (5, 15, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (5, 18, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (5, 52, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (5, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (5, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (6, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (6, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (6, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (6, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (7, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (7, 57, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (7, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (7, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (8, 64, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (8, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (8, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (8, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (8, 11, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (8, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (8, 20, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (9, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (9, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (9, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (9, 47, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (9, 17, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (9, 53, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (9, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (10, 33, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (10, 34, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (10, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (10, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (10, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (10, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (10, 60, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (11, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (11, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (11, 10, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (11, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (12, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))'}), (12, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (13, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | (((((r17) & (r12)) | (((else)) & (r12))) & ((else))) | ((((r17) & ((else))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | (((((r17) & (r12)) | (((else)) & (r12))) & ((else))) | ((((r17) & ((else))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & (r13))))'}), (13, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))'}), (14, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (14, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (14, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (15, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (15, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (15, 14, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (15, 22, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (15, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (15, 27, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (16, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (16, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (16, 40, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (16, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (16, 57, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (16, 25, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (16, 61, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (17, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (17, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (17, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (17, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (18, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (18, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (18, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (18, 42, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (18, 20, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (18, 22, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (18, 62, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (19, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | ((((((else)) & (r12)) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) | ((r17) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | ((((((else)) & (r12)) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) | ((r17) & (r12))) & (r13))))'}), (19, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (20, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))'}), (20, 16, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (20, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (20, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (21, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (21, 33, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (21, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (21, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (22, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))'}), (22, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (22, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (22, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (23, 34, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (23, 4, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (23, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (23, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (23, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (23, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (23, 57, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (24, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (24, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (24, 53, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (24, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (25, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (25, 17, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (25, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (25, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (26, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))'}), (26, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (27, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (27, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (27, 12, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (27, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (27, 57, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (27, 26, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (27, 30, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (28, 33, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (28, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (28, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (28, 17, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (28, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (28, 56, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (28, 26, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (29, 33, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (29, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (29, 8, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (29, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (29, 40, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (29, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (29, 59, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (30, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (30, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (30, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (30, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (31, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & ((else))) & (r13))))', 'weight': 0, 'label': '(((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & ((else))) & (r13))))'}), (31, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (31, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (31, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (33, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (33, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (33, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (33, 31, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (34, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))'}), (34, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (34, 61, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (35, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (35, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (35, 16, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (35, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (35, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (35, 31, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (35, 63, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (36, 66, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (36, 8, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (36, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (36, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (36, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (36, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (36, 27, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (37, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r12)) & (r13)) | ((((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((r17) & ((else))) & (r13))))', 'weight': 0, 'label': '((((else)) & (r12)) & (r13)) | ((((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((r17) & ((else))) & (r13))))'}), (37, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (37, 34, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (37, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (38, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & (r12)) & (r13))))'}), (38, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (38, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (38, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (39, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (39, 7, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (39, 43, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (39, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (39, 51, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (39, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (40, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (40, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (40, 30, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (40, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (41, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (41, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (41, 11, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (41, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (41, 50, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (41, 24, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (41, 30, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (42, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & ((else))) & (r13))))', 'weight': 0, 'label': '(((r17) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((r17) & ((else))) & (r13))))'}), (42, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (42, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (42, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (43, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))'}), (43, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (43, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (44, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (44, 40, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (44, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (44, 19, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (44, 22, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (44, 58, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (45, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (45, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (45, 50, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (45, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (46, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (46, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (46, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (46, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (47, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((r17) & (r12))) & (r13)) | ((((r17) & ((else))) | ((r17) & (r12))) & ((else)))'}), (47, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (47, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (47, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (48, 32, {'input': set([2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else))) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else))) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)))'}), (48, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))'}), (49, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (49, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (50, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (50, 44, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (50, 16, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (50, 18, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (50, 53, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (50, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (50, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (51, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))'}), (51, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (52, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (52, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (52, 10, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (52, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (52, 27, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (52, 28, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (52, 61, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (53, 34, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (53, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (53, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (53, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (53, 19, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (53, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (53, 31, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (54, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (54, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (54, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (54, 50, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (54, 9, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (54, 61, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (54, 62, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (55, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (55, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (55, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (55, 52, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (55, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (55, 20, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (55, 31, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (56, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))', 'weight': 0, 'label': '((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & (r13)) | ((((r17) & ((else))) | ((((else)) & (r12)) | ((r17) & (r12)))) & ((else)))'}), (56, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (57, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (57, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (57, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (57, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (58, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | ((((((else)) & (r12)) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) | ((r17) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | ((((((else)) & (r12)) | ((r17) & (r12))) & ((else))) | (((((else)) & (r12)) | ((r17) & (r12))) & (r13))))'}), (58, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (59, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r12)) | ((r17) & (r12))) & (r13)) | (((((else)) & (r12)) | ((r17) & (r12))) & ((else)))'}), (59, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (59, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (59, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (60, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))', 'weight': 0, 'label': '((((r17) & (r12)) | (((else)) & (r12))) & (r13)) | ((((r17) & (r12)) | (((else)) & (r12))) & ((else)))'}), (60, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (60, 22, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (61, 65, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (61, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (61, 11, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (61, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (61, 46, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (61, 17, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (61, 55, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (62, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (62, 7, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (62, 10, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (62, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (62, 21, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (62, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (62, 30, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (63, 40, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (63, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))', 'weight': 0, 'label': '((((else)) & (r12)) & (r13)) | (((((else)) & ((else))) & (r13)) | ((((r17) & ((else))) & (r13)) | (((r17) & (r12)) & (r13))))'}), (63, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (63, 41, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (64, 32, {'input': set([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r13)) | (((((else)) & (r12)) & (r13)) | (((((r17) & ((else))) | ((r17) & (r12))) & ((else))) | ((((r17) & ((else))) | ((r17) & (r12))) & (r13))))'}), (64, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (65, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (65, 5, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (65, 10, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (65, 16, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'}), (65, 54, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (65, 23, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (65, 29, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (66, 2, {'input': set([0, 1]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([2, 3]), 'guard': '(((else)) & (r12)) & ((else))', 'weight': 0, 'label': '(((else)) & (r12)) & ((else))'}), (66, 38, {'input': set([4, 5]), 'guard': '(((else)) & ((else))) & (r13)', 'weight': 0, 'label': '(((else)) & ((else))) & (r13)'}), (66, 43, {'input': set([12, 13]), 'guard': '((r17) & ((else))) & (r13)', 'weight': 0, 'label': '((r17) & ((else))) & (r13)'}), (66, 45, {'input': set([8, 9]), 'guard': '((r17) & ((else))) & ((else))', 'weight': 0, 'label': '((r17) & ((else))) & ((else))'}), (66, 48, {'input': set([14, 15]), 'guard': '((r17) & (r12)) & (r13)', 'weight': 0, 'label': '((r17) & (r12)) & (r13)'}), (66, 19, {'input': set([6, 7]), 'guard': '(((else)) & (r12)) & (r13)', 'weight': 0, 'label': '(((else)) & (r12)) & (r13)'}), (66, 26, {'input': set([10, 11]), 'guard': '((r17) & (r12)) & ((else))', 'weight': 0, 'label': '((r17) & (r12)) & ((else))'})]
		
11/17/2020 11:00:00 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     6 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     7 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     11 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     12 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     13 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     14 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     17 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     19 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     20 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     21 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     24 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     25 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     26 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     33 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     34 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     38 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     40 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     43 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
     45 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     46 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     47 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     48 -> both=set([6, 7, 12, 13, 14, 15]) left=set([2, 3, 8, 9, 10, 11]) right=set([4, 5])
     49 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     51 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
     56 -> both=set([]) left=set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     58 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     59 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     60 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     64 -> both=set([12, 13, 14, 15]) left=set([8, 9, 10, 11]) right=set([4, 5, 6, 7])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       7 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       11 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       12 -> both=set([10, 11, 14, 15]) left=set([8, 9, 12, 13]) right=set([2, 3, 6, 7])
       13 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       17 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       21 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       24 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       26 -> both=set([10, 11, 14, 15]) left=set([8, 9, 12, 13]) right=set([2, 3, 6, 7])
       30 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       34 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       40 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       43 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       45 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       46 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       47 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       48 -> both=set([10, 11, 14, 15]) left=set([8, 9, 12, 13]) right=set([2, 3, 6, 7])
       49 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       51 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
       56 -> both=set([10, 11, 14, 15]) left=set([8, 9, 12, 13]) right=set([2, 3, 6, 7])
       57 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       58 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       59 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       60 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       64 -> both=set([]) left=set([8, 9, 10, 11, 12, 13, 14, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 11:00:00 PM DEBUG [spec] No of nodes: 67
11/17/2020 11:00:00 PM DEBUG [spec] No of edges: 384
11/17/2020 11:00:00 PM DEBUG 
End of translate


11/17/2020 11:00:00 PM INFO The bound of formula "[H^1 r5]^[0, 5] * ([H^3 r17]^[0, 7] | [H^3 r12]^[0, 7] | [H^3 r13]^[0, 7])" is (5, 13)!
11/17/2020 11:00:00 PM INFO Translated formula "[H^1 r5]^[0, 5] * ([H^3 r17]^[0, 7] | [H^3 r12]^[0, 7] | [H^3 r13]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 11:00:00 PM DEBUG 

Start policy computation

11/17/2020 11:00:00 PM DEBUG [extend_ts] TS: (15, 81) ETS:(15, 81)
11/17/2020 11:00:00 PM DEBUG [extend_ts] TS: (15, 81) ETS:(15, 81)
11/17/2020 11:00:00 PM DEBUG [extend_ts] TS: (15, 81) ETS:(15, 81)
11/17/2020 11:00:00 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 11:00:00 PM INFO Product automaton size is: (51, 257)
11/17/2020 11:00:00 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 11:00:00 PM INFO Product automaton size is: (51, 257)
11/17/2020 11:00:00 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 11:00:00 PM INFO Product automaton size is: (51, 257)
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:00 PM DEBUG []
11/17/2020 11:00:40 PM INFO Max deadline: 0
11/17/2020 11:00:40 PM INFO Generated control policy is: Base1 -> 1 -> r4 -> 1 -> r4 -> 1 -> Base1 -> 1 -> r17 -> 1 -> r17 -> 1 -> r17 -> 1 -> r17
11/17/2020 11:00:40 PM INFO Max deadline: 1
11/17/2020 11:00:40 PM INFO Generated control policy is: Base2 -> 1 -> r4 -> 1 -> r5 -> 1 -> r5 -> 1 -> Base1 -> 1 -> r17 -> 1 -> r17 -> 1 -> r17 -> 1 -> r17
11/17/2020 11:00:40 PM INFO Max deadline: 1
11/17/2020 11:00:40 PM INFO Generated control policy is: Base3 -> 1 -> Base2 -> 1 -> r4 -> 1 -> r5 -> 1 -> r5 -> 1 -> Base1 -> 1 -> r17 -> 1 -> r17 -> 1 -> r17 -> 1 -> r17
11/17/2020 11:03:05 PM DEBUG [hold] Prop: r2 Duration: 1 Negation: False Props: set(['r16', 'r17', 'r2', 'r11'])
11/17/2020 11:03:05 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r2 )
11/17/2020 11:03:05 PM DEBUG [hold] Prop: r16 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r2', 'r11'])
11/17/2020 11:03:05 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r16 )
11/17/2020 11:03:05 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r2', 'r11'])
11/17/2020 11:03:05 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 11:03:05 PM INFO No trap states were added.
11/17/2020 11:03:05 PM INFO No trap states were added.
11/17/2020 11:03:05 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 11:03:05 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 11:03:05 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 11:03:05 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 11:03:05 PM DEBUG [union] DFA1: (Eventually (Hold 3 r16 ) 0 7 ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 11:03:05 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r2', 'r11'])
11/17/2020 11:03:05 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r11 )
11/17/2020 11:03:05 PM INFO No trap states were added.
11/17/2020 11:03:05 PM INFO No trap states were added.
11/17/2020 11:03:05 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r16 ) 0 7 ) (Eventually (Hold 3 r17 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r11 ) 0 7 )
11/17/2020 11:03:05 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r2 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r16 ) 0 7 ) (Eventually (Hold 3 r17 ) 0 7 ) ) (Eventually (Hold 3 r11 ) 0 7 ) )
11/17/2020 11:03:05 PM DEBUG [spec] spec: [H^1 r2]^[0, 5] * ([H^3 r16]^[0, 7] | [H^3 r17]^[0, 7] | [H^3 r11]^[0, 7])
11/17/2020 11:03:05 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r2 ) 0 5 ) (Union (Union (Eventually (Hold 3 r16 ) 0 7 ) (Eventually (Hold 3 r17 ) 0 7 ) ) (Eventually (Hold 3 r11 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r16': 1, 'r17': 2, 'r2': 4, 'r11': 8}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 8, 9, 10, 11]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': u'r2', 'weight': 0, 'label': u'r2'}), (1, 0, {'input': set([0, 1, 2, 3, 8, 9, 10, 11]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': u'r2', 'weight': 0, 'label': u'r2'}), (2, 65, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (2, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (2, 5, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (2, 50, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (2, 52, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (2, 54, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (2, 4, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (3, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))'}), (3, 41, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (3, 23, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (4, 65, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (4, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (4, 39, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (4, 8, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (4, 41, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (4, 55, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (4, 62, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (5, 65, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (5, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (5, 15, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (5, 18, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (5, 52, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (5, 54, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (5, 55, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (6, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (6, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (6, 5, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (6, 54, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (7, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (7, 57, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (7, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (7, 6, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (8, 64, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (8, 65, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (8, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (8, 38, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (8, 11, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (8, 45, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (8, 20, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (9, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (9, 55, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (9, 45, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (9, 47, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (9, 17, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (9, 53, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (9, 23, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (10, 33, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (10, 34, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (10, 6, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (10, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (10, 54, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (10, 55, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (10, 60, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (11, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (11, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (11, 10, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (11, 5, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (12, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))'}), (12, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (13, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | (((((r16) & (r17)) | (((else)) & (r17))) & ((else))) | ((((r16) & ((else))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | (((((r16) & (r17)) | (((else)) & (r17))) & ((else))) | ((((r16) & ((else))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & (r11))))'}), (13, 41, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))'}), (14, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (14, 6, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (14, 45, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (15, 38, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (15, 41, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (15, 14, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (15, 22, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (15, 23, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (15, 27, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (16, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (16, 6, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (16, 40, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (16, 41, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (16, 57, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (16, 25, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (16, 61, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (17, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (17, 65, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (17, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (17, 38, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (18, 65, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (18, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (18, 41, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (18, 42, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (18, 20, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (18, 22, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (18, 62, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (19, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | ((((((else)) & (r17)) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) | ((r16) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | ((((((else)) & (r17)) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) | ((r16) & (r17))) & (r11))))'}), (19, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (20, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))'}), (20, 16, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (20, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (20, 23, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (21, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (21, 33, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (21, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (21, 55, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (22, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))'}), (22, 65, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (22, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (22, 45, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (23, 34, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (23, 4, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (23, 5, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (23, 6, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (23, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (23, 54, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (23, 57, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (24, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (24, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (24, 53, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (24, 23, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (25, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (25, 17, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (25, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (25, 55, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (26, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))'}), (26, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (27, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (27, 6, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (27, 12, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (27, 45, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (27, 57, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (27, 26, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (27, 30, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (28, 33, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (28, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (28, 45, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (28, 17, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (28, 55, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (28, 56, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (28, 26, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (29, 33, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (29, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (29, 8, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (29, 41, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (29, 40, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (29, 55, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (29, 59, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (30, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (30, 65, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (30, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (30, 55, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (31, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & ((else))) & (r11))))', 'weight': 0, 'label': '(((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & ((else))) & (r11))))'}), (31, 65, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (31, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (31, 41, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (33, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (33, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (33, 54, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (33, 31, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (34, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))'}), (34, 41, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (34, 61, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (35, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (35, 38, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (35, 16, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (35, 54, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (35, 23, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (35, 31, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (35, 63, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (36, 66, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (36, 8, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (36, 41, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (36, 55, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (36, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (36, 23, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (36, 27, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (37, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r17)) & (r11)) | ((((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((r16) & ((else))) & (r11))))', 'weight': 0, 'label': '((((else)) & (r17)) & (r11)) | ((((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((r16) & ((else))) & (r11))))'}), (37, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (37, 34, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (37, 54, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (38, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))'}), (38, 65, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (38, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (38, 54, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (39, 38, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (39, 7, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (39, 43, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (39, 45, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (39, 51, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (39, 23, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (40, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (40, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (40, 30, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (40, 45, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (41, 65, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (41, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (41, 11, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (41, 45, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (41, 50, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (41, 24, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (41, 30, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (42, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '(((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & ((else))) & (r11))))', 'weight': 0, 'label': '(((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & ((else))) & (r11))))'}), (42, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (42, 45, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (42, 23, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (43, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))'}), (43, 65, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (43, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (44, 38, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (44, 40, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (44, 41, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (44, 19, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (44, 22, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (44, 58, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (45, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (45, 65, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (45, 50, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (45, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (46, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (46, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (46, 38, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (46, 23, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (47, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (47, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (47, 6, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (47, 38, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (48, 32, {'input': set([1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else))) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else))) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)))'}), (48, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))'}), (49, 41, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (49, 55, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (50, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (50, 44, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (50, 16, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (50, 18, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (50, 53, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (50, 54, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (50, 55, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (51, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))'}), (51, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (52, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (52, 41, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (52, 10, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (52, 23, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (52, 27, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (52, 28, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (52, 61, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (53, 34, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (53, 6, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (53, 38, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (53, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (53, 19, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (53, 54, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (53, 31, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (54, 65, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (54, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (54, 41, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (54, 50, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (54, 9, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (54, 61, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (54, 62, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (55, 65, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (55, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (55, 38, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (55, 52, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (55, 54, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (55, 20, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (55, 31, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (56, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))'}), (56, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (57, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (57, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (57, 54, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (57, 55, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (58, 32, {'input': set([2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | ((((((else)) & (r17)) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) | ((r16) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | ((((((else)) & (r17)) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) | ((r16) & (r17))) & (r11))))'}), (58, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (59, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (59, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (59, 45, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (59, 38, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (60, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))'}), (60, 41, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (60, 22, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (61, 65, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (61, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (61, 11, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (61, 45, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (61, 46, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (61, 17, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (61, 55, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (62, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (62, 7, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (62, 10, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (62, 45, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (62, 21, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (62, 23, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (62, 30, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (63, 40, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (63, 32, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))'}), (63, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (63, 41, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))'}), (64, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (65, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (65, 5, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (65, 10, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (65, 16, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (65, 54, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (65, 23, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (65, 29, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (66, 2, {'input': set([0, 4]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([2, 6]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (66, 38, {'input': set([8, 12]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (66, 43, {'input': set([9, 13]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (66, 45, {'input': set([1, 5]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (66, 48, {'input': set([11, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (66, 19, {'input': set([10, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (66, 26, {'input': set([3, 7]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'})]
		
11/17/2020 11:03:05 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     6 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     12 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     13 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
     14 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     19 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
     20 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     25 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     26 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     33 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     34 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     38 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     40 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     43 -> both=set([9, 11, 13, 15]) left=set([1, 3, 5, 7]) right=set([8, 10, 12, 14])
     45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     48 -> both=set([9, 10, 11, 13, 14, 15]) left=set([1, 2, 3, 5, 6, 7]) right=set([8, 12])
     49 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     51 -> both=set([9, 11, 13, 15]) left=set([1, 3, 5, 7]) right=set([8, 10, 12, 14])
     56 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     58 -> both=set([10, 11, 14, 15]) left=set([2, 3, 6, 7]) right=set([8, 9, 12, 13])
     59 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     60 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([8, 9, 10, 11, 12, 13, 14, 15])
     64 -> both=set([9, 11, 13, 15]) left=set([1, 3, 5, 7]) right=set([8, 10, 12, 14])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       12 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       13 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       26 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       34 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       40 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       43 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       48 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       49 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       51 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       56 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       57 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       58 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       59 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       60 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       64 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 11:03:05 PM DEBUG [spec] No of nodes: 67
11/17/2020 11:03:05 PM DEBUG [spec] No of edges: 384
11/17/2020 11:03:05 PM DEBUG 
End of translate


11/17/2020 11:03:05 PM INFO The bound of formula "[H^1 r2]^[0, 5] * ([H^3 r16]^[0, 7] | [H^3 r17]^[0, 7] | [H^3 r11]^[0, 7])" is (5, 13)!
11/17/2020 11:03:05 PM INFO Translated formula "[H^1 r2]^[0, 5] * ([H^3 r16]^[0, 7] | [H^3 r17]^[0, 7] | [H^3 r11]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 11:03:05 PM DEBUG [hold] Prop: r3 Duration: 1 Negation: False Props: set(['r16', 'r17', 'r11', 'r3'])
11/17/2020 11:03:05 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r3 )
11/17/2020 11:03:05 PM DEBUG [hold] Prop: r16 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r11', 'r3'])
11/17/2020 11:03:05 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r16 )
11/17/2020 11:03:05 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r11', 'r3'])
11/17/2020 11:03:05 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 11:03:05 PM INFO No trap states were added.
11/17/2020 11:03:05 PM INFO No trap states were added.
11/17/2020 11:03:05 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 11:03:05 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 11:03:05 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 11:03:05 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 11:03:05 PM DEBUG [union] DFA1: (Eventually (Hold 3 r16 ) 0 7 ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 11:03:05 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r11', 'r3'])
11/17/2020 11:03:05 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r11 )
11/17/2020 11:03:05 PM INFO No trap states were added.
11/17/2020 11:03:05 PM INFO No trap states were added.
11/17/2020 11:03:05 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r16 ) 0 7 ) (Eventually (Hold 3 r17 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r11 ) 0 7 )
11/17/2020 11:03:05 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r3 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r16 ) 0 7 ) (Eventually (Hold 3 r17 ) 0 7 ) ) (Eventually (Hold 3 r11 ) 0 7 ) )
11/17/2020 11:03:05 PM DEBUG [spec] spec: [H^1 r3]^[0, 5] * ([H^3 r16]^[0, 7] | [H^3 r17]^[0, 7] | [H^3 r11]^[0, 7])
11/17/2020 11:03:05 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r3 ) 0 5 ) (Union (Union (Eventually (Hold 3 r16 ) 0 7 ) (Eventually (Hold 3 r17 ) 0 7 ) ) (Eventually (Hold 3 r11 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r16': 1, 'r17': 2, 'r3': 8, 'r11': 4}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r3', 'weight': 0, 'label': u'r3'}), (1, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r3', 'weight': 0, 'label': u'r3'}), (2, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (2, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (2, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (2, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (2, 52, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (2, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (2, 4, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (3, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))'}), (3, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (3, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (4, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (4, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (4, 39, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (4, 8, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (4, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (4, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (4, 62, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (5, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (5, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (5, 15, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (5, 18, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (5, 52, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (5, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (5, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (6, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (6, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (6, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (6, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (7, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (7, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (7, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (7, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (8, 64, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (8, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (8, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (8, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (8, 11, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (8, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (8, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (9, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (9, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (9, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (9, 47, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (9, 17, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (9, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (9, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (10, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (10, 34, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (10, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (10, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (10, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (10, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (10, 60, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (11, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (11, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (11, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (11, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (12, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))'}), (12, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (13, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | (((((r16) & (r17)) | (((else)) & (r17))) & ((else))) | ((((r16) & ((else))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | (((((r16) & (r17)) | (((else)) & (r17))) & ((else))) | ((((r16) & ((else))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & (r11))))'}), (13, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))'}), (14, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (14, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (14, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (15, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (15, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (15, 14, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (15, 22, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (15, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (15, 27, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (16, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (16, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (16, 40, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (16, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (16, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (16, 25, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (16, 61, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (17, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (17, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (17, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (17, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (18, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (18, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (18, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (18, 42, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (18, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (18, 22, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (18, 62, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (19, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | ((((((else)) & (r17)) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) | ((r16) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | ((((((else)) & (r17)) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) | ((r16) & (r17))) & (r11))))'}), (19, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (20, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))'}), (20, 16, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (20, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (20, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (21, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (21, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (21, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (21, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (22, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))'}), (22, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (22, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (22, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (23, 34, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (23, 4, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (23, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (23, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (23, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (23, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (23, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (24, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (24, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (24, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (24, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (25, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (25, 17, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (25, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (25, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (26, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))'}), (26, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (27, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (27, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (27, 12, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (27, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (27, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (27, 26, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (27, 30, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (28, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (28, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (28, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (28, 17, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (28, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (28, 56, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (28, 26, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (29, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (29, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (29, 8, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (29, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (29, 40, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (29, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (29, 59, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (30, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (30, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (30, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (30, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (31, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & ((else))) & (r11))))', 'weight': 0, 'label': '(((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & ((else))) & (r11))))'}), (31, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (31, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (31, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (33, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (33, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (33, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (33, 31, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (34, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))'}), (34, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (34, 61, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (35, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (35, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (35, 16, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (35, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (35, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (35, 31, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (35, 63, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (36, 66, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (36, 8, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (36, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (36, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (36, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (36, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (36, 27, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (37, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r17)) & (r11)) | ((((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((r16) & ((else))) & (r11))))', 'weight': 0, 'label': '((((else)) & (r17)) & (r11)) | ((((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((r16) & ((else))) & (r11))))'}), (37, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (37, 34, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (37, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (38, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))'}), (38, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (38, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (38, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (39, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (39, 7, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (39, 43, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (39, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (39, 51, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (39, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (40, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (40, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (40, 30, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (40, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (41, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (41, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (41, 11, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (41, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (41, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (41, 24, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (41, 30, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (42, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & ((else))) & (r11))))', 'weight': 0, 'label': '(((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & ((else))) & (r11))))'}), (42, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (42, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (42, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (43, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))'}), (43, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (43, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (44, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (44, 40, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (44, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (44, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (44, 22, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (44, 58, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (45, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (45, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (45, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (45, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (46, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (46, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (46, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (46, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (47, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (47, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (47, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (47, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (48, 32, {'input': set([1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else))) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else))) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)))'}), (48, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))'}), (49, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (49, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (50, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (50, 44, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (50, 16, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (50, 18, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (50, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (50, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (50, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (51, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))'}), (51, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (52, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (52, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (52, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (52, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (52, 27, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (52, 28, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (52, 61, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (53, 34, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (53, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (53, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (53, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (53, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (53, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (53, 31, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (54, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (54, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (54, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (54, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (54, 9, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (54, 61, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (54, 62, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (55, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (55, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (55, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (55, 52, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (55, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (55, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (55, 31, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (56, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))'}), (56, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (57, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (57, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (57, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (57, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (58, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | ((((((else)) & (r17)) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) | ((r16) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | ((((((else)) & (r17)) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) | ((r16) & (r17))) & (r11))))'}), (58, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (59, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (59, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (59, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (59, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (60, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))'}), (60, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (60, 22, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (61, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (61, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (61, 11, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (61, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (61, 46, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (61, 17, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (61, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (62, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (62, 7, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (62, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (62, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (62, 21, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (62, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (62, 30, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (63, 40, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (63, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))'}), (63, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (63, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))'}), (64, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (65, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (65, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (65, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (65, 16, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (65, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (65, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (65, 29, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (66, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (66, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (66, 43, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (66, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (66, 48, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (66, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (66, 26, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'})]
		
11/17/2020 11:03:05 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     6 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     12 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     13 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     14 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     19 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     20 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     25 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     26 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     33 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     34 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     38 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     40 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     43 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 14, 6])
     45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     48 -> both=set([5, 6, 7, 13, 14, 15]) left=set([1, 2, 3, 9, 10, 11]) right=set([4, 12])
     49 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     51 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 14, 6])
     56 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     58 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     59 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     60 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     64 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 14, 6])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       12 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       13 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       26 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       34 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       40 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       43 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       48 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       49 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       51 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       56 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       57 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       58 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       59 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       60 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       64 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 11:03:05 PM DEBUG [spec] No of nodes: 67
11/17/2020 11:03:05 PM DEBUG [spec] No of edges: 384
11/17/2020 11:03:05 PM DEBUG 
End of translate


11/17/2020 11:03:05 PM INFO The bound of formula "[H^1 r3]^[0, 5] * ([H^3 r16]^[0, 7] | [H^3 r17]^[0, 7] | [H^3 r11]^[0, 7])" is (5, 13)!
11/17/2020 11:03:05 PM INFO Translated formula "[H^1 r3]^[0, 5] * ([H^3 r16]^[0, 7] | [H^3 r17]^[0, 7] | [H^3 r11]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 11:03:05 PM DEBUG [hold] Prop: r3 Duration: 1 Negation: False Props: set(['r16', 'r17', 'r11', 'r3'])
11/17/2020 11:03:05 PM DEBUG [eventually] Low: 0 High: 5 DFA: (Hold 1 r3 )
11/17/2020 11:03:05 PM DEBUG [hold] Prop: r16 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r11', 'r3'])
11/17/2020 11:03:05 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r16 )
11/17/2020 11:03:05 PM DEBUG [hold] Prop: r17 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r11', 'r3'])
11/17/2020 11:03:05 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r17 )
11/17/2020 11:03:05 PM INFO No trap states were added.
11/17/2020 11:03:05 PM INFO No trap states were added.
11/17/2020 11:03:05 PM DEBUG state: Eventually 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 11:03:05 PM DEBUG state: Hold 
 init: [(0, 3), (0, 0), (0, 1), (0, 2)]
 final: [(4, 4)]
11/17/2020 11:03:05 PM DEBUG state: Eventually 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 11:03:05 PM DEBUG state: Hold 
 init: [(3, 0), (0, 0), (1, 0), (2, 0)]
 final: [(4, 4)]
11/17/2020 11:03:05 PM DEBUG [union] DFA1: (Eventually (Hold 3 r16 ) 0 7 ) DFA2: (Eventually (Hold 3 r17 ) 0 7 )
11/17/2020 11:03:05 PM DEBUG [hold] Prop: r11 Duration: 3 Negation: False Props: set(['r16', 'r17', 'r11', 'r3'])
11/17/2020 11:03:05 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 3 r11 )
11/17/2020 11:03:05 PM INFO No trap states were added.
11/17/2020 11:03:05 PM INFO No trap states were added.
11/17/2020 11:03:05 PM DEBUG state: Union 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Eventually 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Hold 
 init: [(9, 1), (9, 0), (9, 3), (9, 2)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Eventually 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG state: Hold 
 init: [(3, 0), (8, 0), (14, 0), (4, 0), (9, 0), (15, 0), (5, 0), (10, 0), (0, 0), (11, 0), (16, 0), (1, 0), (7, 0), (12, 0), (2, 0), (13, 0)]
 final: [(6, 4)]
11/17/2020 11:03:05 PM DEBUG [union] DFA1: (Union (Eventually (Hold 3 r16 ) 0 7 ) (Eventually (Hold 3 r17 ) 0 7 ) ) DFA2: (Eventually (Hold 3 r11 ) 0 7 )
11/17/2020 11:03:05 PM DEBUG [concatenation] DFA1: (Eventually (Hold 1 r3 ) 0 5 ) DFA2: (Union (Union (Eventually (Hold 3 r16 ) 0 7 ) (Eventually (Hold 3 r17 ) 0 7 ) ) (Eventually (Hold 3 r11 ) 0 7 ) )
11/17/2020 11:03:05 PM DEBUG [spec] spec: [H^1 r3]^[0, 5] * ([H^3 r16]^[0, 7] | [H^3 r17]^[0, 7] | [H^3 r11]^[0, 7])
11/17/2020 11:03:05 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 1 r3 ) 0 5 ) (Union (Union (Eventually (Hold 3 r16 ) 0 7 ) (Eventually (Hold 3 r17 ) 0 7 ) ) (Eventually (Hold 3 r11 ) 0 7 ) ) )
Directed: True
Multi: False
Props: {'r16': 1, 'r17': 2, 'r3': 8, 'r11': 4}
Alphabet: set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) 
Initial: [0]
Final: set([32])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (12, {}), (13, {}), (14, {}), (15, {}), (16, {}), (17, {}), (18, {}), (19, {}), (20, {}), (21, {}), (22, {}), (23, {}), (24, {}), (25, {}), (26, {}), (27, {}), (28, {}), (29, {}), (30, {}), (31, {}), (32, {}), (33, {}), (34, {}), (35, {}), (36, {}), (37, {}), (38, {}), (39, {}), (40, {}), (41, {}), (42, {}), (43, {}), (44, {}), (45, {}), (46, {}), (47, {}), (48, {}), (49, {}), (50, {}), (51, {}), (52, {}), (53, {}), (54, {}), (55, {}), (56, {}), (57, {}), (58, {}), (59, {}), (60, {}), (61, {}), (62, {}), (63, {}), (64, {}), (65, {}), (66, {})]
Edges: [(0, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r3', 'weight': 0, 'label': u'r3'}), (1, 0, {'input': set([0, 1, 2, 3, 4, 5, 6, 7]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([8, 9, 10, 11, 12, 13, 14, 15]), 'guard': u'r3', 'weight': 0, 'label': u'r3'}), (2, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (2, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (2, 36, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (2, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (2, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (2, 52, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (2, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (2, 4, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (3, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))'}), (3, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (3, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (3, 27, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (3, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (4, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (4, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (4, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (4, 39, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (4, 8, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (4, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (4, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (4, 62, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (5, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (5, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (5, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (5, 15, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (5, 18, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (5, 52, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (5, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (5, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (6, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (6, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (6, 4, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (6, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (6, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (7, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (7, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (7, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (7, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (7, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (8, 64, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (8, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (8, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (8, 43, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (8, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (8, 11, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (8, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (8, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (9, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (9, 7, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (9, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (9, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (9, 47, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (9, 17, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (9, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (9, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (10, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (10, 34, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (10, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (10, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (10, 18, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (10, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (10, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (10, 60, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (11, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (11, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (11, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (11, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (11, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (12, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))'}), (12, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (12, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (13, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | (((((r16) & (r17)) | (((else)) & (r17))) & ((else))) | ((((r16) & ((else))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | (((((r16) & (r17)) | (((else)) & (r17))) & ((else))) | ((((r16) & ((else))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & (r11))))'}), (13, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (13, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))'}), (14, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (14, 26, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (14, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (14, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (15, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (15, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (15, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (15, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (15, 14, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (15, 22, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (15, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (15, 27, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (16, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (16, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (16, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (16, 40, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (16, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (16, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (16, 25, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (16, 61, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (17, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (17, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (17, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (17, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (17, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (18, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (18, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (18, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (18, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (18, 42, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (18, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (18, 22, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (18, 62, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (19, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | ((((((else)) & (r17)) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) | ((r16) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | ((((((else)) & (r17)) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) | ((r16) & (r17))) & (r11))))'}), (19, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (19, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (20, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))'}), (20, 16, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (20, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (20, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (20, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (21, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (21, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (21, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (21, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (21, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (22, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))'}), (22, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (22, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (22, 11, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (22, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (23, 34, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (23, 4, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (23, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (23, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (23, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (23, 49, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (23, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (23, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (24, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (24, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (24, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (24, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (24, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (25, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (25, 17, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (25, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (25, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (25, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (26, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))'}), (26, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (26, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (27, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (27, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (27, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (27, 12, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (27, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (27, 57, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (27, 26, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (27, 30, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (28, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (28, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (28, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (28, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (28, 17, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (28, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (28, 56, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (28, 26, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (29, 33, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (29, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (29, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (29, 8, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (29, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (29, 40, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (29, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (29, 59, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (30, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (30, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (30, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (30, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (30, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (31, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & ((else))) & (r11))))', 'weight': 0, 'label': '(((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & ((else))) & (r11))))'}), (31, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (31, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (31, 62, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (31, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (33, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (33, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (33, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (33, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (33, 31, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (34, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))'}), (34, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (34, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (34, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (34, 61, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (35, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (35, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (35, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (35, 16, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (35, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (35, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (35, 31, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (35, 63, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (36, 66, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (36, 8, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (36, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (36, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (36, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (36, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (36, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (36, 27, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (37, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r17)) & (r11)) | ((((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((r16) & ((else))) & (r11))))', 'weight': 0, 'label': '((((else)) & (r17)) & (r11)) | ((((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((r16) & ((else))) & (r11))))'}), (37, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (37, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (37, 34, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (37, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (38, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & (r17)) & (r11))))'}), (38, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (38, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (38, 52, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (38, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (39, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (39, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (39, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (39, 7, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (39, 43, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (39, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (39, 51, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (39, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (40, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (40, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (40, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (40, 30, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (40, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (41, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (41, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (41, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (41, 11, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (41, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (41, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (41, 24, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (41, 30, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (42, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '(((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & ((else))) & (r11))))', 'weight': 0, 'label': '(((r16) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((r16) & ((else))) & (r11))))'}), (42, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (42, 7, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (42, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (42, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (43, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))'}), (43, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (43, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (44, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (44, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (44, 40, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (44, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (44, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (44, 22, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (44, 58, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (45, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (45, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (45, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (45, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (45, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (46, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (46, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (46, 37, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (46, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (46, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (47, 32, {'input': set([1, 3, 5, 7, 9, 11, 13, 15]), 'guard': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((r16) & (r17))) & (r11)) | ((((r16) & ((else))) | ((r16) & (r17))) & ((else)))'}), (47, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (47, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (47, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (47, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (48, 32, {'input': set([1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else))) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else))) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)))'}), (48, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))'}), (49, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (49, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (49, 8, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (49, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (50, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (50, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (50, 44, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (50, 16, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (50, 18, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (50, 53, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (50, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (50, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (51, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))'}), (51, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (51, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (52, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (52, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (52, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (52, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (52, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (52, 27, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (52, 28, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (52, 61, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (53, 34, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (53, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (53, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (53, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (53, 13, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (53, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (53, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (53, 31, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (54, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (54, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (54, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (54, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (54, 50, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (54, 9, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (54, 61, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (54, 62, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (55, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (55, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (55, 3, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (55, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (55, 52, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (55, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (55, 20, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (55, 31, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (56, 32, {'input': set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]), 'guard': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))', 'weight': 0, 'label': '((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & (r11)) | ((((r16) & ((else))) | ((((else)) & (r17)) | ((r16) & (r17)))) & ((else)))'}), (56, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (56, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (57, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (57, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (57, 18, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (57, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (57, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (58, 32, {'input': set([2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | ((((((else)) & (r17)) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) | ((r16) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | ((((((else)) & (r17)) | ((r16) & (r17))) & ((else))) | (((((else)) & (r17)) | ((r16) & (r17))) & (r11))))'}), (58, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (58, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (59, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))', 'weight': 0, 'label': '(((((else)) & (r17)) | ((r16) & (r17))) & (r11)) | (((((else)) & (r17)) | ((r16) & (r17))) & ((else)))'}), (59, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (59, 43, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (59, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (59, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (60, 32, {'input': set([2, 3, 6, 7, 10, 11, 14, 15]), 'guard': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))', 'weight': 0, 'label': '((((r16) & (r17)) | (((else)) & (r17))) & (r11)) | ((((r16) & (r17)) | (((else)) & (r17))) & ((else)))'}), (60, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (60, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (60, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (60, 22, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (61, 65, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (61, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (61, 35, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (61, 11, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (61, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (61, 46, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (61, 17, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (61, 55, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (62, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (62, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (62, 7, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (62, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (62, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (62, 21, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (62, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (62, 30, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (63, 40, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (63, 32, {'input': set([4, 5, 6, 7, 12, 13, 14, 15]), 'guard': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))', 'weight': 0, 'label': '((((else)) & (r17)) & (r11)) | (((((else)) & ((else))) & (r11)) | ((((r16) & ((else))) & (r11)) | (((r16) & (r17)) & (r11))))'}), (63, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (63, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (63, 41, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (64, 32, {'input': set([1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15]), 'guard': '((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))', 'weight': 0, 'label': '((((else)) & ((else))) & (r11)) | (((((else)) & (r17)) & (r11)) | (((((r16) & ((else))) | ((r16) & (r17))) & ((else))) | ((((r16) & ((else))) | ((r16) & (r17))) & (r11))))'}), (64, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (64, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (65, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (65, 4, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (65, 5, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (65, 10, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (65, 16, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'}), (65, 54, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (65, 23, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (65, 29, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (66, 2, {'input': set([0, 8]), 'guard': '(((else)) & ((else))) & ((else))', 'weight': 0, 'label': '(((else)) & ((else))) & ((else))'}), (66, 6, {'input': set([2, 10]), 'guard': '(((else)) & (r17)) & ((else))', 'weight': 0, 'label': '(((else)) & (r17)) & ((else))'}), (66, 38, {'input': set([12, 4]), 'guard': '(((else)) & ((else))) & (r11)', 'weight': 0, 'label': '(((else)) & ((else))) & (r11)'}), (66, 43, {'input': set([13, 5]), 'guard': '((r16) & ((else))) & (r11)', 'weight': 0, 'label': '((r16) & ((else))) & (r11)'}), (66, 45, {'input': set([1, 9]), 'guard': '((r16) & ((else))) & ((else))', 'weight': 0, 'label': '((r16) & ((else))) & ((else))'}), (66, 48, {'input': set([7, 15]), 'guard': '((r16) & (r17)) & (r11)', 'weight': 0, 'label': '((r16) & (r17)) & (r11)'}), (66, 19, {'input': set([6, 14]), 'guard': '(((else)) & (r17)) & (r11)', 'weight': 0, 'label': '(((else)) & (r17)) & (r11)'}), (66, 26, {'input': set([3, 11]), 'guard': '((r16) & (r17)) & ((else))', 'weight': 0, 'label': '((r16) & (r17)) & ((else))'})]
		
11/17/2020 11:03:05 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([32])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([2])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([2])
 Right:
   Op: Union Flags[WDF, WWF, UNR]: True True False
   Init: set([2])
   Final: set([32])
   Choices:
     3 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     6 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     12 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     13 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     14 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     19 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     20 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     22 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     25 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     26 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     31 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     33 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     34 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     37 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     38 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     40 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     42 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     43 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 14, 6])
     45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     48 -> both=set([5, 6, 7, 13, 14, 15]) left=set([1, 2, 3, 9, 10, 11]) right=set([4, 12])
     49 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     51 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 14, 6])
     56 -> both=set([]) left=set([1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15]) right=set([])
     57 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     58 -> both=set([7, 6, 14, 15]) left=set([3, 2, 11, 10]) right=set([4, 12, 13, 5])
     59 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     60 -> both=set([]) left=set([2, 3, 6, 7, 10, 11, 14, 15]) right=set([])
     63 -> both=set([]) left=set([]) right=set([4, 5, 6, 7, 12, 13, 14, 15])
     64 -> both=set([7, 5, 13, 15]) left=set([3, 1, 11, 9]) right=set([4, 12, 14, 6])
   Left:
     Op: Union Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Choices:
       6 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       7 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       11 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       12 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       13 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       17 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       19 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       21 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       24 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       25 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       26 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       30 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       33 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       34 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       40 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       43 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       45 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       46 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       47 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       48 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       49 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       51 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
       56 -> both=set([3, 7, 11, 15]) left=set([1, 9, 13, 5]) right=set([2, 6, 10, 14])
       57 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       58 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       59 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       60 -> both=set([]) left=set([]) right=set([2, 3, 6, 7, 10, 11, 14, 15])
       64 -> both=set([]) left=set([1, 3, 5, 7, 9, 11, 13, 15]) right=set([])
     Left:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
     Right:
       Op: Eventually Flags[WDF, WWF, UNR]: True True False
       Init: set([2])
       Final: set([32])
       Left:
         Op: Hold Flags[WDF, WWF, UNR]: True True True
         Init: set([2])
         Final: set([32])
   Right:
     Op: Eventually Flags[WDF, WWF, UNR]: True True False
     Init: set([2])
     Final: set([32])
     Left:
       Op: Hold Flags[WDF, WWF, UNR]: True True True
       Init: set([2])
       Final: set([32])

11/17/2020 11:03:05 PM DEBUG [spec] No of nodes: 67
11/17/2020 11:03:05 PM DEBUG [spec] No of edges: 384
11/17/2020 11:03:05 PM DEBUG 
End of translate


11/17/2020 11:03:05 PM INFO The bound of formula "[H^1 r3]^[0, 5] * ([H^3 r16]^[0, 7] | [H^3 r17]^[0, 7] | [H^3 r11]^[0, 7])" is (5, 13)!
11/17/2020 11:03:05 PM INFO Translated formula "[H^1 r3]^[0, 5] * ([H^3 r16]^[0, 7] | [H^3 r17]^[0, 7] | [H^3 r11]^[0, 7])" to infinity DFA of size (67, 384)!
11/17/2020 11:03:05 PM DEBUG 

Start policy computation

11/17/2020 11:03:05 PM DEBUG [extend_ts] TS: (15, 73) ETS:(15, 73)
11/17/2020 11:03:05 PM DEBUG [extend_ts] TS: (15, 73) ETS:(15, 73)
11/17/2020 11:03:05 PM DEBUG [extend_ts] TS: (15, 73) ETS:(15, 73)
11/17/2020 11:03:05 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 11:03:05 PM INFO Product automaton size is: (50, 232)
11/17/2020 11:03:05 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 11:03:05 PM INFO Product automaton size is: (50, 232)
11/17/2020 11:03:05 PM INFO Constructing product automaton with infinity DFA!
11/17/2020 11:03:05 PM INFO Product automaton size is: (50, 232)
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:05 PM DEBUG []
11/17/2020 11:03:31 PM INFO Max deadline: 6
11/17/2020 11:03:31 PM INFO Generated control policy is: Base1 -> 1 -> r7 -> 1 -> r2 -> 1 -> r2 -> 1 -> r8 -> 1 -> r15 -> 1 -> r16 -> 1 -> r16 -> 1 -> r16 -> 1 -> r16
11/17/2020 11:03:31 PM INFO Max deadline: 6
11/17/2020 11:03:31 PM INFO Generated control policy is: Base2 -> 1 -> r8 -> 1 -> r3 -> 1 -> r3 -> 1 -> r8 -> 1 -> r15 -> 1 -> r16 -> 1 -> r16 -> 1 -> r16 -> 1 -> r16
11/17/2020 11:03:31 PM INFO Max deadline: 6
11/17/2020 11:03:31 PM INFO Generated control policy is: Base3 -> 1 -> r7 -> 1 -> r8 -> 1 -> r3 -> 1 -> r3 -> 1 -> r8 -> 1 -> r15 -> 1 -> r16 -> 1 -> r16 -> 1 -> r16 -> 1 -> r16
