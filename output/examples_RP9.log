01/06/2020 07:11:24 PM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/06/2020 07:11:24 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/06/2020 07:11:24 PM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/06/2020 07:11:24 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/06/2020 07:11:24 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/06/2020 07:11:24 PM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/06/2020 07:11:24 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/06/2020 07:11:24 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/06/2020 07:11:24 PM DEBUG [spec] No of nodes: 6
01/06/2020 07:11:24 PM DEBUG [spec] No of edges: 10
01/06/2020 07:11:24 PM DEBUG 
End of translate


01/06/2020 07:11:24 PM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/06/2020 07:11:24 PM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/06/2020 07:11:24 PM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/06/2020 07:11:24 PM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/06/2020 07:11:24 PM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/06/2020 07:11:24 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/06/2020 07:11:24 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/06/2020 07:11:24 PM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/06/2020 07:11:24 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/06/2020 07:11:24 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/06/2020 07:11:24 PM DEBUG [spec] No of nodes: 6
01/06/2020 07:11:24 PM DEBUG [spec] No of edges: 10
01/06/2020 07:11:24 PM DEBUG 
End of translate


01/06/2020 07:11:24 PM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/06/2020 07:11:24 PM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/06/2020 07:11:24 PM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/06/2020 07:11:24 PM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/06/2020 07:11:24 PM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/06/2020 07:11:24 PM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/06/2020 07:11:24 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/06/2020 07:11:24 PM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/06/2020 07:11:24 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/06/2020 07:11:24 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/06/2020 07:11:24 PM DEBUG [spec] No of nodes: 6
01/06/2020 07:11:24 PM DEBUG [spec] No of edges: 10
01/06/2020 07:11:24 PM DEBUG 
End of translate


01/06/2020 07:11:24 PM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/06/2020 07:11:24 PM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/06/2020 07:11:24 PM DEBUG 

Start policy computation

01/06/2020 07:45:58 PM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/06/2020 07:45:58 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/06/2020 07:45:58 PM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/06/2020 07:45:58 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/06/2020 07:45:58 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/06/2020 07:45:58 PM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/06/2020 07:45:58 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/06/2020 07:45:58 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/06/2020 07:45:58 PM DEBUG [spec] No of nodes: 6
01/06/2020 07:45:58 PM DEBUG [spec] No of edges: 10
01/06/2020 07:45:58 PM DEBUG 
End of translate


01/06/2020 07:45:58 PM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/06/2020 07:45:58 PM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/06/2020 07:45:58 PM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/06/2020 07:45:58 PM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/06/2020 07:45:58 PM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/06/2020 07:45:58 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/06/2020 07:45:58 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/06/2020 07:45:58 PM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/06/2020 07:45:58 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/06/2020 07:45:58 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/06/2020 07:45:58 PM DEBUG [spec] No of nodes: 6
01/06/2020 07:45:58 PM DEBUG [spec] No of edges: 10
01/06/2020 07:45:58 PM DEBUG 
End of translate


01/06/2020 07:45:58 PM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/06/2020 07:45:58 PM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/06/2020 07:45:58 PM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/06/2020 07:45:58 PM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/06/2020 07:45:58 PM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/06/2020 07:45:58 PM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/06/2020 07:45:58 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/06/2020 07:45:58 PM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/06/2020 07:45:58 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/06/2020 07:45:58 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/06/2020 07:45:58 PM DEBUG [spec] No of nodes: 6
01/06/2020 07:45:58 PM DEBUG [spec] No of edges: 10
01/06/2020 07:45:58 PM DEBUG 
End of translate


01/06/2020 07:45:58 PM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/06/2020 07:45:58 PM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/06/2020 07:45:58 PM DEBUG 

Start policy computation

01/06/2020 07:48:06 PM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/06/2020 07:55:51 PM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/06/2020 07:55:51 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/06/2020 07:55:51 PM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/06/2020 07:55:51 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/06/2020 07:55:51 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/06/2020 07:55:51 PM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/06/2020 07:55:51 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/06/2020 07:55:51 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/06/2020 07:55:51 PM DEBUG [spec] No of nodes: 6
01/06/2020 07:55:51 PM DEBUG [spec] No of edges: 10
01/06/2020 07:55:51 PM DEBUG 
End of translate


01/06/2020 07:55:51 PM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/06/2020 07:55:51 PM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/06/2020 07:55:51 PM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/06/2020 07:55:51 PM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/06/2020 07:55:51 PM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/06/2020 07:55:51 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/06/2020 07:55:51 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/06/2020 07:55:51 PM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/06/2020 07:55:51 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/06/2020 07:55:51 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/06/2020 07:55:51 PM DEBUG [spec] No of nodes: 6
01/06/2020 07:55:51 PM DEBUG [spec] No of edges: 10
01/06/2020 07:55:51 PM DEBUG 
End of translate


01/06/2020 07:55:51 PM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/06/2020 07:55:51 PM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/06/2020 07:55:51 PM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/06/2020 07:55:51 PM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/06/2020 07:55:51 PM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/06/2020 07:55:51 PM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/06/2020 07:55:51 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/06/2020 07:55:51 PM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/06/2020 07:55:51 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/06/2020 07:55:51 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/06/2020 07:55:51 PM DEBUG [spec] No of nodes: 6
01/06/2020 07:55:51 PM DEBUG [spec] No of edges: 10
01/06/2020 07:55:51 PM DEBUG 
End of translate


01/06/2020 07:55:51 PM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/06/2020 07:55:51 PM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/06/2020 07:55:51 PM DEBUG 

Start policy computation

01/06/2020 07:55:51 PM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/06/2020 07:55:51 PM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/06/2020 07:55:51 PM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/06/2020 07:55:51 PM INFO Constructing product automaton with infinity DFA!
01/06/2020 07:55:51 PM INFO Product automaton size is: (214, 3485)
01/06/2020 07:55:51 PM INFO Constructing product automaton with infinity DFA!
01/06/2020 07:55:51 PM INFO Product automaton size is: (214, 3485)
01/06/2020 07:55:51 PM INFO Constructing product automaton with infinity DFA!
01/06/2020 07:55:51 PM INFO Product automaton size is: (214, 3480)
01/06/2020 11:45:31 PM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/06/2020 11:45:31 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/06/2020 11:45:31 PM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/06/2020 11:45:31 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/06/2020 11:45:31 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/06/2020 11:45:31 PM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/06/2020 11:45:31 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/06/2020 11:45:31 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/06/2020 11:45:31 PM DEBUG [spec] No of nodes: 6
01/06/2020 11:45:31 PM DEBUG [spec] No of edges: 10
01/06/2020 11:45:31 PM DEBUG 
End of translate


01/06/2020 11:45:31 PM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/06/2020 11:45:31 PM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/06/2020 11:45:31 PM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/06/2020 11:45:31 PM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/06/2020 11:45:31 PM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/06/2020 11:45:31 PM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/06/2020 11:45:31 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/06/2020 11:45:31 PM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/06/2020 11:45:31 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/06/2020 11:45:31 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/06/2020 11:45:31 PM DEBUG [spec] No of nodes: 6
01/06/2020 11:45:31 PM DEBUG [spec] No of edges: 10
01/06/2020 11:45:31 PM DEBUG 
End of translate


01/06/2020 11:45:31 PM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/06/2020 11:45:31 PM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/06/2020 11:45:31 PM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/06/2020 11:45:31 PM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/06/2020 11:45:31 PM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/06/2020 11:45:31 PM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/06/2020 11:45:31 PM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/06/2020 11:45:31 PM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/06/2020 11:45:31 PM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/06/2020 11:45:31 PM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/06/2020 11:45:31 PM DEBUG [spec] No of nodes: 6
01/06/2020 11:45:31 PM DEBUG [spec] No of edges: 10
01/06/2020 11:45:31 PM DEBUG 
End of translate


01/06/2020 11:45:31 PM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/06/2020 11:45:31 PM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/06/2020 11:45:31 PM DEBUG 

Start policy computation

01/06/2020 11:45:31 PM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/06/2020 11:45:31 PM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/06/2020 11:45:31 PM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/06/2020 11:45:31 PM INFO Constructing product automaton with infinity DFA!
01/06/2020 11:45:31 PM INFO Product automaton size is: (214, 3485)
01/06/2020 11:45:31 PM INFO Constructing product automaton with infinity DFA!
01/06/2020 11:45:32 PM INFO Product automaton size is: (214, 3485)
01/06/2020 11:45:32 PM INFO Constructing product automaton with infinity DFA!
01/06/2020 11:45:32 PM INFO Product automaton size is: (214, 3480)
01/07/2020 12:04:20 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:04:20 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/07/2020 12:04:20 AM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:04:20 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/07/2020 12:04:20 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/07/2020 12:04:20 AM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/07/2020 12:04:20 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/07/2020 12:04:20 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:04:20 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:04:20 AM DEBUG [spec] No of edges: 10
01/07/2020 12:04:20 AM DEBUG 
End of translate


01/07/2020 12:04:20 AM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/07/2020 12:04:20 AM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:04:20 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:04:20 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/07/2020 12:04:20 AM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:04:20 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/07/2020 12:04:20 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/07/2020 12:04:20 AM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/07/2020 12:04:20 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/07/2020 12:04:20 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:04:20 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:04:20 AM DEBUG [spec] No of edges: 10
01/07/2020 12:04:20 AM DEBUG 
End of translate


01/07/2020 12:04:20 AM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/07/2020 12:04:20 AM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:04:20 AM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:04:20 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/07/2020 12:04:20 AM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:04:20 AM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/07/2020 12:04:20 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/07/2020 12:04:20 AM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/07/2020 12:04:20 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/07/2020 12:04:20 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:04:20 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:04:20 AM DEBUG [spec] No of edges: 10
01/07/2020 12:04:20 AM DEBUG 
End of translate


01/07/2020 12:04:20 AM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/07/2020 12:04:20 AM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/07/2020 12:04:20 AM DEBUG 

Start policy computation

01/07/2020 12:04:20 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:04:20 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:04:20 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:04:20 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:16:55 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:16:55 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/07/2020 12:16:55 AM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:16:55 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/07/2020 12:16:55 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/07/2020 12:16:55 AM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/07/2020 12:16:55 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/07/2020 12:16:55 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:16:55 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:16:55 AM DEBUG [spec] No of edges: 10
01/07/2020 12:16:55 AM DEBUG 
End of translate


01/07/2020 12:16:55 AM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/07/2020 12:16:55 AM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:16:55 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:16:55 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/07/2020 12:16:55 AM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:16:55 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/07/2020 12:16:55 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/07/2020 12:16:55 AM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/07/2020 12:16:55 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/07/2020 12:16:55 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:16:55 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:16:55 AM DEBUG [spec] No of edges: 10
01/07/2020 12:16:55 AM DEBUG 
End of translate


01/07/2020 12:16:55 AM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/07/2020 12:16:55 AM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:16:55 AM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:16:55 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/07/2020 12:16:55 AM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:16:55 AM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/07/2020 12:16:55 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/07/2020 12:16:55 AM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/07/2020 12:16:55 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/07/2020 12:16:55 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:16:55 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:16:55 AM DEBUG [spec] No of edges: 10
01/07/2020 12:16:55 AM DEBUG 
End of translate


01/07/2020 12:16:55 AM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/07/2020 12:16:55 AM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/07/2020 12:16:55 AM DEBUG 

Start policy computation

01/07/2020 12:16:55 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:16:55 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:16:55 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:16:55 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:17:35 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:17:35 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/07/2020 12:17:35 AM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:17:35 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/07/2020 12:17:35 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/07/2020 12:17:35 AM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/07/2020 12:17:35 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/07/2020 12:17:35 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:17:35 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:17:35 AM DEBUG [spec] No of edges: 10
01/07/2020 12:17:35 AM DEBUG 
End of translate


01/07/2020 12:17:35 AM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/07/2020 12:17:35 AM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:17:35 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:17:35 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/07/2020 12:17:35 AM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:17:35 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/07/2020 12:17:35 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/07/2020 12:17:35 AM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/07/2020 12:17:35 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/07/2020 12:17:35 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:17:35 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:17:35 AM DEBUG [spec] No of edges: 10
01/07/2020 12:17:35 AM DEBUG 
End of translate


01/07/2020 12:17:35 AM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/07/2020 12:17:35 AM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:17:35 AM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:17:35 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/07/2020 12:17:35 AM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:17:35 AM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/07/2020 12:17:35 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/07/2020 12:17:35 AM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/07/2020 12:17:35 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/07/2020 12:17:35 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:17:35 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:17:35 AM DEBUG [spec] No of edges: 10
01/07/2020 12:17:35 AM DEBUG 
End of translate


01/07/2020 12:17:35 AM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/07/2020 12:17:35 AM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/07/2020 12:17:35 AM DEBUG 

Start policy computation

01/07/2020 12:17:35 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:17:35 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:17:36 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:17:36 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:22:53 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:22:53 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/07/2020 12:22:53 AM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:22:53 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/07/2020 12:22:53 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/07/2020 12:22:53 AM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/07/2020 12:22:53 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/07/2020 12:22:53 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:22:53 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:22:53 AM DEBUG [spec] No of edges: 10
01/07/2020 12:22:53 AM DEBUG 
End of translate


01/07/2020 12:22:53 AM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/07/2020 12:22:53 AM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:22:53 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:22:53 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/07/2020 12:22:53 AM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:22:53 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/07/2020 12:22:53 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/07/2020 12:22:53 AM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/07/2020 12:22:53 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/07/2020 12:22:53 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:22:53 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:22:53 AM DEBUG [spec] No of edges: 10
01/07/2020 12:22:53 AM DEBUG 
End of translate


01/07/2020 12:22:53 AM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/07/2020 12:22:53 AM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:22:53 AM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:22:53 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/07/2020 12:22:53 AM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:22:53 AM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/07/2020 12:22:53 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/07/2020 12:22:53 AM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/07/2020 12:22:53 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/07/2020 12:22:53 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:22:53 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:22:53 AM DEBUG [spec] No of edges: 10
01/07/2020 12:22:53 AM DEBUG 
End of translate


01/07/2020 12:22:53 AM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/07/2020 12:22:53 AM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/07/2020 12:22:53 AM DEBUG 

Start policy computation

01/07/2020 12:22:53 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:22:53 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:22:53 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:22:53 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:30:09 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:30:09 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/07/2020 12:30:09 AM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:30:09 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/07/2020 12:30:09 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/07/2020 12:30:09 AM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/07/2020 12:30:09 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/07/2020 12:30:09 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:30:09 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:30:09 AM DEBUG [spec] No of edges: 10
01/07/2020 12:30:09 AM DEBUG 
End of translate


01/07/2020 12:30:09 AM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/07/2020 12:30:09 AM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:30:09 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:30:09 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/07/2020 12:30:09 AM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:30:09 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/07/2020 12:30:09 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/07/2020 12:30:09 AM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/07/2020 12:30:09 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/07/2020 12:30:09 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:30:09 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:30:09 AM DEBUG [spec] No of edges: 10
01/07/2020 12:30:09 AM DEBUG 
End of translate


01/07/2020 12:30:09 AM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/07/2020 12:30:09 AM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:30:09 AM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:30:09 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/07/2020 12:30:09 AM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:30:09 AM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/07/2020 12:30:09 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/07/2020 12:30:09 AM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/07/2020 12:30:09 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/07/2020 12:30:09 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:30:09 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:30:09 AM DEBUG [spec] No of edges: 10
01/07/2020 12:30:09 AM DEBUG 
End of translate


01/07/2020 12:30:09 AM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/07/2020 12:30:09 AM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/07/2020 12:30:09 AM DEBUG 

Start policy computation

01/07/2020 12:30:09 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:30:09 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:30:09 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:30:09 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:30:32 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:30:32 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/07/2020 12:30:32 AM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:30:32 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/07/2020 12:30:32 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/07/2020 12:30:32 AM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/07/2020 12:30:32 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/07/2020 12:30:32 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:30:32 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:30:32 AM DEBUG [spec] No of edges: 10
01/07/2020 12:30:32 AM DEBUG 
End of translate


01/07/2020 12:30:32 AM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/07/2020 12:30:32 AM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:30:32 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:30:32 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/07/2020 12:30:32 AM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:30:32 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/07/2020 12:30:32 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/07/2020 12:30:32 AM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/07/2020 12:30:32 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/07/2020 12:30:32 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:30:32 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:30:32 AM DEBUG [spec] No of edges: 10
01/07/2020 12:30:32 AM DEBUG 
End of translate


01/07/2020 12:30:32 AM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/07/2020 12:30:32 AM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:30:32 AM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:30:32 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/07/2020 12:30:32 AM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:30:32 AM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/07/2020 12:30:32 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/07/2020 12:30:32 AM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/07/2020 12:30:32 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/07/2020 12:30:32 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:30:32 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:30:32 AM DEBUG [spec] No of edges: 10
01/07/2020 12:30:32 AM DEBUG 
End of translate


01/07/2020 12:30:32 AM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/07/2020 12:30:32 AM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/07/2020 12:30:32 AM DEBUG 

Start policy computation

01/07/2020 12:30:32 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:30:32 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:30:32 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:30:32 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:33:38 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:33:38 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/07/2020 12:33:38 AM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:33:38 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/07/2020 12:33:38 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/07/2020 12:33:38 AM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/07/2020 12:33:38 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/07/2020 12:33:38 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:33:38 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:33:38 AM DEBUG [spec] No of edges: 10
01/07/2020 12:33:38 AM DEBUG 
End of translate


01/07/2020 12:33:38 AM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/07/2020 12:33:38 AM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:33:38 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:33:38 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/07/2020 12:33:38 AM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:33:38 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/07/2020 12:33:38 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/07/2020 12:33:38 AM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/07/2020 12:33:38 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/07/2020 12:33:38 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:33:38 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:33:38 AM DEBUG [spec] No of edges: 10
01/07/2020 12:33:38 AM DEBUG 
End of translate


01/07/2020 12:33:38 AM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/07/2020 12:33:38 AM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:33:38 AM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:33:38 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/07/2020 12:33:38 AM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:33:38 AM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/07/2020 12:33:38 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/07/2020 12:33:38 AM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/07/2020 12:33:38 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/07/2020 12:33:38 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:33:38 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:33:38 AM DEBUG [spec] No of edges: 10
01/07/2020 12:33:38 AM DEBUG 
End of translate


01/07/2020 12:33:38 AM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/07/2020 12:33:38 AM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/07/2020 12:33:38 AM DEBUG 

Start policy computation

01/07/2020 12:33:38 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:33:38 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:33:38 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:33:38 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:35:28 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:35:28 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/07/2020 12:35:28 AM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:35:28 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/07/2020 12:35:28 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/07/2020 12:35:28 AM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/07/2020 12:35:28 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/07/2020 12:35:28 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:35:28 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:35:28 AM DEBUG [spec] No of edges: 10
01/07/2020 12:35:28 AM DEBUG 
End of translate


01/07/2020 12:35:28 AM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/07/2020 12:35:28 AM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:35:28 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:35:28 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/07/2020 12:35:28 AM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:35:28 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/07/2020 12:35:28 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/07/2020 12:35:28 AM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/07/2020 12:35:28 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/07/2020 12:35:28 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:35:28 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:35:28 AM DEBUG [spec] No of edges: 10
01/07/2020 12:35:28 AM DEBUG 
End of translate


01/07/2020 12:35:28 AM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/07/2020 12:35:28 AM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:35:28 AM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:35:28 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/07/2020 12:35:28 AM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:35:28 AM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/07/2020 12:35:28 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/07/2020 12:35:28 AM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/07/2020 12:35:28 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/07/2020 12:35:28 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:35:28 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:35:28 AM DEBUG [spec] No of edges: 10
01/07/2020 12:35:28 AM DEBUG 
End of translate


01/07/2020 12:35:28 AM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/07/2020 12:35:28 AM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/07/2020 12:35:28 AM DEBUG 

Start policy computation

01/07/2020 12:35:28 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:35:28 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:35:29 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:35:29 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:35:29 AM INFO Product automaton size is: (214, 3485)
01/07/2020 12:35:29 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:35:29 AM INFO Product automaton size is: (214, 3485)
01/07/2020 12:35:29 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:35:29 AM INFO Product automaton size is: (214, 3480)
01/07/2020 12:41:10 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:41:10 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/07/2020 12:41:10 AM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:41:10 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/07/2020 12:41:10 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/07/2020 12:41:10 AM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/07/2020 12:41:10 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/07/2020 12:41:10 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:41:10 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:41:10 AM DEBUG [spec] No of edges: 10
01/07/2020 12:41:10 AM DEBUG 
End of translate


01/07/2020 12:41:10 AM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/07/2020 12:41:10 AM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:41:10 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:41:10 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/07/2020 12:41:10 AM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:41:10 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/07/2020 12:41:10 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/07/2020 12:41:10 AM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/07/2020 12:41:10 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/07/2020 12:41:10 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:41:10 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:41:10 AM DEBUG [spec] No of edges: 10
01/07/2020 12:41:10 AM DEBUG 
End of translate


01/07/2020 12:41:10 AM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/07/2020 12:41:10 AM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:41:10 AM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:41:10 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/07/2020 12:41:10 AM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:41:10 AM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/07/2020 12:41:10 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/07/2020 12:41:10 AM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/07/2020 12:41:10 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/07/2020 12:41:10 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:41:10 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:41:10 AM DEBUG [spec] No of edges: 10
01/07/2020 12:41:10 AM DEBUG 
End of translate


01/07/2020 12:41:10 AM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/07/2020 12:41:10 AM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/07/2020 12:41:10 AM DEBUG 

Start policy computation

01/07/2020 12:41:10 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:41:11 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:41:11 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:41:11 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:41:11 AM INFO Product automaton size is: (214, 3485)
01/07/2020 12:41:11 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:41:11 AM INFO Product automaton size is: (214, 3485)
01/07/2020 12:41:11 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:41:11 AM INFO Product automaton size is: (214, 3480)
01/07/2020 12:42:16 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:42:16 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/07/2020 12:42:16 AM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:42:16 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/07/2020 12:42:16 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/07/2020 12:42:16 AM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/07/2020 12:42:16 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/07/2020 12:42:16 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:42:16 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:42:16 AM DEBUG [spec] No of edges: 10
01/07/2020 12:42:16 AM DEBUG 
End of translate


01/07/2020 12:42:16 AM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/07/2020 12:42:16 AM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:42:16 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:42:16 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/07/2020 12:42:16 AM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:42:16 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/07/2020 12:42:16 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/07/2020 12:42:16 AM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/07/2020 12:42:16 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/07/2020 12:42:16 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:42:16 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:42:16 AM DEBUG [spec] No of edges: 10
01/07/2020 12:42:16 AM DEBUG 
End of translate


01/07/2020 12:42:16 AM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/07/2020 12:42:16 AM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:42:16 AM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:42:16 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/07/2020 12:42:16 AM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:42:16 AM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/07/2020 12:42:16 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/07/2020 12:42:16 AM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/07/2020 12:42:16 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/07/2020 12:42:16 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:42:16 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:42:16 AM DEBUG [spec] No of edges: 10
01/07/2020 12:42:16 AM DEBUG 
End of translate


01/07/2020 12:42:16 AM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/07/2020 12:42:16 AM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/07/2020 12:42:16 AM DEBUG 

Start policy computation

01/07/2020 12:42:16 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:42:16 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:42:16 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:42:16 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:42:16 AM INFO Product automaton size is: (214, 3485)
01/07/2020 12:42:16 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:42:16 AM INFO Product automaton size is: (214, 3485)
01/07/2020 12:42:16 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:42:16 AM INFO Product automaton size is: (214, 3480)
01/07/2020 12:55:23 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:55:23 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/07/2020 12:55:23 AM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:55:23 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/07/2020 12:55:23 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/07/2020 12:55:23 AM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/07/2020 12:55:23 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/07/2020 12:55:23 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:55:23 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:55:23 AM DEBUG [spec] No of edges: 10
01/07/2020 12:55:23 AM DEBUG 
End of translate


01/07/2020 12:55:23 AM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/07/2020 12:55:23 AM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:55:23 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:55:23 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/07/2020 12:55:23 AM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:55:23 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/07/2020 12:55:23 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/07/2020 12:55:23 AM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/07/2020 12:55:23 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/07/2020 12:55:23 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:55:23 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:55:23 AM DEBUG [spec] No of edges: 10
01/07/2020 12:55:23 AM DEBUG 
End of translate


01/07/2020 12:55:23 AM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/07/2020 12:55:23 AM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:55:23 AM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:55:23 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/07/2020 12:55:23 AM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:55:23 AM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/07/2020 12:55:23 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/07/2020 12:55:23 AM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/07/2020 12:55:23 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/07/2020 12:55:23 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:55:23 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:55:23 AM DEBUG [spec] No of edges: 10
01/07/2020 12:55:23 AM DEBUG 
End of translate


01/07/2020 12:55:23 AM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/07/2020 12:55:23 AM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/07/2020 12:55:23 AM DEBUG 

Start policy computation

01/07/2020 12:55:23 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:55:23 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:55:23 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:55:23 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:55:23 AM INFO Product automaton size is: (214, 3485)
01/07/2020 12:55:23 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:55:23 AM INFO Product automaton size is: (214, 3485)
01/07/2020 12:55:23 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:55:23 AM INFO Product automaton size is: (214, 3480)
01/07/2020 12:56:06 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:56:06 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/07/2020 12:56:06 AM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/07/2020 12:56:06 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/07/2020 12:56:06 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/07/2020 12:56:06 AM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/07/2020 12:56:06 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/07/2020 12:56:06 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:56:06 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:56:06 AM DEBUG [spec] No of edges: 10
01/07/2020 12:56:06 AM DEBUG 
End of translate


01/07/2020 12:56:06 AM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/07/2020 12:56:06 AM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:56:06 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:56:06 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/07/2020 12:56:06 AM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/07/2020 12:56:06 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/07/2020 12:56:06 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/07/2020 12:56:06 AM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/07/2020 12:56:06 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/07/2020 12:56:06 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:56:06 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:56:06 AM DEBUG [spec] No of edges: 10
01/07/2020 12:56:06 AM DEBUG 
End of translate


01/07/2020 12:56:06 AM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/07/2020 12:56:06 AM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 12:56:06 AM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:56:06 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/07/2020 12:56:06 AM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/07/2020 12:56:06 AM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/07/2020 12:56:06 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/07/2020 12:56:06 AM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/07/2020 12:56:06 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/07/2020 12:56:06 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 12:56:06 AM DEBUG [spec] No of nodes: 6
01/07/2020 12:56:06 AM DEBUG [spec] No of edges: 10
01/07/2020 12:56:06 AM DEBUG 
End of translate


01/07/2020 12:56:06 AM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/07/2020 12:56:06 AM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/07/2020 12:56:06 AM DEBUG 

Start policy computation

01/07/2020 12:56:06 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:56:06 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:56:06 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 12:56:06 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:56:06 AM INFO Product automaton size is: (214, 3485)
01/07/2020 12:56:06 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:56:06 AM INFO Product automaton size is: (214, 3485)
01/07/2020 12:56:06 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 12:56:06 AM INFO Product automaton size is: (214, 3480)
01/07/2020 01:02:37 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/07/2020 01:02:37 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/07/2020 01:02:37 AM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/07/2020 01:02:37 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/07/2020 01:02:37 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/07/2020 01:02:37 AM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/07/2020 01:02:37 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/07/2020 01:02:37 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 01:02:37 AM DEBUG [spec] No of nodes: 6
01/07/2020 01:02:37 AM DEBUG [spec] No of edges: 10
01/07/2020 01:02:37 AM DEBUG 
End of translate


01/07/2020 01:02:37 AM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/07/2020 01:02:37 AM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 01:02:37 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/07/2020 01:02:37 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/07/2020 01:02:37 AM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/07/2020 01:02:37 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/07/2020 01:02:37 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/07/2020 01:02:37 AM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/07/2020 01:02:37 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/07/2020 01:02:37 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 01:02:37 AM DEBUG [spec] No of nodes: 6
01/07/2020 01:02:37 AM DEBUG [spec] No of edges: 10
01/07/2020 01:02:37 AM DEBUG 
End of translate


01/07/2020 01:02:37 AM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/07/2020 01:02:37 AM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 01:02:37 AM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/07/2020 01:02:37 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/07/2020 01:02:37 AM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/07/2020 01:02:37 AM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/07/2020 01:02:37 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/07/2020 01:02:37 AM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/07/2020 01:02:37 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/07/2020 01:02:37 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 01:02:37 AM DEBUG [spec] No of nodes: 6
01/07/2020 01:02:37 AM DEBUG [spec] No of edges: 10
01/07/2020 01:02:37 AM DEBUG 
End of translate


01/07/2020 01:02:37 AM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/07/2020 01:02:37 AM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/07/2020 01:02:37 AM DEBUG 

Start policy computation

01/07/2020 01:02:37 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 01:02:37 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 01:02:37 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 01:02:37 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 01:02:38 AM INFO Product automaton size is: (214, 3485)
01/07/2020 01:02:38 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 01:02:38 AM INFO Product automaton size is: (214, 3485)
01/07/2020 01:02:38 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 01:02:38 AM INFO Product automaton size is: (214, 3480)
01/07/2020 01:05:04 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/07/2020 01:05:04 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/07/2020 01:05:04 AM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/07/2020 01:05:04 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/07/2020 01:05:04 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/07/2020 01:05:04 AM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/07/2020 01:05:04 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/07/2020 01:05:04 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 01:05:04 AM DEBUG [spec] No of nodes: 6
01/07/2020 01:05:04 AM DEBUG [spec] No of edges: 10
01/07/2020 01:05:04 AM DEBUG 
End of translate


01/07/2020 01:05:04 AM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/07/2020 01:05:04 AM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 01:05:04 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/07/2020 01:05:04 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/07/2020 01:05:04 AM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/07/2020 01:05:04 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/07/2020 01:05:04 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/07/2020 01:05:04 AM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/07/2020 01:05:04 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/07/2020 01:05:04 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 01:05:04 AM DEBUG [spec] No of nodes: 6
01/07/2020 01:05:04 AM DEBUG [spec] No of edges: 10
01/07/2020 01:05:04 AM DEBUG 
End of translate


01/07/2020 01:05:04 AM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/07/2020 01:05:04 AM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 01:05:04 AM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/07/2020 01:05:04 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/07/2020 01:05:04 AM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/07/2020 01:05:04 AM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/07/2020 01:05:04 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/07/2020 01:05:04 AM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/07/2020 01:05:04 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/07/2020 01:05:04 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 01:05:04 AM DEBUG [spec] No of nodes: 6
01/07/2020 01:05:04 AM DEBUG [spec] No of edges: 10
01/07/2020 01:05:04 AM DEBUG 
End of translate


01/07/2020 01:05:04 AM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/07/2020 01:05:04 AM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/07/2020 01:05:04 AM DEBUG 

Start policy computation

01/07/2020 01:05:04 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 01:05:04 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 01:05:04 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 01:05:04 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 01:05:04 AM INFO Product automaton size is: (214, 3485)
01/07/2020 01:05:04 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 01:05:04 AM INFO Product automaton size is: (214, 3485)
01/07/2020 01:05:04 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 01:05:04 AM INFO Product automaton size is: (214, 3480)
01/07/2020 01:07:13 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/07/2020 01:07:13 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/07/2020 01:07:13 AM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/07/2020 01:07:13 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/07/2020 01:07:13 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/07/2020 01:07:13 AM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/07/2020 01:07:13 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/07/2020 01:07:13 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 01:07:13 AM DEBUG [spec] No of nodes: 6
01/07/2020 01:07:13 AM DEBUG [spec] No of edges: 10
01/07/2020 01:07:13 AM DEBUG 
End of translate


01/07/2020 01:07:13 AM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/07/2020 01:07:13 AM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 01:07:13 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/07/2020 01:07:13 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/07/2020 01:07:13 AM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/07/2020 01:07:13 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/07/2020 01:07:13 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/07/2020 01:07:13 AM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/07/2020 01:07:13 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/07/2020 01:07:13 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 01:07:13 AM DEBUG [spec] No of nodes: 6
01/07/2020 01:07:13 AM DEBUG [spec] No of edges: 10
01/07/2020 01:07:13 AM DEBUG 
End of translate


01/07/2020 01:07:13 AM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/07/2020 01:07:13 AM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 01:07:13 AM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/07/2020 01:07:13 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/07/2020 01:07:13 AM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/07/2020 01:07:13 AM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/07/2020 01:07:13 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/07/2020 01:07:13 AM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/07/2020 01:07:13 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/07/2020 01:07:13 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 01:07:13 AM DEBUG [spec] No of nodes: 6
01/07/2020 01:07:13 AM DEBUG [spec] No of edges: 10
01/07/2020 01:07:13 AM DEBUG 
End of translate


01/07/2020 01:07:13 AM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/07/2020 01:07:13 AM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/07/2020 01:07:13 AM DEBUG 

Start policy computation

01/07/2020 01:07:13 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 01:07:13 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 01:07:14 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 01:07:14 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 01:07:14 AM INFO Product automaton size is: (214, 3485)
01/07/2020 01:07:14 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 01:07:14 AM INFO Product automaton size is: (214, 3485)
01/07/2020 01:07:14 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 01:07:14 AM INFO Product automaton size is: (214, 3480)
01/07/2020 01:08:33 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/07/2020 01:08:33 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/07/2020 01:08:33 AM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/07/2020 01:08:33 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/07/2020 01:08:33 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/07/2020 01:08:33 AM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/07/2020 01:08:33 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/07/2020 01:08:33 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 01:08:33 AM DEBUG [spec] No of nodes: 6
01/07/2020 01:08:33 AM DEBUG [spec] No of edges: 10
01/07/2020 01:08:33 AM DEBUG 
End of translate


01/07/2020 01:08:33 AM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/07/2020 01:08:33 AM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 01:08:33 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/07/2020 01:08:33 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/07/2020 01:08:33 AM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/07/2020 01:08:33 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/07/2020 01:08:33 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/07/2020 01:08:33 AM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/07/2020 01:08:33 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/07/2020 01:08:33 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 01:08:33 AM DEBUG [spec] No of nodes: 6
01/07/2020 01:08:33 AM DEBUG [spec] No of edges: 10
01/07/2020 01:08:33 AM DEBUG 
End of translate


01/07/2020 01:08:33 AM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/07/2020 01:08:33 AM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 01:08:33 AM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/07/2020 01:08:33 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/07/2020 01:08:33 AM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/07/2020 01:08:33 AM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/07/2020 01:08:33 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/07/2020 01:08:33 AM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/07/2020 01:08:33 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/07/2020 01:08:33 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 01:08:33 AM DEBUG [spec] No of nodes: 6
01/07/2020 01:08:33 AM DEBUG [spec] No of edges: 10
01/07/2020 01:08:33 AM DEBUG 
End of translate


01/07/2020 01:08:33 AM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/07/2020 01:08:33 AM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/07/2020 01:08:33 AM DEBUG 

Start policy computation

01/07/2020 01:08:33 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 01:08:33 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 01:08:33 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 01:08:33 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 01:08:33 AM INFO Product automaton size is: (214, 3485)
01/07/2020 01:08:33 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 01:08:33 AM INFO Product automaton size is: (214, 3485)
01/07/2020 01:08:33 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 01:08:33 AM INFO Product automaton size is: (214, 3480)
01/07/2020 01:15:33 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r12', 'r21'])
01/07/2020 01:15:33 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 2 r21 )
01/07/2020 01:15:33 AM DEBUG [hold] Prop: r12 Duration: 1 Negation: False Props: set(['r12', 'r21'])
01/07/2020 01:15:33 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r12 )
01/07/2020 01:15:33 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 7 ) DFA2: (Eventually (Hold 1 r12 ) 0 7 )
01/07/2020 01:15:33 AM DEBUG [spec] spec: [H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]
01/07/2020 01:15:33 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 7 ) (Eventually (Hold 1 r12 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r12': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r12', 'weight': 0, 'label': u'r12'})]
		
01/07/2020 01:15:33 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 01:15:33 AM DEBUG [spec] No of nodes: 6
01/07/2020 01:15:33 AM DEBUG [spec] No of edges: 10
01/07/2020 01:15:33 AM DEBUG 
End of translate


01/07/2020 01:15:33 AM INFO The bound of formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" is (4, 15)!
01/07/2020 01:15:33 AM INFO Translated formula "[H^2 r21]^[0, 7] * [H^1 r12]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 01:15:33 AM DEBUG [hold] Prop: r21 Duration: 2 Negation: False Props: set(['r23', 'r21'])
01/07/2020 01:15:33 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r21 )
01/07/2020 01:15:33 AM DEBUG [hold] Prop: r23 Duration: 1 Negation: False Props: set(['r23', 'r21'])
01/07/2020 01:15:33 AM DEBUG [eventually] Low: 0 High: 7 DFA: (Hold 1 r23 )
01/07/2020 01:15:33 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r21 ) 0 8 ) DFA2: (Eventually (Hold 1 r23 ) 0 7 )
01/07/2020 01:15:33 AM DEBUG [spec] spec: [H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]
01/07/2020 01:15:33 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r21 ) 0 8 ) (Eventually (Hold 1 r23 ) 0 7 ) )
Directed: True
Multi: False
Props: {'r23': 1, 'r21': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (1, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (2, 0, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([2, 3]), 'guard': u'r21', 'weight': 0, 'label': u'r21'}), (3, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'}), (4, 3, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([1, 3]), 'guard': u'r23', 'weight': 0, 'label': u'r23'})]
		
01/07/2020 01:15:33 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 01:15:33 AM DEBUG [spec] No of nodes: 6
01/07/2020 01:15:33 AM DEBUG [spec] No of edges: 10
01/07/2020 01:15:33 AM DEBUG 
End of translate


01/07/2020 01:15:33 AM INFO The bound of formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" is (4, 16)!
01/07/2020 01:15:33 AM INFO Translated formula "[H^2 r21]^[0, 8] * [H^1 r23]^[0, 7]" to infinity DFA of size (6, 10)!
01/07/2020 01:15:33 AM DEBUG [hold] Prop: r31 Duration: 2 Negation: False Props: set(['r31', 'r10'])
01/07/2020 01:15:33 AM DEBUG [eventually] Low: 0 High: 8 DFA: (Hold 2 r31 )
01/07/2020 01:15:33 AM DEBUG [hold] Prop: r10 Duration: 1 Negation: False Props: set(['r31', 'r10'])
01/07/2020 01:15:33 AM DEBUG [eventually] Low: 0 High: 10 DFA: (Hold 1 r10 )
01/07/2020 01:15:33 AM DEBUG [concatenation] DFA1: (Eventually (Hold 2 r31 ) 0 8 ) DFA2: (Eventually (Hold 1 r10 ) 0 10 )
01/07/2020 01:15:33 AM DEBUG [spec] spec: [H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]
01/07/2020 01:15:33 AM DEBUG [spec] mode: Infinity DFA: 
Name: (Concat (Eventually (Hold 2 r31 ) 0 8 ) (Eventually (Hold 1 r10 ) 0 10 ) )
Directed: True
Multi: False
Props: {'r31': 1, 'r10': 2}
Alphabet: set([0, 1, 2, 3]) 
Initial: [0]
Final: set([5])
Nodes: [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {})]
Edges: [(0, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (0, 1, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (1, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (1, 2, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (2, 0, {'input': set([0, 2]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (2, 3, {'input': set([1, 3]), 'guard': u'r31', 'weight': 0, 'label': u'r31'}), (3, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (3, 4, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'}), (4, 3, {'input': set([0, 1]), 'guard': '(else)', 'weight': 0, 'label': '(else)'}), (4, 5, {'input': set([2, 3]), 'guard': u'r10', 'weight': 0, 'label': u'r10'})]
		
01/07/2020 01:15:33 AM DEBUG [spec] tree:
 Op: Concatenation Flags[WDF, WWF, UNR]: True True False
 Init: set([0])
 Final: set([5])
 Left:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([0])
   Final: set([3])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([0])
     Final: set([3])
 Right:
   Op: Eventually Flags[WDF, WWF, UNR]: True True False
   Init: set([3])
   Final: set([5])
   Left:
     Op: Hold Flags[WDF, WWF, UNR]: True True True
     Init: set([3])
     Final: set([5])

01/07/2020 01:15:33 AM DEBUG [spec] No of nodes: 6
01/07/2020 01:15:33 AM DEBUG [spec] No of edges: 10
01/07/2020 01:15:33 AM DEBUG 
End of translate


01/07/2020 01:15:33 AM INFO The bound of formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" is (4, 19)!
01/07/2020 01:15:33 AM INFO Translated formula "[H^2 r31]^[0, 8] * [H^1 r10]^[0, 10]" to infinity DFA of size (6, 10)!
01/07/2020 01:15:33 AM DEBUG 

Start policy computation

01/07/2020 01:15:33 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 01:15:33 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 01:15:33 AM DEBUG [extend_ts] TS: (106, 1734) ETS:(106, 1734)
01/07/2020 01:15:33 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 01:15:33 AM INFO Product automaton size is: (214, 3485)
01/07/2020 01:15:33 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 01:15:33 AM INFO Product automaton size is: (214, 3485)
01/07/2020 01:15:33 AM INFO Constructing product automaton with infinity DFA!
01/07/2020 01:15:33 AM INFO Product automaton size is: (214, 3480)
